[
    {
      "question": "how many mac models used motorola 68040 processors?",
      "qid": "3205922013000_grailqa",
      "source": "grailqa",
      "entities": {
        "mac": "m.0zd6",
        "Motorola 68040": "m.05397"
      },
      "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.0zd6) (JOIN computer.computer.processor m.05397))))",
      "actions": [
        "get_relations(m.0zd6)",
        "get_neighbors(m.0zd6,computer.computer.includes_models)",
        "get_relations(m.05397)",
        "get_neighbors(m.05397,computer.computer_processor.used_in_computers)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "abū rayḥān al-bīrūnī works in what department of university",
      "qid": "4301362010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Abū Rayḥān al-Bīrūnī": "m.01ny93",
        "university": "m.0j_sncb"
      },
      "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.01ny93)) (JOIN (R education.university.departments) m.0j_sncb)))",
      "actions": [
        "get_relations(m.01ny93)",
        "get_neighbors(m.01ny93,education.academic.research_areas)",
        "get_relations(#0)",
        "get_neighbors(#0,education.field_of_study.academic_departments)",
        "get_relations(m.0j_sncb)",
        "get_neighbors(m.0j_sncb,education.university.departments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dl5_c_",
          "entity_name": "University of Florida Department of History"
        }
      ]
    },
    {
      "question": "identify the tropical cyclones that are in the same category with hurricane marie and also affected eastern north america.",
      "qid": "4300198000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Hurricane Marie": "m.011q1wmr",
        "Eastern North America": "m.01xs1j8"
      },
      "s_expression": "(AND meteorology.tropical_cyclone (AND (JOIN (R meteorology.tropical_cyclone_category.tropical_cyclones) (JOIN (R meteorology.tropical_cyclone.category) m.011q1wmr)) (JOIN meteorology.tropical_cyclone.affected_areas m.01xs1j8)))",
      "actions": [
        "get_relations(m.011q1wmr)",
        "get_neighbors(m.011q1wmr,meteorology.tropical_cyclone.category)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
        "get_relations(m.01xs1j8)",
        "get_neighbors(m.01xs1j8,meteorology.cyclone_affected_area.cyclones)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07nnlb",
          "entity_name": "Hurricane Katrina"
        }
      ]
    },
    {
      "question": "find the camera storage type that is supported by olympus fe-130 and the digital camera with iso setting of 2000.",
      "qid": "4302372004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Olympus FE-130": "m.03q2k5k",
        "2000": "m.04l497s"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.04l497s)) (JOIN (R digicams.digital_camera.supported_storage_types) m.03q2k5k)))",
      "actions": [
        "get_relations(m.04l497s)",
        "get_neighbors(m.04l497s,digicams.camera_iso.cameras)",
        "get_relations(#0)",
        "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.03q2k5k)",
        "get_neighbors(m.03q2k5k,digicams.digital_camera.supported_storage_types)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02zmtt",
          "entity_name": "xD-Picture Card"
        }
      ]
    },
    {
      "question": "which martial art has the same category as silat and has internal?",
      "qid": "4301064012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Silat": "m.03hfzm1",
        "Internal": "m.02_yl6z"
      },
      "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.03hfzm1)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.02_yl6z)))",
      "actions": [
        "get_relations(m.03hfzm1)",
        "get_neighbors(m.03hfzm1,martial_arts.martial_art.category)",
        "get_relations(#0)",
        "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
        "get_relations(m.02_yl6z)",
        "get_neighbors(m.02_yl6z,martial_arts.martial_art_category.martial_arts)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07k4r",
          "entity_name": "Tai chi"
        }
      ]
    },
    {
      "question": "list all quotations from nikodemos that are addressed to whom “equality must be maintained, if it is promised.” was addressed to.",
      "qid": "4302343002000_grailqa",
      "source": "grailqa",
      "entities": {
        "nikodemos": "m.0cpg05_",
        "“Equality must be maintained, if it is promised.”": "m.0cvbnm3"
      },
      "s_expression": "(AND media_common.quotation_addressee (AND (JOIN media_common.quotation_addressee.quotations (JOIN (R fictional_universe.fictional_character.quotations) m.0cpg05_)) (JOIN media_common.quotation_addressee.quotations m.0cvbnm3)))",
      "actions": [
        "get_relations(m.0cpg05_)",
        "get_neighbors(m.0cpg05_,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.addressee)",
        "get_relations(m.0cvbnm3)",
        "get_neighbors(m.0cvbnm3,media_common.quotation.addressee)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cpg042",
          "entity_name": "Charon"
        }
      ]
    },
    {
      "question": "which song is the longest song of handel: messiah (dublin version, 1742) ?",
      "qid": "4301467006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Handel: Messiah (Dublin Version, 1742)": "m.03xxf2z"
      },
      "s_expression": "(ARGMAX (AND music.recording (JOIN (R music.release.track) (JOIN (R music.album.releases) m.03xxf2z))) music.recording.length)",
      "actions": [
        "get_relations(m.03xxf2z)",
        "get_neighbors(m.03xxf2z,music.album.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.track)",
        "get_attributes(#1)",
        "argmax(#1,music.recording.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.017nbgl",
          "entity_name": "The Messiah, Part 3 (Nos. 45-53): Aria, the Trumpet Shall Sound"
        }
      ]
    },
    {
      "question": "which is the longest release track of recordings that baeho \"bobby\" shin has written?",
      "qid": "4300020012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Baeho \"Bobby\" Shin": "m.012cr5h8"
      },
      "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.012cr5h8))) music.release_track.length)",
      "actions": [
        "get_relations(m.012cr5h8)",
        "get_neighbors(m.012cr5h8,music.engineer.tracks_engineered)",
        "get_relations(#0)",
        "get_neighbors(#0,music.recording.tracks)",
        "get_attributes(#1)",
        "argmax(#1,music.release_track.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.012c1xs6",
          "entity_name": "Bliss"
        }
      ]
    },
    {
      "question": "what is the subject of the quote what is faith but a kind of betting or speculation after all? it should be, i bet that my redeemer liveth. which was spoken quoted by the angel of remembrance?",
      "qid": "4300443013000_grailqa",
      "source": "grailqa",
      "entities": {
        "What is faith but a kind of betting or speculation after all? It should be, I bet that my Redeemer liveth.": "m.048g4sk",
        "Angel of Remembrance": "m.0h3grm9"
      },
      "s_expression": "(AND media_common.quotation_subject (AND (JOIN (R media_common.quotation.subjects) (JOIN media_common.quotation.spoken_by_character m.0h3grm9)) (JOIN (R media_common.quotation.subjects) m.048g4sk)))",
      "actions": [
        "get_relations(m.0h3grm9)",
        "get_neighbors(m.0h3grm9,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.subjects)",
        "get_relations(m.048g4sk)",
        "get_neighbors(m.048g4sk,media_common.quotation.subjects)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02zq2",
          "entity_name": "Faith"
        }
      ]
    },
    {
      "question": "the nissan cefiro and the model with predecesser renault is included in what class of automobiles?",
      "qid": "4301079014000_grailqa",
      "source": "grailqa",
      "entities": {
        "renault": "m.032b7p",
        "Nissan Cefiro": "m.03vynb"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples (JOIN (R automotive.model.predecessor) m.032b7p)) (JOIN automotive.automotive_class.examples m.03vynb)))",
      "actions": [
        "get_relations(m.032b7p)",
        "get_neighbors(m.032b7p,automotive.model.predecessor)",
        "get_relations(#0)",
        "get_neighbors(#0,automotive.model.automotive_class)",
        "get_relations(m.03vynb)",
        "get_neighbors(m.03vynb,automotive.model.automotive_class)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.016gvg",
          "entity_name": "Station Wagon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.021mp2",
          "entity_name": "Sedan"
        }
      ]
    },
    {
      "question": "What is the predominant language of the region where \"Into the Arms of Strangers: Stories of the Kindertransport\" was located?",
      "qid": "WebQTrn-1215_20ae9a3ac5a1d4d40671f15de04edb15_cwq",
      "source": "cwq",
      "entities": {
        "Into the Arms of Strangers: Stories of the Kindertransport": "m.0bd1d4"
      },
      "s_expression": "(JOIN (R location.country.languages_spoken) (AND (JOIN (R language.human_language.main_country) common.topic) (JOIN film.film_location.featured_in_films m.0bd1d4)))",
      "actions": [
        "get_relations(common.topic)",
        "get_neighbors(common.topic,language.human_language.main_country)",
        "get_relations(m.0bd1d4)",
        "get_neighbors(m.0bd1d4,film.film.featured_film_locations)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,location.country.languages_spoken)"
      ],
      "answer": [
        {
          "answer_argument": "m.05p2d",
          "answer_type": "Entity",
          "entity_name": "Old English"
        }
      ]
    },
    {
      "question": "name the camera storage type supported by konica minolta dimage g600 and a digital camera with an iso setting of 64.",
      "qid": "4302372010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Konica Minolta DiMAGE G600": "m.03q2r5h",
        "64": "m.04l497_"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.04l497_)) (JOIN (R digicams.digital_camera.supported_storage_types) m.03q2r5h)))",
      "actions": [
        "get_relations(m.04l497_)",
        "get_neighbors(m.04l497_,digicams.camera_iso.cameras)",
        "get_relations(#0)",
        "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.03q2r5h)",
        "get_neighbors(m.03q2r5h,digicams.digital_camera.supported_storage_types)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tthm",
          "entity_name": "Secure Digital"
        }
      ]
    },
    {
      "question": "what is the number of infectious diseases that are transmitted by the deer tick?",
      "qid": "4303160014000_grailqa",
      "source": "grailqa",
      "entities": {
        "deer tick": "m.02qmvh1"
      },
      "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.02qmvh1)))))",
      "actions": [
        "get_relations(m.02qmvh1)",
        "get_neighbors(m.02qmvh1,medicine.vector_of_disease.disease)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
        "get_relations(#1)",
        "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "133"
        }
      ]
    },
    {
      "question": "national endowment for the humanities owns what amount of in development websites?",
      "qid": "3206340000000_grailqa",
      "source": "grailqa",
      "entities": {
        "In Development": "m.02j7jcv",
        "National Endowment for the Humanities": "m.036mh3"
      },
      "s_expression": "(COUNT (AND internet.website (AND (JOIN internet.website.status m.02j7jcv) (JOIN (R internet.website_owner.websites_owned) m.036mh3))))",
      "actions": [
        "get_relations(m.02j7jcv)",
        "get_neighbors(m.02j7jcv,internet.website_status.sites)",
        "get_relations(m.036mh3)",
        "get_neighbors(m.036mh3,internet.website_owner.websites_owned)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "Who was the vice president when the person who said \"I destroy my enemy when I make him my friend\" died?",
      "qid": "WebQTrn-1777_524b7e7fa855202f18ffd7e8c6bdb6c6_cwq",
      "source": "cwq",
      "entities": {
        "\"I destroy my enemy when I make him my friend\"": "m.048cz_5"
      },
      "s_expression": "(ARGMAX (JOIN (R government.us_president.vice_president) (JOIN people.person.quotations m.048cz_5)) government.us_vice_president.vice_president_number)",
      "actions": [
        "get_relations(m.048cz_5)",
        "get_neighbors(m.048cz_5,media_common.quotation.author)",
        "get_relations(#0)",
        "get_neighbors(#0,government.us_president.vice_president)",
        "get_attributes(#1)",
        "argmax(#1,government.us_vice_president.vice_president_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.0rmg",
          "answer_type": "Entity",
          "entity_name": "Andrew Johnson"
        }
      ]
    },
    {
      "question": "which artwork on canvases was created in the era of tillmans?",
      "qid": "4301655009000_grailqa",
      "source": "grailqa",
      "entities": {
        "tillmans": "m.01bl47",
        "canvases": "m.0jmpt"
      },
      "s_expression": "(AND visual_art.artwork (AND (JOIN visual_art.artwork.period_or_movement (JOIN visual_art.art_period_movement.associated_artists m.01bl47)) (JOIN visual_art.artwork.support m.0jmpt)))",
      "actions": [
        "get_relations(m.01bl47)",
        "get_neighbors(m.01bl47,visual_art.visual_artist.associated_periods_or_movements)",
        "get_relations(#0)",
        "get_neighbors(#0,visual_art.art_period_movement.associated_artworks)",
        "get_relations(m.0jmpt)",
        "get_neighbors(m.0jmpt,visual_art.visual_art_support.artworks)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.051stx3",
          "entity_name": "Golden Meadows"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv01",
          "entity_name": "Renewal"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051stx0",
          "entity_name": "Silhouette"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051st_p",
          "entity_name": "Moody Blues"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv8w",
          "entity_name": "Exile"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051stxd",
          "entity_name": "Rapture"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svk0",
          "entity_name": "Tribute to Innes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv07",
          "entity_name": "Deja Blue"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv8s",
          "entity_name": "Too Close For Comfort"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cg_bdg",
          "entity_name": "New York #2"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv94",
          "entity_name": "Elders II"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svjy",
          "entity_name": "Crescendo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svk6",
          "entity_name": "Sultry"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051stwr",
          "entity_name": "Truce"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cg_9z5",
          "entity_name": "New York"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051stwv",
          "entity_name": "Matter of Time"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svkh",
          "entity_name": "Harmony Triptych"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svjr",
          "entity_name": "Horizon VI"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv91",
          "entity_name": "Moment In Time"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051stxh",
          "entity_name": "Between Heaven and Earth"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051stwn",
          "entity_name": "Trinity"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qbcgg",
          "entity_name": "Head (I)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv8p",
          "entity_name": "Amber Fields"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svjv",
          "entity_name": "Tree's IX"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051stx9",
          "entity_name": "Insight"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svk9",
          "entity_name": "Common Ground"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051st_w",
          "entity_name": "Last Stand"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svk3",
          "entity_name": "Tree's Company"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051stx6",
          "entity_name": "White Trees On Blue"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051st_s",
          "entity_name": "Reunion"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv0b",
          "entity_name": "Alchemy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svkd",
          "entity_name": "Sacred Ground"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv97",
          "entity_name": "Tempered Spirits"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv8h",
          "entity_name": "Unity"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv8l",
          "entity_name": "Black Trees on Red"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv8z",
          "entity_name": "Standing Room Only"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv04",
          "entity_name": "Entourage"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv0f",
          "entity_name": "The Congregation"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051stwy",
          "entity_name": "Second Glance"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051st_z",
          "entity_name": "Six of One"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sshw",
          "entity_name": "Room With A View"
        }
      ]
    },
    {
      "question": "which operas was the most recently performed?",
      "qid": "4303240004000_grailqa",
      "source": "grailqa",
      "entities": {
        "operas": "m.05lls"
      },
      "s_expression": "(ARGMAX (AND music.composition (JOIN music.composition.form (JOIN music.compositional_form.superforms m.05lls))) music.composition.date_of_first_performance)",
      "actions": [
        "get_relations(m.05lls)",
        "get_neighbors(m.05lls,music.compositional_form.subforms)",
        "get_relations(#0)",
        "get_neighbors(#0,music.compositional_form.compositions)",
        "get_attributes(#1)",
        "argmax(#1,music.composition.date_of_first_performance)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0d56c",
          "entity_name": "Die Walküre"
        }
      ]
    },
    {
      "question": "what is the programming language influenced by muf and the program language paradigm used by moo?",
      "qid": "4300798002000_grailqa",
      "source": "grailqa",
      "entities": {
        "MOO": "m.0521z",
        "MUF": "m.02m_jv"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.0521z) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.02m_jv))))",
      "actions": [
        "get_relations(m.0521z)",
        "get_neighbors(m.0521z,computer.programming_language.language_paradigms)",
        "get_relations(m.02m_jv)",
        "get_neighbors(m.02m_jv,computer.programming_language.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.programming_language.language_paradigms)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gkc5",
          "entity_name": "Prototype-based programming"
        }
      ]
    },
    {
      "question": "Which year did the team coached by Byron Scott first win a championship?",
      "qid": "WebQTrn-2411_d5ca01950a8247452ff5fd1eeff977f4_cwq",
      "source": "cwq",
      "entities": {
        "Byron Scott": "m.05jdzr"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN basketball.basketball_team.head_coach m.05jdzr)) time.event.start_date)",
      "actions": [
        "get_relations(m.05jdzr)",
        "get_neighbors(m.05jdzr,basketball.basketball_coach.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0ct81k",
          "answer_type": "Entity",
          "entity_name": "1949 BAA Finals"
        }
      ]
    },
    {
      "question": "for those casinos owned by the same guy as bellagio casino, which one has the least rooms?",
      "qid": "496000102_graphquestions",
      "source": "graphquestions",
      "entities": {
        "bellagio casino": "m.033bxs"
      },
      "s_expression": "(ARGMIN (AND base.casinos.casino (JOIN (R base.casinos.casino_owner.casinos_owned) (JOIN base.casinos.casino_owner.casinos_owned m.033bxs))) base.casinos.casino.rooms)",
      "actions": [
        "get_relations(m.033bxs)",
        "get_neighbors(m.033bxs,base.casinos.casino.owner)",
        "get_relations(#0)",
        "get_neighbors(#0,base.casinos.casino_owner.casinos_owned)",
        "get_attributes(#1)",
        "argmin(#1,base.casinos.casino.rooms)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0937y7",
          "entity_name": "Nevada Landing Hotel and Casino"
        }
      ]
    },
    {
      "question": "hailing from the same place as 1st louisiana native guard, which military units took part in the battle of gettysburg?",
      "qid": "250000000_graphquestions",
      "source": "graphquestions",
      "entities": {
        "Battle of Gettysburg": "m.01jnm",
        "1st Louisiana Native Guard": "m.0hr6dl9"
      },
      "s_expression": "(AND base.americancivilwar.military_unit (AND (JOIN military.military_unit.place_of_origin (JOIN (R military.military_unit.place_of_origin) m.0hr6dl9)) (JOIN base.americancivilwar.military_unit.conflicts_participated_in m.01jnm)))",
      "actions": [
        "get_relations(m.0hr6dl9)",
        "get_neighbors(m.0hr6dl9,military.military_unit.place_of_origin)",
        "get_relations(#0)",
        "get_neighbors(#0,military.military_unit_place_of_origin.military_units)",
        "get_relations(m.01jnm)",
        "get_neighbors(m.01jnm,base.americancivilwar.battle.military_units_involved_in_this_conflict)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04gjww9",
          "entity_name": "10th Louisiana Infantry"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l684",
          "entity_name": "15th Louisiana Infantry Regiment"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l66_",
          "entity_name": "14th Louisiana Infantry Regiment"
        }
      ]
    },
    {
      "question": "which fictional character lives in lemurian windows into any place or time of law & order?",
      "qid": "4300742014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Lemurian windows into any place or time": "m.0cbrvwy",
        "Law & Order": "m.0hz_w6w"
      },
      "s_expression": "(AND fictional_universe.fictional_character (JOIN fictional_universe.fictional_character.places_lived (AND (JOIN fictional_universe.fictional_setting.setting_type m.0cbrvwy) (JOIN (R fictional_universe.fictional_universe.locations) m.0hz_w6w))))",
      "actions": [
        "get_relations(m.0cbrvwy)",
        "get_neighbors(m.0cbrvwy,fictional_universe.type_of_fictional_setting.settings)",
        "get_relations(m.0hz_w6w)",
        "get_neighbors(m.0hz_w6w,fictional_universe.fictional_universe.locations)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,fictional_universe.fictional_setting.characters_that_have_lived_here)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0262164",
          "entity_name": "Sheldon Hawkes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01d5g",
          "entity_name": "Bruce Wayne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08070t",
          "entity_name": "Peter Clemenza"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gbv76r",
          "entity_name": "Stevie Nichols"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0h7y2f",
          "entity_name": "Claire Bennet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1217c9h2",
          "entity_name": "Emma Coolidge"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c0b19n",
          "entity_name": "Cime"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.122qmg44",
          "entity_name": "Daphne Millbrook"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025t7qs",
          "entity_name": "Mac Taylor"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gghrw2",
          "entity_name": "Kaito Nakamura"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0h28lx9",
          "entity_name": "Joss Carter"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0h2c7kt",
          "entity_name": "John Reese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09npt5t",
          "entity_name": "Dana Barrett"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cmdvzt",
          "entity_name": "Jo Danville"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.012bzfhl",
          "entity_name": "Jo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.010lcfrc",
          "entity_name": "Richie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gghrt7",
          "entity_name": "Ishi Nakamura"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.121764rk",
          "entity_name": "null"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qszr5",
          "entity_name": "Adam Ross"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gbv5h0",
          "entity_name": "Mason Greyback"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pn5g9",
          "entity_name": "Sid Hammerback"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.122161km",
          "entity_name": "null"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0285h49",
          "entity_name": "Donald Flack, Jr."
        }
      ]
    },
    {
      "question": "What clay animation movie was directed by Ron Howard?",
      "qid": "WebQTest-323_89b51a451adec20d7f73c07f7fec7cee_cwq",
      "source": "cwq",
      "entities": {
        "Ron Howard": "m.0g2lq",
        "Clay animation": "m.02fcct"
      },
      "s_expression": "(AND (JOIN (R film.director.film) m.0g2lq) (JOIN film.film.genre (JOIN media_common.media_genre.child_genres m.02fcct)))",
      "actions": [
        "get_relations(m.0g2lq)",
        "get_neighbors(m.0g2lq,film.director.film)",
        "get_relations(m.02fcct)",
        "get_neighbors(m.02fcct,media_common.media_genre.parent_genre)",
        "get_relations(#1)",
        "get_neighbors(#1,film.film_genre.films_in_this_genre)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01hw5kk",
          "answer_type": "Entity",
          "entity_name": "Willow"
        }
      ]
    },
    {
      "question": "what is the name of the longest release track of recordings written by lolly grodner?",
      "qid": "4300020013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Lolly Grodner": "m.0_j3_hm"
      },
      "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.0_j3_hm))) music.release_track.length)",
      "actions": [
        "get_relations(m.0_j3_hm)",
        "get_neighbors(m.0_j3_hm,music.engineer.tracks_engineered)",
        "get_relations(#0)",
        "get_neighbors(#0,music.recording.tracks)",
        "get_attributes(#1)",
        "argmax(#1,music.release_track.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0mkg969",
          "entity_name": "I Would Have Waited Forever"
        }
      ]
    },
    {
      "question": "which character who has the ability of soul destruction had an item that was eventually destroyed by askelon of meridian?",
      "qid": "4302209005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Askelon of Meridian": "m.0bxtt5p",
        "soul destruction": "m.0c1rylz"
      },
      "s_expression": "(AND fictional_universe.fictional_character (AND (JOIN fictional_universe.fictional_character.has_possessed (JOIN fictional_universe.fictional_object.destroyer m.0bxtt5p)) (JOIN fictional_universe.fictional_character.powers_or_abilities m.0c1rylz)))",
      "actions": [
        "get_relations(m.0bxtt5p)",
        "get_neighbors(m.0bxtt5p,fictional_universe.fictional_object_destroyer.fictional_objects_destroyed)",
        "get_relations(#0)",
        "get_neighbors(#0,fictional_universe.fictional_object.owner)",
        "get_relations(m.0c1rylz)",
        "get_neighbors(m.0c1rylz,fictional_universe.character_powers.characters_with_this_ability)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c0b19n",
          "entity_name": "Cime"
        }
      ]
    },
    {
      "question": "how many automotive classes are examples of dodge and peugeot 402?",
      "qid": "3206121003000_grailqa",
      "source": "grailqa",
      "entities": {
        "dodge": "m.09_7cw",
        "Peugeot 402": "m.03d20jy"
      },
      "s_expression": "(COUNT (AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples m.09_7cw) (JOIN automotive.automotive_class.examples m.03d20jy))))",
      "actions": [
        "get_relations(m.09_7cw)",
        "get_neighbors(m.09_7cw,automotive.model.automotive_class)",
        "get_relations(m.03d20jy)",
        "get_neighbors(m.03d20jy,automotive.model.automotive_class)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "What German speaking country has an airport that serves Nijmegen?",
      "qid": "WebQTrn-1784_dfb6c97ac9bf2f0ac07f27dd80f9edc2_cwq",
      "source": "cwq",
      "entities": {
        "German": "m.04306rv",
        "Nijmegen": "m.05g2b"
      },
      "s_expression": "(AND (JOIN (R language.human_language.countries_spoken_in) m.04306rv) (JOIN location.location.contains (JOIN aviation.airport.serves m.05g2b)))",
      "actions": [
        "get_relations(m.04306rv)",
        "get_neighbors(m.04306rv,language.human_language.countries_spoken_in)",
        "get_relations(m.05g2b)",
        "get_neighbors(m.05g2b,location.location.nearby_airports)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.containedby)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0345h",
          "answer_type": "Entity",
          "entity_name": "Germany"
        }
      ]
    },
    {
      "question": "flornell spicy piece of halleston and akita are breeds that share what temperament?",
      "qid": "4300459007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Flornell Spicy Piece of Halleston": "m.0p997hh",
        "Akita": "m.0cqg0t"
      },
      "s_expression": "(AND biology.breed_temperament (AND (JOIN (R biology.animal_breed.temperament) (JOIN (R biology.pedigreed_animal.breed) m.0p997hh)) (JOIN (R biology.animal_breed.temperament) m.0cqg0t)))",
      "actions": [
        "get_relations(m.0p997hh)",
        "get_neighbors(m.0p997hh,biology.pedigreed_animal.breed)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.0cqg0t)",
        "get_neighbors(m.0cqg0t,biology.animal_breed.temperament)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kqp3v",
          "entity_name": "Friendly"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kqp3l",
          "entity_name": "Alert"
        }
      ]
    },
    {
      "question": "which music was released under the capital records label by the artist riptide (reprise)?",
      "qid": "4301990008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Riptide (Reprise)": "m.0nxqft",
        "capital records": "m.017l96"
      },
      "s_expression": "(AND music.release (AND (JOIN music.release.producers (JOIN (R music.recording.producer) m.0nxqft)) (JOIN music.release.label m.017l96)))",
      "actions": [
        "get_relations(m.0nxqft)",
        "get_neighbors(m.0nxqft,music.recording.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,music.producer.releases_produced)",
        "get_relations(m.017l96)",
        "get_neighbors(m.017l96,music.record_label.releases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.039rty8",
          "entity_name": "Decade"
        }
      ]
    },
    {
      "question": "ops5 and otcl use programming language paradigm what is the other program language influenced by?",
      "qid": "4300798015000_grailqa",
      "source": "grailqa",
      "entities": {
        "OTcl": "m.02pp7t7",
        "OPS5": "m.02f1mc"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.02pp7t7) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.02f1mc))))",
      "actions": [
        "get_relations(m.02pp7t7)",
        "get_neighbors(m.02pp7t7,computer.programming_language.language_paradigms)",
        "get_relations(m.02f1mc)",
        "get_neighbors(m.02f1mc,computer.programming_language.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.programming_language.language_paradigms)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05prj",
          "entity_name": "Object-oriented programming"
        }
      ]
    },
    {
      "question": "What year did the team with mascot named Lou Seal win the World Series?",
      "qid": "WebQTrn-810_c334509bb5e02cacae1ba2e80c176499_cwq",
      "source": "cwq",
      "entities": {
        "Lou Seal": "m.03_dwn"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.03_dwn)) time.event.end_date)",
      "actions": [
        "get_relations(m.03_dwn)",
        "get_neighbors(m.03_dwn,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0117q3yz"
        }
      ]
    },
    {
      "question": "who is the founding figure of guru purnima, and also sides with dharmic religions being their core religion?",
      "qid": "4302278009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Guru Purnima": "m.0436qg",
        "Dharmic religions": "m.04bhh1"
      },
      "s_expression": "(AND religion.founding_figure (JOIN (R religion.religion.founding_figures) (AND (JOIN (R time.holiday.featured_in_religions) m.0436qg) (JOIN religion.religion.is_part_of m.04bhh1))))",
      "actions": [
        "get_relations(m.0436qg)",
        "get_neighbors(m.0436qg,time.holiday.featured_in_religions)",
        "get_relations(m.04bhh1)",
        "get_neighbors(m.04bhh1,religion.religion.includes)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,religion.religion.founding_figures)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.015k7",
          "entity_name": "Gautama Buddha"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.11bc14_6yq",
          "entity_name": "null"
        }
      ]
    },
    {
      "question": "which military units who fought in the battle of gettysburg come from the same place as 1st louisiana native guard?",
      "qid": "250000100_graphquestions",
      "source": "graphquestions",
      "entities": {
        "Battle of Gettysburg": "m.01jnm",
        "1st Louisiana Native Guard": "m.0hr6dl9"
      },
      "s_expression": "(AND base.americancivilwar.military_unit (AND (JOIN military.military_unit.place_of_origin (JOIN (R military.military_unit.place_of_origin) m.0hr6dl9)) (JOIN base.americancivilwar.military_unit.conflicts_participated_in m.01jnm)))",
      "actions": [
        "get_relations(m.0hr6dl9)",
        "get_neighbors(m.0hr6dl9,military.military_unit.place_of_origin)",
        "get_relations(#0)",
        "get_neighbors(#0,military.military_unit_place_of_origin.military_units)",
        "get_relations(m.01jnm)",
        "get_neighbors(m.01jnm,base.americancivilwar.battle.military_units_involved_in_this_conflict)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04gjww9",
          "entity_name": "10th Louisiana Infantry"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l684",
          "entity_name": "15th Louisiana Infantry Regiment"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l66_",
          "entity_name": "14th Louisiana Infantry Regiment"
        }
      ]
    },
    {
      "question": "how many camera iso capabilities are the iso setting used by pentax optio v10 and olympus fe-190?",
      "qid": "3205827007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Pentax Optio V10": "m.03q2kmb",
        "Olympus FE-190": "m.03q2ltp"
      },
      "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.03q2kmb) (JOIN (R digicams.digital_camera.iso_setting) m.03q2ltp))))",
      "actions": [
        "get_relations(m.03q2kmb)",
        "get_neighbors(m.03q2kmb,digicams.digital_camera.iso_setting)",
        "get_relations(m.03q2ltp)",
        "get_neighbors(m.03q2ltp,digicams.digital_camera.iso_setting)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "5"
        }
      ]
    },
    {
      "question": "in what countries is the version developed by arkedo studio and distributed through xbox live community games released?",
      "qid": "4301141007000_grailqa",
      "source": "grailqa",
      "entities": {
        "xbox live community games": "m.052582h",
        "Arkedo Studio": "m.052psry"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.052582h) (JOIN (R cvg.cvg_developer.game_versions_developed) m.052psry))))",
      "actions": [
        "get_relations(m.052582h)",
        "get_neighbors(m.052582h,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.052psry)",
        "get_neighbors(m.052psry,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.059g4",
          "entity_name": "North America"
        }
      ]
    },
    {
      "question": "What is the timezone in Pennsylvania near the Toronto Pearson International Airport?",
      "qid": "WebQTest-1574_5411ee5b895e479b24ac562f2ac9b3f3_cwq",
      "source": "cwq",
      "entities": {
        "Pennsylvania": "m.05tbn",
        "Toronto Pearson International Airport": "m.06k9l7"
      },
      "s_expression": "(AND (JOIN (R location.location.time_zones) m.05tbn) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.06k9l7)))",
      "actions": [
        "get_relations(m.05tbn)",
        "get_neighbors(m.05tbn,location.location.time_zones)",
        "get_relations(m.06k9l7)",
        "get_neighbors(m.06k9l7,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02hcv8",
          "answer_type": "Entity",
          "entity_name": "Eastern Time Zone"
        }
      ]
    },
    {
      "question": "what website has a web api of word press and belongs to the category of big brother buddy?",
      "qid": "4300801002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Big Brother Buddy": "m.010pccfx",
        "word press": "m.02vtpl"
      },
      "s_expression": "(AND internet.website (AND (JOIN (R internet.website_category.sites) (JOIN (R internet.website.category) m.010pccfx)) (JOIN internet.website.api m.02vtpl)))",
      "actions": [
        "get_relations(m.010pccfx)",
        "get_neighbors(m.010pccfx,internet.website.category)",
        "get_relations(#0)",
        "get_neighbors(#0,internet.website_category.sites)",
        "get_relations(m.02vtpl)",
        "get_neighbors(m.02vtpl,internet.api.site)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04d3lsz",
          "entity_name": "The Carpetbagger Report"
        }
      ]
    },
    {
      "question": "what viewfinder does the camera with sensor from nikon corp. and a compression format of jpg use?",
      "qid": "4302274000000_grailqa",
      "source": "grailqa",
      "entities": {
        "jpg": "m.0220vh_",
        "nikon corp.": "m.03pmfw"
      },
      "s_expression": "(AND digicams.camera_viewfinder_type (JOIN digicams.camera_viewfinder_type.digital_cameras (AND (JOIN (R digicams.camera_compressed_format.cameras) m.0220vh_) (JOIN digicams.digital_camera.camera_sensor_manufacturer m.03pmfw))))",
      "actions": [
        "get_relations(m.0220vh_)",
        "get_neighbors(m.0220vh_,digicams.camera_compressed_format.cameras)",
        "get_relations(m.03pmfw)",
        "get_neighbors(m.03pmfw,digicams.camera_sensor_manufacturer.cameras)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,digicams.digital_camera.viewfinder_type)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01jpdj",
          "entity_name": "Pentaprism"
        }
      ]
    },
    {
      "question": "what was the topic of the angel of remembrance's quote \"be ready always to give an answer to every man that asketh you a reason of the hope that is in you. -- peter 3:15\"?",
      "qid": "4300443004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Be ready always to give an answer to every man that asketh you a reason of the hope that is in you. -- Peter 3:15": "m.048fjp5",
        "Angel of Remembrance": "m.0h3grm9"
      },
      "s_expression": "(AND media_common.quotation_subject (AND (JOIN (R media_common.quotation.subjects) (JOIN media_common.quotation.spoken_by_character m.0h3grm9)) (JOIN (R media_common.quotation.subjects) m.048fjp5)))",
      "actions": [
        "get_relations(m.0h3grm9)",
        "get_neighbors(m.0h3grm9,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.subjects)",
        "get_relations(m.048fjp5)",
        "get_neighbors(m.048fjp5,media_common.quotation.subjects)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02zq2",
          "entity_name": "Faith"
        }
      ]
    },
    {
      "question": "what is the website that belongs to the category of pixiv and has a web api of developers.facebook.com?",
      "qid": "4300801009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Pixiv": "m.05mvphw",
        "Developers.facebook.com": "m.02k9b2h"
      },
      "s_expression": "(AND internet.website (AND (JOIN (R internet.website_category.sites) (JOIN (R internet.website.category) m.05mvphw)) (JOIN internet.website.api m.02k9b2h)))",
      "actions": [
        "get_relations(m.05mvphw)",
        "get_neighbors(m.05mvphw,internet.website.category)",
        "get_relations(#0)",
        "get_neighbors(#0,internet.website_category.sites)",
        "get_relations(m.02k9b2h)",
        "get_neighbors(m.02k9b2h,internet.api.site)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02y1vz",
          "entity_name": "Facebook"
        }
      ]
    },
    {
      "question": "what programming language paradigm is used by moo and another programming language influenced by muf?",
      "qid": "4300798004000_grailqa",
      "source": "grailqa",
      "entities": {
        "MOO": "m.0521z",
        "MUF": "m.02m_jv"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.0521z) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.02m_jv))))",
      "actions": [
        "get_relations(m.0521z)",
        "get_neighbors(m.0521z,computer.programming_language.language_paradigms)",
        "get_relations(m.02m_jv)",
        "get_neighbors(m.02m_jv,computer.programming_language.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.programming_language.language_paradigms)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gkc5",
          "entity_name": "Prototype-based programming"
        }
      ]
    },
    {
      "question": "the core text of christanity that is honored by sealing practitioners is called what?",
      "qid": "4300898005000_grailqa",
      "source": "grailqa",
      "entities": {
        "christanity": "m.01lp8",
        "Sealing": "m.021skj"
      },
      "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.01lp8) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.021skj))))",
      "actions": [
        "get_relations(m.01lp8)",
        "get_neighbors(m.01lp8,religion.religion.texts)",
        "get_relations(m.021skj)",
        "get_neighbors(m.021skj,religion.religious_practice.practice_of)",
        "get_relations(#1)",
        "get_neighbors(#1,religion.religion.texts)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.015j7",
          "entity_name": "The Bible"
        }
      ]
    },
    {
      "question": "Who was influenced by both Mencius and Baron De Montesquie?",
      "qid": "WebQTest-347_56e25b88328ff3fd76a73103618fd8b2_cwq",
      "source": "cwq",
      "entities": {
        "baron de montesquie": "m.0f9wd",
        "Mencius": "m.01b_fn"
      },
      "s_expression": "(AND (JOIN (R influence.influence_node.influenced) m.0f9wd) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.01b_fn)))",
      "actions": [
        "get_relations(m.0f9wd)",
        "get_neighbors(m.0f9wd,influence.influence_node.influenced)",
        "get_relations(m.01b_fn)",
        "get_neighbors(m.01b_fn,influence.influence_node.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.039n1",
          "answer_type": "Entity",
          "entity_name": "Georg Wilhelm Friedrich Hegel"
        }
      ]
    },
    {
      "question": "ferry v. rauhfelsen of giralda and staffordshire bull terrier are breeds that share what temperament?",
      "qid": "4300459015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Ferry v. Rauhfelsen of Giralda": "m.0hzpl8_",
        "Staffordshire Bull Terrier": "m.01kv93"
      },
      "s_expression": "(AND biology.breed_temperament (AND (JOIN (R biology.animal_breed.temperament) (JOIN (R biology.pedigreed_animal.breed) m.0hzpl8_)) (JOIN (R biology.animal_breed.temperament) m.01kv93)))",
      "actions": [
        "get_relations(m.0hzpl8_)",
        "get_neighbors(m.0hzpl8_,biology.pedigreed_animal.breed)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.01kv93)",
        "get_neighbors(m.01kv93,biology.animal_breed.temperament)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kpkld",
          "entity_name": "Intelligent"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kt3z7",
          "entity_name": "Fearless"
        }
      ]
    },
    {
      "question": "which ski run served by supreme is rated by black diamond?",
      "qid": "4301587002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Black Diamond": "m.04kk2t2",
        "Supreme": "m.04kk20l"
      },
      "s_expression": "(AND skiing.ski_run (AND (JOIN skiing.ski_run.rating (JOIN (R skiing.run_rating_symbol.run_rating) m.04kk2t2)) (JOIN skiing.ski_run.served_by m.04kk20l)))",
      "actions": [
        "get_relations(m.04kk2t2)",
        "get_neighbors(m.04kk2t2,skiing.run_rating_symbol.run_rating)",
        "get_relations(#0)",
        "get_neighbors(#0,skiing.run_rating.ski_runs)",
        "get_relations(m.04kk20l)",
        "get_neighbors(m.04kk20l,skiing.ski_lift.runs_served)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmn6",
          "entity_name": "White Squaw Area"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmrq",
          "entity_name": "Hammer Head"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmpg",
          "entity_name": "Upper Sleepy Hollow"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmqg",
          "entity_name": "No. 9 Express"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmpz",
          "entity_name": "Sidewinder"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmmg",
          "entity_name": "Back Forty"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmmz",
          "entity_name": "Piney Glade"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmng",
          "entity_name": "Supreme Challenge"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmnq",
          "entity_name": "So Long"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmnz",
          "entity_name": "Erosion Gullies"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmpq",
          "entity_name": "Snowshoe Hill"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmqq",
          "entity_name": "Castle Apron"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmqz",
          "entity_name": "Spiney Chutes Area"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmr6",
          "entity_name": "Challenger"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmrg",
          "entity_name": "Sunset"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmrz",
          "entity_name": "Last Chance"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knms6",
          "entity_name": "East Castle Area"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmsz",
          "entity_name": "Vicky's"
        }
      ]
    },
    {
      "question": "which character lives in the fictional lemuria of jojo's bizarre adventure?",
      "qid": "4300742012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Lemuria": "m.0dc60vr",
        "JoJo's Bizarre Adventure": "m.0ndbcwn"
      },
      "s_expression": "(AND fictional_universe.fictional_character (JOIN fictional_universe.fictional_character.places_lived (AND (JOIN fictional_universe.fictional_setting.setting_type m.0dc60vr) (JOIN (R fictional_universe.fictional_universe.locations) m.0ndbcwn))))",
      "actions": [
        "get_relations(m.0dc60vr)",
        "get_neighbors(m.0dc60vr,fictional_universe.type_of_fictional_setting.settings)",
        "get_relations(m.0ndbcwn)",
        "get_neighbors(m.0ndbcwn,fictional_universe.fictional_universe.locations)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,fictional_universe.fictional_setting.characters_that_have_lived_here)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0262164",
          "entity_name": "Sheldon Hawkes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01d5g",
          "entity_name": "Bruce Wayne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08070t",
          "entity_name": "Peter Clemenza"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gbv76r",
          "entity_name": "Stevie Nichols"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0h7y2f",
          "entity_name": "Claire Bennet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1217c9h2",
          "entity_name": "Emma Coolidge"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c0b19n",
          "entity_name": "Cime"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.122qmg44",
          "entity_name": "Daphne Millbrook"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025t7qs",
          "entity_name": "Mac Taylor"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gghrw2",
          "entity_name": "Kaito Nakamura"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0h28lx9",
          "entity_name": "Joss Carter"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0h2c7kt",
          "entity_name": "John Reese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09npt5t",
          "entity_name": "Dana Barrett"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cmdvzt",
          "entity_name": "Jo Danville"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.012bzfhl",
          "entity_name": "Jo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.010lcfrc",
          "entity_name": "Richie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gghrt7",
          "entity_name": "Ishi Nakamura"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.121764rk",
          "entity_name": "null"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qszr5",
          "entity_name": "Adam Ross"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gbv5h0",
          "entity_name": "Mason Greyback"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pn5g9",
          "entity_name": "Sid Hammerback"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.122161km",
          "entity_name": "null"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0285h49",
          "entity_name": "Donald Flack, Jr."
        }
      ]
    },
    {
      "question": "which olympic event was contested officially in 1972 summer olympic games and other olympic games in antwerp, belgium?",
      "qid": "4300161003000_grailqa",
      "source": "grailqa",
      "entities": {
        "antwerp, belgium": "m.0fydw",
        "1972 summer olympic games": "m.0l98s"
      },
      "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.0fydw)) (JOIN olympics.olympic_event.olympic_games_contested m.0l98s)))",
      "actions": [
        "get_relations(m.0fydw)",
        "get_neighbors(m.0fydw,olympics.olympic_host_city.olympics_hosted)",
        "get_relations(#0)",
        "get_neighbors(#0,olympics.olympic_games.events)",
        "get_relations(m.0l98s)",
        "get_neighbors(m.0l98s,olympics.olympic_games.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gnx9y",
          "entity_name": "Men's 300m Free Rifle, 3 Positions"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3cx",
          "entity_name": "Men's Épée individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07fp6sy",
          "entity_name": "Men's Weightlifting, Light Heavyweight 75-82.5kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2b3",
          "entity_name": "Women's Archery, individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2_w",
          "entity_name": "Men's Track cycling, Sprint individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3cl",
          "entity_name": "Men's Shot put"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk326",
          "entity_name": "Men's 200m breaststroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2pv",
          "entity_name": "Men's Javelin throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2hx",
          "entity_name": "Men's 1500m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2pc",
          "entity_name": "Men's Discus throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9lcn",
          "entity_name": "Women's 3 metre springboard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9ld0",
          "entity_name": "Men's 3 metre springboard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9ld6",
          "entity_name": "Women's 10 metre platform"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2c_",
          "entity_name": "Men's Gymnastics, individual all-round"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2cj",
          "entity_name": "Men's Long jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2f7",
          "entity_name": "Men's 50m pistol"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2gh",
          "entity_name": "Eventing, individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2hl",
          "entity_name": "Men's Athletics, 100m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2jp",
          "entity_name": "Men's Athletics, 5000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2lq",
          "entity_name": "Men's Foil individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2mz",
          "entity_name": "Men's Marathon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qm",
          "entity_name": "Men's Athletics, 400m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qs",
          "entity_name": "Men's 100m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2rd",
          "entity_name": "Men's Pole vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2tl",
          "entity_name": "Men's Athletics, 400m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2tx",
          "entity_name": "Women's 400m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2xq",
          "entity_name": "Men's Sabre individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2yb",
          "entity_name": "Jumping, individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2yh",
          "entity_name": "Men's Athletics, 200m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk300",
          "entity_name": "Men's Hammer throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30h",
          "entity_name": "Men's Athletics, 110m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30t",
          "entity_name": "Men's 400m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32_",
          "entity_name": "Men's Triple jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32p",
          "entity_name": "Men's High jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk35z",
          "entity_name": "Men's Modern pentathlon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39q",
          "entity_name": "Women's 100m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39w",
          "entity_name": "Men's Athletics, 10000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3b5",
          "entity_name": "Men's Athletics, 800m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3bh",
          "entity_name": "Men's 100m backstroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3d6",
          "entity_name": "Men's 50m rifle prone"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3dj",
          "entity_name": "Men's Decathlon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3fm",
          "entity_name": "Men's 3000m steeplechase"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3l9",
          "entity_name": "Men's Single sculls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3n5",
          "entity_name": "Men's Athletics, 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07fp6br",
          "entity_name": "Men's Weightlifting, Middleweight 67.5-75kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07fp6rz",
          "entity_name": "Men's Weightlifting, Lightweight 60-67.5kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b6t4m",
          "entity_name": "Olympic trap"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0k1nqc0",
          "entity_name": "Individual Dressage"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk38m",
          "entity_name": "Men's Archery, individual"
        }
      ]
    },
    {
      "question": "what is the programming language influenced by another language developed by international business machines corporation that was introduced first?",
      "qid": "4303199007000_grailqa",
      "source": "grailqa",
      "entities": {
        "international business machines corporation": "m.03sc8"
      },
      "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.03sc8))) computer.programming_language.introduced)",
      "actions": [
        "get_relations(m.03sc8)",
        "get_neighbors(m.03sc8,computer.programming_language_developer.programming_languages_developed)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.influenced)",
        "get_attributes(#1)",
        "argmin(#1,computer.programming_language.introduced)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02_94",
          "entity_name": "Fortran"
        }
      ]
    },
    {
      "question": "which programming language paradigm do livecode and another racket influenced programming language use?",
      "qid": "4300798001000_grailqa",
      "source": "grailqa",
      "entities": {
        "LiveCode": "m.0490j1",
        "Racket": "m.0974fb"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.0490j1) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.0974fb))))",
      "actions": [
        "get_relations(m.0490j1)",
        "get_neighbors(m.0490j1,computer.programming_language.language_paradigms)",
        "get_relations(m.0974fb)",
        "get_neighbors(m.0974fb,computer.programming_language.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.programming_language.language_paradigms)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05prj",
          "entity_name": "Object-oriented programming"
        }
      ]
    },
    {
      "question": "what number of automotive classes are examples of fiat 512 and renault vivasix?",
      "qid": "3206121002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Fiat 512": "m.03m6sdc",
        "Renault Vivasix": "m.04n599g"
      },
      "s_expression": "(COUNT (AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples m.03m6sdc) (JOIN automotive.automotive_class.examples m.04n599g))))",
      "actions": [
        "get_relations(m.03m6sdc)",
        "get_neighbors(m.03m6sdc,automotive.model.automotive_class)",
        "get_relations(m.04n599g)",
        "get_neighbors(m.04n599g,automotive.model.automotive_class)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what website, using mjt as api, has the category of douban?",
      "qid": "4300801005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Douban": "m.04m_5wv",
        "mjt": "m.0220x4q"
      },
      "s_expression": "(AND internet.website (AND (JOIN (R internet.website_category.sites) (JOIN (R internet.website.category) m.04m_5wv)) (JOIN internet.website.api m.0220x4q)))",
      "actions": [
        "get_relations(m.04m_5wv)",
        "get_neighbors(m.04m_5wv,internet.website.category)",
        "get_relations(#0)",
        "get_neighbors(#0,internet.website_category.sites)",
        "get_relations(m.0220x4q)",
        "get_neighbors(m.0220x4q,internet.api.site)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.021ympy",
          "entity_name": "Freebase"
        }
      ]
    },
    {
      "question": "what museums share a type with harris museum and chaffee art center?",
      "qid": "5400031014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Harris Museum": "m.03qzy4",
        "Chaffee Art Center": "m.04_jgm4"
      },
      "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.03qzy4) (JOIN architecture.type_of_museum.museums m.04_jgm4)))))",
      "actions": [
        "get_relations(m.03qzy4)",
        "get_neighbors(m.03qzy4,architecture.museum.type_of_museum)",
        "get_relations(m.04_jgm4)",
        "get_neighbors(m.04_jgm4,architecture.museum.type_of_museum)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,architecture.type_of_museum.museums)",
        "get_relations(#3)",
        "get_neighbors(#3,architecture.museum.type_of_museum)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gz",
          "entity_name": "Modern art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c9td2",
          "entity_name": "National museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9jkk",
          "entity_name": "Architecture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgh_k",
          "entity_name": "History museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgjgh",
          "entity_name": "Natural history museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0jvjpx6",
          "entity_name": "Antiquities museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026w5hv",
          "entity_name": "Contemporary art gallery"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pn3n6",
          "entity_name": "Historic house museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0528d17",
          "entity_name": "Photography Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kt8qr",
          "entity_name": "Culture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gt",
          "entity_name": "Archaeology museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059x_pp",
          "entity_name": "Archaeological Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wvyw7",
          "entity_name": "Design museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027v0wz",
          "entity_name": "University museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059vqps",
          "entity_name": "Ancient Art Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9gbh",
          "entity_name": "Jewish museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j58y",
          "entity_name": "Science museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0w_y7rb",
          "entity_name": "Asian art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99t0",
          "entity_name": "Decorative art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0djx8f",
          "entity_name": "Children's museum"
        }
      ]
    },
    {
      "question": "what is the number of apple macintosh computer models that use g4 processors?",
      "qid": "3205922012000_grailqa",
      "source": "grailqa",
      "entities": {
        "apple macintosh computer": "m.0zd6",
        "g4": "m.02kc2q"
      },
      "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.0zd6) (JOIN computer.computer.processor m.02kc2q))))",
      "actions": [
        "get_relations(m.0zd6)",
        "get_neighbors(m.0zd6,computer.computer.includes_models)",
        "get_relations(m.02kc2q)",
        "get_neighbors(m.02kc2q,computer.computer_processor.used_in_computers)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "how many different dog breeds from the ukraine have a similar temperament as aaustrian pinscher?",
      "qid": "4303460015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Austrian Pinscher": "m.026r9tr",
        "Ukraine": "m.07t21"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.07t21)) (JOIN (R biology.animal_breed.temperament) m.026r9tr))))",
      "actions": [
        "get_relations(m.07t21)",
        "get_neighbors(m.07t21,biology.breed_origin.breeds_originating_here)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.026r9tr)",
        "get_neighbors(m.026r9tr,biology.animal_breed.temperament)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "what is the number of canadian whiskey that blend corn whiskey with single malt whiskey?",
      "qid": "4302561001000_grailqa",
      "source": "grailqa",
      "entities": {
        "single malt whiskey": "m.01k5lq",
        "canadian whiskey": "m.0212n",
        "Corn whiskey": "m.01yr36"
      },
      "s_expression": "(COUNT (AND distilled_spirits.blended_spirit (AND (JOIN (R distilled_spirits.distilled_spirit_type.blends) m.01k5lq) (AND (JOIN distilled_spirits.blended_spirit.style m.0212n) (JOIN (R distilled_spirits.distilled_spirit_type.blends) m.01yr36)))))",
      "actions": [
        "get_relations(m.01k5lq)",
        "get_neighbors(m.01k5lq,distilled_spirits.distilled_spirit_type.blends)",
        "get_relations(m.0212n)",
        "get_neighbors(m.0212n,distilled_spirits.blended_spirit_style.blends)",
        "get_relations(m.01yr36)",
        "get_neighbors(m.01yr36,distilled_spirits.distilled_spirit_type.blends)",
        "intersection(#1,#2)",
        "intersection(#0,#3)",
        "count(#4)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "armand fizeau works in what department of aarhus university",
      "qid": "4301362015000_grailqa",
      "source": "grailqa",
      "entities": {
        "armand fizeau": "m.01fb5x",
        "Aarhus University": "m.023wzn"
      },
      "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.01fb5x)) (JOIN (R education.university.departments) m.023wzn)))",
      "actions": [
        "get_relations(m.01fb5x)",
        "get_neighbors(m.01fb5x,education.academic.research_areas)",
        "get_relations(#0)",
        "get_neighbors(#0,education.field_of_study.academic_departments)",
        "get_relations(m.023wzn)",
        "get_neighbors(m.023wzn,education.university.departments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02w9m_8",
          "entity_name": "University of Aarhus Department of Physics and Astronomy"
        }
      ]
    },
    {
      "question": "what museums share a type with musée d'art contemporain de montréal and arlington gallery?",
      "qid": "5400031009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Musée d'art contemporain de Montréal": "m.027yjjq",
        "Arlington Gallery": "m.04_jgbb"
      },
      "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.027yjjq) (JOIN architecture.type_of_museum.museums m.04_jgbb)))))",
      "actions": [
        "get_relations(m.027yjjq)",
        "get_neighbors(m.027yjjq,architecture.museum.type_of_museum)",
        "get_relations(m.04_jgbb)",
        "get_neighbors(m.04_jgbb,architecture.museum.type_of_museum)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,architecture.type_of_museum.museums)",
        "get_relations(#3)",
        "get_neighbors(#3,architecture.museum.type_of_museum)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gz",
          "entity_name": "Modern art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c9td2",
          "entity_name": "National museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9jkk",
          "entity_name": "Architecture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgh_k",
          "entity_name": "History museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgjgh",
          "entity_name": "Natural history museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0jvjpx6",
          "entity_name": "Antiquities museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026w5hv",
          "entity_name": "Contemporary art gallery"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pn3n6",
          "entity_name": "Historic house museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0528d17",
          "entity_name": "Photography Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kt8qr",
          "entity_name": "Culture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gt",
          "entity_name": "Archaeology museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059x_pp",
          "entity_name": "Archaeological Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wvyw7",
          "entity_name": "Design museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027v0wz",
          "entity_name": "University museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059vqps",
          "entity_name": "Ancient Art Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9gbh",
          "entity_name": "Jewish museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j58y",
          "entity_name": "Science museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0w_y7rb",
          "entity_name": "Asian art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99t0",
          "entity_name": "Decorative art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0djx8f",
          "entity_name": "Children's museum"
        }
      ]
    },
    {
      "question": "Which kind of breast cancer did the artist who recorded \"Difficult Kind\" have?",
      "qid": "WebQTest-2014_78d2404dee473b11da8c52102974f4ef_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "Difficult Kind": "m.0x3rwj"
      },
      "s_expression": "(AND (JOIN (R medicine.notable_person_with_medical_condition.condition) (JOIN music.featured_artist.recordings m.0x3rwj)) (JOIN medicine.disease.parent_disease m.0qcr0))",
      "actions": [
        "get_relations(m.0x3rwj)",
        "get_neighbors(m.0x3rwj,music.recording.featured_artists)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.notable_person_with_medical_condition.condition)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,medicine.disease.includes_diseases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.03z_9l",
          "answer_type": "Entity",
          "entity_name": "Meningioma"
        }
      ]
    },
    {
      "question": "the subject of the quote: gracefulness is to the body what understanding is to the mind. spoken by angel of remembrance is what?",
      "qid": "4300443010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Gracefulness is to the body what understanding is to the mind.": "m.048gk7g",
        "Angel of Remembrance": "m.0h3grm9"
      },
      "s_expression": "(AND media_common.quotation_subject (AND (JOIN (R media_common.quotation.subjects) (JOIN media_common.quotation.spoken_by_character m.0h3grm9)) (JOIN (R media_common.quotation.subjects) m.048gk7g)))",
      "actions": [
        "get_relations(m.0h3grm9)",
        "get_neighbors(m.0h3grm9,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.subjects)",
        "get_relations(m.048gk7g)",
        "get_neighbors(m.048gk7g,media_common.quotation.subjects)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.048kqhn",
          "entity_name": "Grace"
        }
      ]
    },
    {
      "question": "When did the sports team playing out of Ed Smith Stadium arena win the World Series?",
      "qid": "WebQTest-1680_fe7307f6c664979a4a0b35113c50bc2c_cwq",
      "source": "cwq",
      "entities": {
        "Ed Smith Stadium": "m.066c0s"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.066c0s)) time.event.end_date)",
      "actions": [
        "get_relations(m.066c0s)",
        "get_neighbors(m.066c0s,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.046_p6",
          "answer_type": "Entity",
          "entity_name": "1983 World Series"
        }
      ]
    },
    {
      "question": "what category of schools does florida state university college of arts and sciences and the publisher of libertine magazine fall under?",
      "qid": "4301751010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Libertine Magazine": "m.05prrml",
        "Florida State University College of Arts and Sciences": "m.02vqczm"
      },
      "s_expression": "(AND education.school_category (AND (JOIN (R education.educational_institution.school_type) (JOIN (R education.school_magazine.school) m.05prrml)) (JOIN (R education.educational_institution.school_type) m.02vqczm)))",
      "actions": [
        "get_relations(m.05prrml)",
        "get_neighbors(m.05prrml,education.school_magazine.school)",
        "get_relations(#0)",
        "get_neighbors(#0,education.educational_institution.school_type)",
        "get_relations(m.02vqczm)",
        "get_neighbors(m.02vqczm,education.educational_institution.school_type)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05jxkf",
          "entity_name": "Public university"
        }
      ]
    },
    {
      "question": "When was the last time that The Hunt Family's football team won the superbowl?",
      "qid": "WebQTrn-3623_6ecacb498c6491bc693d0e8222182601_cwq",
      "source": "cwq",
      "entities": {
        "The Hunt Family": "m.010n_74d"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.010n_74d)) time.event.end_date)",
      "actions": [
        "get_relations(m.010n_74d)",
        "get_neighbors(m.010n_74d,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.076mc",
          "answer_type": "Entity",
          "entity_name": "Super Bowl IV"
        }
      ]
    },
    {
      "question": "I'm what time zone are parts of Texas and the Strathmore (D.J. Murray) airport?",
      "qid": "WebQTest-1845_cab1228be4e8c16ee35a67b7ac63b264_cwq",
      "source": "cwq",
      "entities": {
        "Texas": "m.07b_l",
        "Strathmore (D.J. Murray) Airport": "m.09slsk"
      },
      "s_expression": "(AND (JOIN (R location.location.time_zones) m.07b_l) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.09slsk)))",
      "actions": [
        "get_relations(m.07b_l)",
        "get_neighbors(m.07b_l,location.location.time_zones)",
        "get_relations(m.09slsk)",
        "get_neighbors(m.09slsk,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02hczc",
          "answer_type": "Entity",
          "entity_name": "Mountain Time Zone"
        }
      ]
    },
    {
      "question": "games developed by fromsoftware and distributed through physical media released where?",
      "qid": "4301141001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Physical media": "m.0663y78",
        "FromSoftware": "m.06zl7g"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.0663y78) (JOIN (R cvg.cvg_developer.game_versions_developed) m.06zl7g))))",
      "actions": [
        "get_relations(m.0663y78)",
        "get_neighbors(m.0663y78,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.06zl7g)",
        "get_neighbors(m.06zl7g,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_3d",
          "entity_name": "Japan"
        }
      ]
    },
    {
      "question": "what is the industry in which union operates and is the common parent industry of automobile industry?",
      "qid": "4301917009000_grailqa",
      "source": "grailqa",
      "entities": {
        "union": "m.054w78",
        "automobile industry": "m.015smg"
      },
      "s_expression": "(AND business.industry (AND (JOIN (R business.industry.child_industry) (JOIN business.industry.trade_unions m.054w78)) (JOIN (R business.industry.child_industry) m.015smg)))",
      "actions": [
        "get_relations(m.054w78)",
        "get_neighbors(m.054w78,business.trade_union.industry)",
        "get_relations(#0)",
        "get_neighbors(#0,business.industry.child_industry)",
        "get_relations(m.015smg)",
        "get_neighbors(m.015smg,business.industry.child_industry)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0126b6d7",
          "entity_name": "Ballyclare Limited"
        }
      ]
    },
    {
      "question": "when is the last time the pittsburgh steelers won a superbowl",
      "qid": "WebQTest-1523_webqsp",
      "source": "webqsp",
      "entities": {
        "pittsburgh steelers": "m.05tfm",
        "Superbowl": "m.06x5s"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) m.05tfm) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.05tfm)",
        "get_neighbors(m.05tfm,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#0,#1)",
        "get_attributes(#2)",
        "argmax(#2,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04n7r5",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLIII"
        }
      ]
    },
    {
      "question": "What is the home city of the champion of the 2010 World Series Championship?",
      "qid": "WebQTrn-52_1315945fdcb4fad1310ab7862120be0f_cwq",
      "source": "cwq",
      "entities": {
        "2010 World Series": "m.09gnk2r"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.championships m.09gnk2r)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.09gnk2r)",
        "get_neighbors(m.09gnk2r,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.01_gsg",
          "answer_type": "Entity",
          "entity_name": "AT&T Park"
        }
      ]
    },
    {
      "question": "in what countries is the version developed by calaris studios and distributed through wii ware released?",
      "qid": "4301141017000_grailqa",
      "source": "grailqa",
      "entities": {
        "wii ware": "m.03hfyj6",
        "Calaris Studios": "m.0fpnfkn"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.03hfyj6) (JOIN (R cvg.cvg_developer.game_versions_developed) m.0fpnfkn))))",
      "actions": [
        "get_relations(m.03hfyj6)",
        "get_neighbors(m.03hfyj6,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.0fpnfkn)",
        "get_neighbors(m.0fpnfkn,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.075g54v",
          "entity_name": "Wii/DS NA"
        }
      ]
    },
    {
      "question": "how many spacecrafts did ball aerospace and technologies corp. and orbital sciences corporation manufacture?",
      "qid": "3201449009000_grailqa",
      "source": "grailqa",
      "entities": {
        "ball aerospace and technologies corp.": "m.02dxz4",
        "Orbital Sciences Corporation": "m.037jwk"
      },
      "s_expression": "(COUNT (AND spaceflight.spacecraft (AND (JOIN spaceflight.spacecraft.manufacturer m.02dxz4) (JOIN spaceflight.spacecraft.manufacturer m.037jwk))))",
      "actions": [
        "get_relations(m.02dxz4)",
        "get_neighbors(m.02dxz4,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "get_relations(m.037jwk)",
        "get_neighbors(m.037jwk,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "how many practices are there that practices eastern christians and protestantism?",
      "qid": "3204573004000_grailqa",
      "source": "grailqa",
      "entities": {
        "eastern christians": "m.0blk0",
        "Protestantism": "m.05sfs"
      },
      "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.0blk0) (JOIN (R religion.religion.practices) m.05sfs))))",
      "actions": [
        "get_relations(m.0blk0)",
        "get_neighbors(m.0blk0,religion.religion.practices)",
        "get_relations(m.05sfs)",
        "get_neighbors(m.05sfs,religion.religion.practices)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "find which artwork on wood was created in the era of leonard de vinci.",
      "qid": "4301655012000_grailqa",
      "source": "grailqa",
      "entities": {
        "leonard de vinci": "m.04lg6",
        "Wood": "m.083vt"
      },
      "s_expression": "(AND visual_art.artwork (AND (JOIN visual_art.artwork.period_or_movement (JOIN visual_art.art_period_movement.associated_artists m.04lg6)) (JOIN visual_art.artwork.support m.083vt)))",
      "actions": [
        "get_relations(m.04lg6)",
        "get_neighbors(m.04lg6,visual_art.visual_artist.associated_periods_or_movements)",
        "get_relations(#0)",
        "get_neighbors(#0,visual_art.art_period_movement.associated_artworks)",
        "get_relations(m.083vt)",
        "get_neighbors(m.083vt,visual_art.visual_art_support.artworks)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.08my3g",
          "entity_name": "Three Graces"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08r4bj",
          "entity_name": "Saint George and the Dragon"
        }
      ]
    },
    {
      "question": "When did the team that won Super Bowl XXX last win the Super Bowl?",
      "qid": "WebQTest-994_f051fbe657aaa023d74839c8e8029bef_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "Super Bowl XXX": "m.076wz"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.076wz)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.076wz)",
        "get_neighbors(m.076wz,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.076wz",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXX"
        }
      ]
    },
    {
      "question": "how many camera iso capabilities are the iso setting used by k10d and pentax k2000?",
      "qid": "3205827011000_grailqa",
      "source": "grailqa",
      "entities": {
        "k10d": "m.0gzt1g",
        "Pentax K2000": "m.04n1r2f"
      },
      "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.0gzt1g) (JOIN (R digicams.digital_camera.iso_setting) m.04n1r2f))))",
      "actions": [
        "get_relations(m.0gzt1g)",
        "get_neighbors(m.0gzt1g,digicams.digital_camera.iso_setting)",
        "get_relations(m.04n1r2f)",
        "get_neighbors(m.04n1r2f,digicams.digital_camera.iso_setting)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "6"
        }
      ]
    },
    {
      "question": "Who did Bear Grylls influence who started Google?",
      "qid": "WebQTrn-2393_e803a55d6d2ab9abbcbd4e211c38b626_cwq",
      "source": "cwq",
      "entities": {
        "google": "m.0387r",
        "Bear Grylls": "m.06st6r"
      },
      "s_expression": "(AND (JOIN (R law.invention.inventor) m.0387r) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.06st6r)))",
      "actions": [
        "get_relations(m.0387r)",
        "get_neighbors(m.0387r,law.invention.inventor)",
        "get_relations(m.06st6r)",
        "get_neighbors(m.06st6r,influence.influence_node.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0gjpq",
          "answer_type": "Entity",
          "entity_name": "Larry Page"
        }
      ]
    },
    {
      "question": "What is the home field of the sports team whose mascot is named Fredbird?",
      "qid": "WebQTrn-2444_06d5101218b4299633a55b1f229e9b40_cwq",
      "source": "cwq",
      "entities": {
        "Fredbird": "m.03p0zx"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.team_mascot m.03p0zx)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.03p0zx)",
        "get_neighbors(m.03p0zx,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.06k1v5"
        }
      ]
    },
    {
      "question": "When was the last time Jerry Jones' team win the Superbowl?",
      "qid": "WebQTrn-387_5e43a21c08076aabc07f1a6fd6ae6bb9_cwq",
      "source": "cwq",
      "entities": {
        "Jerry Jones": "m.016b9c"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (AND (JOIN (R sports.sports_championship_event.champion) common.topic) (JOIN sports.professional_sports_team.owner_s m.016b9c))) time.event.end_date)",
      "actions": [
        "get_relations(common.topic)",
        "get_neighbors(common.topic,sports.sports_championship_event.champion)",
        "get_relations(m.016b9c)",
        "get_neighbors(m.016b9c,sports.sports_team_owner.teams_owned)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,sports.sports_team.championships)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.076wz",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXX"
        }
      ]
    },
    {
      "question": "jimi hendrix: an evolution of sound has how many exhibition subjects?",
      "qid": "4302933012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Jimi Hendrix: An Evolution of Sound": "m.07fxk21"
      },
      "s_expression": "(COUNT (AND exhibitions.exhibition_subject (JOIN (R exhibitions.exhibition.subjects) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) (JOIN (R exhibitions.exhibition.exhibition_types) m.07fxk21)))))",
      "actions": [
        "get_relations(m.07fxk21)",
        "get_neighbors(m.07fxk21,exhibitions.exhibition.exhibition_types)",
        "get_relations(#0)",
        "get_neighbors(#0,exhibitions.type_of_exhibition.exhibitions_of_this_type)",
        "get_relations(#1)",
        "get_neighbors(#1,exhibitions.exhibition.subjects)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "27"
        }
      ]
    },
    {
      "question": "how many infectious diseases can a flea transmit?",
      "qid": "4303160000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Flea": "m.0k8by"
      },
      "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.0k8by)))))",
      "actions": [
        "get_relations(m.0k8by)",
        "get_neighbors(m.0k8by,medicine.vector_of_disease.disease)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
        "get_relations(#1)",
        "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "103"
        }
      ]
    },
    {
      "question": "Name the year and championship first won by the team that play in Old Trafford, Greater Manchester?",
      "qid": "WebQTrn-1018_b87d6f4be9902915cf4ce73d259aa48c_cwq",
      "source": "cwq",
      "entities": {
        "Old Trafford, Greater Manchester": "m.07cd78"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.location m.07cd78)) time.event.end_date)",
      "actions": [
        "get_relations(m.07cd78)",
        "get_neighbors(m.07cd78,sports.sports_team_location.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04gk9y8",
          "answer_type": "Entity",
          "entity_name": "1976–77 FA Cup"
        }
      ]
    },
    {
      "question": "which military units participated in the gettysburg battle are from the same place as 1st louisiana native guard?",
      "qid": "250000401_graphquestions",
      "source": "graphquestions",
      "entities": {
        "gettysburg battle": "m.01jnm",
        "1st Louisiana Native Guard": "m.0hr6dl9"
      },
      "s_expression": "(AND base.americancivilwar.military_unit (AND (JOIN military.military_unit.place_of_origin (JOIN (R military.military_unit.place_of_origin) m.0hr6dl9)) (JOIN base.americancivilwar.military_unit.conflicts_participated_in m.01jnm)))",
      "actions": [
        "get_relations(m.0hr6dl9)",
        "get_neighbors(m.0hr6dl9,military.military_unit.place_of_origin)",
        "get_relations(#0)",
        "get_neighbors(#0,military.military_unit_place_of_origin.military_units)",
        "get_relations(m.01jnm)",
        "get_neighbors(m.01jnm,base.americancivilwar.battle.military_units_involved_in_this_conflict)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04gjww9",
          "entity_name": "10th Louisiana Infantry"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l684",
          "entity_name": "15th Louisiana Infantry Regiment"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l66_",
          "entity_name": "14th Louisiana Infantry Regiment"
        }
      ]
    },
    {
      "question": "polytechnic university of catalonia employee johannes kepler works in what dept?",
      "qid": "4301362001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Johannes Kepler": "m.0403d",
        "Polytechnic University of Catalonia": "m.0h3xj"
      },
      "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.0403d)) (JOIN (R education.university.departments) m.0h3xj)))",
      "actions": [
        "get_relations(m.0403d)",
        "get_neighbors(m.0403d,education.academic.research_areas)",
        "get_relations(#0)",
        "get_neighbors(#0,education.field_of_study.academic_departments)",
        "get_relations(m.0h3xj)",
        "get_neighbors(m.0h3xj,education.university.departments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0121jr9_",
          "entity_name": "BarcelonaTech (UPC) School of Mathematics and Statistics"
        }
      ]
    },
    {
      "question": "What legal system is practiced in the birthplace of Emanuel Lasker within Australia?",
      "qid": "WebQTrn-3360_3ce332b703593e71708a5604865c5758_cwq",
      "source": "cwq",
      "entities": {
        "Australia": "m.0chghy",
        "Emanuel Lasker": "m.01kfm7"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0chghy) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
      "actions": [
        "get_relations(m.0chghy)",
        "get_neighbors(m.0chghy,location.country.form_of_government)",
        "get_relations(m.01kfm7)",
        "get_neighbors(m.01kfm7,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "Who was the vice president of the president who said \"Seriously, I do not think I fit for the presidency.\" ?",
      "qid": "WebQTrn-1777_87feb43d4b743e2f0172e00f50bfada2_cwq",
      "source": "cwq",
      "entities": {
        "Seriously, I do not think I fit for the presidency.": "m.048jc3k"
      },
      "s_expression": "(ARGMAX (JOIN (R government.us_president.vice_president) (JOIN people.person.quotations m.048jc3k)) government.us_vice_president.vice_president_number)",
      "actions": [
        "get_relations(m.048jc3k)",
        "get_neighbors(m.048jc3k,media_common.quotation.author)",
        "get_relations(#0)",
        "get_neighbors(#0,government.us_president.vice_president)",
        "get_attributes(#1)",
        "argmax(#1,government.us_vice_president.vice_president_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.0rmg",
          "answer_type": "Entity",
          "entity_name": "Andrew Johnson"
        }
      ]
    },
    {
      "question": "what sonatas was most recently performed?",
      "qid": "4303240000000_grailqa",
      "source": "grailqa",
      "entities": {
        "sonatas": "m.0c0yr"
      },
      "s_expression": "(ARGMAX (AND music.composition (JOIN music.composition.form (JOIN music.compositional_form.superforms m.0c0yr))) music.composition.date_of_first_performance)",
      "actions": [
        "get_relations(m.0c0yr)",
        "get_neighbors(m.0c0yr,music.compositional_form.subforms)",
        "get_relations(#0)",
        "get_neighbors(#0,music.compositional_form.compositions)",
        "get_attributes(#1)",
        "argmax(#1,music.composition.date_of_first_performance)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0wfz80v",
          "entity_name": "Piano Sonata No. 1"
        }
      ]
    },
    {
      "question": "what isos does the camera d1 support from nikkor?",
      "qid": "4304013008000_grailqa",
      "source": "grailqa",
      "entities": {
        "d1": "m.07mx9v",
        "Nikkor": "m.030s04"
      },
      "s_expression": "(AND digicams.camera_iso (AND (JOIN digicams.camera_iso.cameras m.07mx9v) (JOIN (R digicams.digital_camera.iso_setting) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.030s04))))",
      "actions": [
        "get_relations(m.07mx9v)",
        "get_neighbors(m.07mx9v,digicams.digital_camera.iso_setting)",
        "get_relations(m.030s04)",
        "get_neighbors(m.030s04,digicams.camera_sensor_manufacturer.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.iso_setting)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg58",
          "entity_name": "800"
        }
      ]
    },
    {
      "question": "In the region of Australia where Emanuel Lascar was born, what form of government ruled the land?",
      "qid": "WebQTest-1226_3ce332b703593e71708a5604865c5758_cwq",
      "source": "cwq",
      "entities": {
        "Australia": "m.0chghy",
        "emanuel lascar": "m.01kfm7"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0chghy) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
      "actions": [
        "get_relations(m.0chghy)",
        "get_neighbors(m.0chghy,location.country.form_of_government)",
        "get_relations(m.01kfm7)",
        "get_neighbors(m.01kfm7,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "what is the number of religious texts that include both jehovah's witness and oriental orthodox texts?",
      "qid": "3206221009000_grailqa",
      "source": "grailqa",
      "entities": {
        "oriental orthodox": "m.05pbd",
        "jehovah's witness": "m.0dtdq"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of m.05pbd) (JOIN (R religion.religion.texts) m.0dtdq))))",
      "actions": [
        "get_relations(m.05pbd)",
        "get_neighbors(m.05pbd,religion.religion.texts)",
        "get_relations(m.0dtdq)",
        "get_neighbors(m.0dtdq,religion.religion.texts)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "where can you get games developed by nintendo on virtual console?",
      "qid": "498000500_graphquestions",
      "source": "graphquestions",
      "entities": {
        "Nintendo": "m.059wk",
        "Virtual Console": "m.07sg3j"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.developer m.059wk) (JOIN cvg.game_version.distributed_through m.07sg3j))))",
      "actions": [
        "get_relations(m.059wk)",
        "get_neighbors(m.059wk,cvg.cvg_developer.game_versions_developed)",
        "get_relations(m.07sg3j)",
        "get_neighbors(m.07sg3j,cvg.computer_game_distribution_system.games_distributed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02j9z",
          "entity_name": "Europe"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_3d",
          "entity_name": "Japan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059g4",
          "entity_name": "North America"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0chghy",
          "entity_name": "Australia"
        }
      ]
    },
    {
      "question": "When did Sports Owner Tom Gores sports team last win the Championship?",
      "qid": "WebQTest-895_afa15f6b9dc58ac550f7e43be659229c_cwq",
      "source": "cwq",
      "entities": {
        "Tom Gores": "m.0dftcf"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.0dftcf)) time.event.start_date)",
      "actions": [
        "get_relations(m.0dftcf)",
        "get_neighbors(m.0dftcf,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.07p0zz",
          "answer_type": "Entity",
          "entity_name": "2004 NBA Finals"
        }
      ]
    },
    {
      "question": "what concertos was performed most recently?",
      "qid": "4303240005000_grailqa",
      "source": "grailqa",
      "entities": {
        "concertos": "m.0c0y7"
      },
      "s_expression": "(ARGMAX (AND music.composition (JOIN music.composition.form (JOIN music.compositional_form.superforms m.0c0y7))) music.composition.date_of_first_performance)",
      "actions": [
        "get_relations(m.0c0y7)",
        "get_neighbors(m.0c0y7,music.compositional_form.subforms)",
        "get_relations(#0)",
        "get_neighbors(#0,music.compositional_form.compositions)",
        "get_attributes(#1)",
        "argmax(#1,music.composition.date_of_first_performance)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04j50hm",
          "entity_name": "Concerto for Piano and Orchestra no. 2"
        }
      ]
    },
    {
      "question": "the setting that is used by sony a100 and olympus stylus 1020 has how many camera iso capabilities?",
      "qid": "3205827004000_grailqa",
      "source": "grailqa",
      "entities": {
        "sony a100": "m.03hfz55",
        "Olympus Stylus 1020": "m.03q2p88"
      },
      "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.03hfz55) (JOIN (R digicams.digital_camera.iso_setting) m.03q2p88))))",
      "actions": [
        "get_relations(m.03hfz55)",
        "get_neighbors(m.03hfz55,digicams.digital_camera.iso_setting)",
        "get_relations(m.03q2p88)",
        "get_neighbors(m.03q2p88,digicams.digital_camera.iso_setting)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "6"
        }
      ]
    },
    {
      "question": "what was the programming language first introduced by van rossum which was influenced by another language?",
      "qid": "4303199017000_grailqa",
      "source": "grailqa",
      "entities": {
        "van rossum": "m.01h05c"
      },
      "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.01h05c))) computer.programming_language.introduced)",
      "actions": [
        "get_relations(m.01h05c)",
        "get_neighbors(m.01h05c,computer.programming_language_developer.programming_languages_developed)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.influenced)",
        "get_attributes(#1)",
        "argmin(#1,computer.programming_language.introduced)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05zrn",
          "entity_name": "Perl"
        }
      ]
    },
    {
      "question": "Which arena does the squad that claimed victory in the 1938 Stanley Cup Finals championship play its games in?",
      "qid": "WebQTest-1027_28503761a4f035cb28b9b60c4a6af408_cwq",
      "source": "cwq",
      "entities": {
        "1938 Stanley Cup Finals": "m.03c6qq8"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.championships m.03c6qq8)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.03c6qq8)",
        "get_neighbors(m.03c6qq8,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.02nshs",
          "answer_type": "Entity",
          "entity_name": "United Center"
        }
      ]
    },
    {
      "question": "drugs formulated from aluminum oxide/kaolin/barium cation/bromine/calcium cation/chimaphila umbellata/chlorine/ferric cation/hydrofluoric acid/lemna minor/nitric acid/lead/strychnine/comfrey root homeopathic preparation containing active ingredient serotonin have what dosage form?",
      "qid": "5400022013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Aluminum oxide/Kaolin/Barium cation/Bromine/Calcium cation/Chimaphila umbellata/Chlorine/Ferric cation/Hydrofluoric acid/Lemna minor/Nitric acid/Lead/Strychnine/Comfrey root homeopathic preparation": "m.0hqx2f4",
        "Serotonin": "m.073z8"
      },
      "s_expression": "(AND medicine.drug_dosage_form (AND (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.formulation_of m.0hqx2f4)) (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.active_ingredient_moieties m.073z8))))",
      "actions": [
        "get_relations(m.0hqx2f4)",
        "get_neighbors(m.0hqx2f4,medicine.drug.marketed_formulations)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.drug_formulation.dosage_form)",
        "get_relations(m.073z8)",
        "get_neighbors(m.073z8,medicine.drug_ingredient.active_moiety_of_formulation)",
        "get_relations(#2)",
        "get_neighbors(#2,medicine.drug_formulation.dosage_form)",
        "intersection(#1,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04k94",
          "entity_name": "Liquid"
        }
      ]
    },
    {
      "question": "what track released and written by brian pugsley is the longest?",
      "qid": "4300020007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Brian Pugsley": "m.03d_z6z"
      },
      "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.03d_z6z))) music.release_track.length)",
      "actions": [
        "get_relations(m.03d_z6z)",
        "get_neighbors(m.03d_z6z,music.engineer.tracks_engineered)",
        "get_relations(#0)",
        "get_neighbors(#0,music.recording.tracks)",
        "get_attributes(#1)",
        "argmax(#1,music.release_track.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0mv1yrl",
          "entity_name": "Mumma"
        }
      ]
    },
    {
      "question": "who is the founding figure of the religion featuredlag baomer, that is part of abrahamic faith?",
      "qid": "4302278012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Lag BaOmer": "m.05m6br",
        "abrahamic faith": "m.0f_h6"
      },
      "s_expression": "(AND religion.founding_figure (JOIN (R religion.religion.founding_figures) (AND (JOIN (R time.holiday.featured_in_religions) m.05m6br) (JOIN religion.religion.is_part_of m.0f_h6))))",
      "actions": [
        "get_relations(m.05m6br)",
        "get_neighbors(m.05m6br,time.holiday.featured_in_religions)",
        "get_relations(m.0f_h6)",
        "get_neighbors(m.0f_h6,religion.religion.includes)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,religion.religion.founding_figures)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01b5wx",
          "entity_name": "Sarah"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0pwb",
          "entity_name": "Abraham"
        }
      ]
    },
    {
      "question": "where in unc charlotte college of computing and informatics does yuji matsumoto work?",
      "qid": "4301362004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Yuji Matsumoto": "m.0zrnb4z",
        "UNC Charlotte College of Computing and Informatics": "m.0hpdwzy"
      },
      "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.0zrnb4z)) (JOIN (R education.university.departments) m.0hpdwzy)))",
      "actions": [
        "get_relations(m.0zrnb4z)",
        "get_neighbors(m.0zrnb4z,education.academic.research_areas)",
        "get_relations(#0)",
        "get_neighbors(#0,education.field_of_study.academic_departments)",
        "get_relations(m.0hpdwzy)",
        "get_neighbors(m.0hpdwzy,education.university.departments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hz79b9",
          "entity_name": "UNC Charlotte Department of Computer Science"
        }
      ]
    },
    {
      "question": "Which timezone currently contains both Nevada and locations near the San Francisco International Airport?",
      "qid": "WebQTrn-2382_18a4999497ccd2fae27570283a228147_cwq",
      "source": "cwq",
      "entities": {
        "Nevada": "m.059_c",
        "San Francisco International Airport": "m.01l4xk"
      },
      "s_expression": "(AND (JOIN (R location.location.time_zones) m.059_c) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.01l4xk)))",
      "actions": [
        "get_relations(m.059_c)",
        "get_neighbors(m.059_c,location.location.time_zones)",
        "get_relations(m.01l4xk)",
        "get_neighbors(m.01l4xk,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02lcqs",
          "answer_type": "Entity",
          "entity_name": "Pacific Time Zone"
        }
      ]
    },
    {
      "question": "how many amusement parks do tokyo disneyland and disneyland park have?",
      "qid": "3206299008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Disneyland Park": "m.04cj6k",
        "Tokyo Disneyland": "m.044z1n"
      },
      "s_expression": "(COUNT (AND amusement_parks.amusement_park_area (AND (JOIN amusement_parks.amusement_park_area.parks m.04cj6k) (JOIN amusement_parks.amusement_park_area.parks m.044z1n))))",
      "actions": [
        "get_relations(m.04cj6k)",
        "get_neighbors(m.04cj6k,amusement_parks.park.areas)",
        "get_relations(m.044z1n)",
        "get_neighbors(m.044z1n,amusement_parks.park.areas)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "3"
        }
      ]
    },
    {
      "question": "what subject does the quote in love, as in gluttony, pleasure is a matter of the utmost precision. as spoken by the angel of remembrance refer to?",
      "qid": "4300443015000_grailqa",
      "source": "grailqa",
      "entities": {
        "In love, as in gluttony, pleasure is a matter of the utmost precision.": "m.048j2cm",
        "Angel of Remembrance": "m.0h3grm9"
      },
      "s_expression": "(AND media_common.quotation_subject (AND (JOIN (R media_common.quotation.subjects) (JOIN media_common.quotation.spoken_by_character m.0h3grm9)) (JOIN (R media_common.quotation.subjects) m.048j2cm)))",
      "actions": [
        "get_relations(m.0h3grm9)",
        "get_neighbors(m.0h3grm9,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.subjects)",
        "get_relations(m.048j2cm)",
        "get_neighbors(m.048j2cm,media_common.quotation.subjects)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.048knlz",
          "entity_name": "Love"
        }
      ]
    },
    {
      "question": "what martial art has the same category as kuk sool won and has grappling?",
      "qid": "4301064000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Kuk Sool Won": "m.055rn5",
        "Grappling": "m.039cp"
      },
      "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.055rn5)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.039cp)))",
      "actions": [
        "get_relations(m.055rn5)",
        "get_neighbors(m.055rn5,martial_arts.martial_art.category)",
        "get_relations(#0)",
        "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
        "get_relations(m.039cp)",
        "get_neighbors(m.039cp,martial_arts.martial_art_category.martial_arts)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tm7f",
          "entity_name": "Kajukenbo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03bs3p",
          "entity_name": "Sanshou"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.041d65",
          "entity_name": "Vovinam"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07k4r",
          "entity_name": "Tai chi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01vqp5",
          "entity_name": "Systema"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09h901",
          "entity_name": "Shidōkan Karate"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hbj9",
          "entity_name": "Hapkido"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01qcyb",
          "entity_name": "Kalaripayattu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02618d8",
          "entity_name": "Russian All-Round Fighting"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.048yh",
          "entity_name": "Krav Maga"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b65c",
          "entity_name": "Hwa Rang Do"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.061px",
          "entity_name": "Pankration"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06jm_r",
          "entity_name": "Bartitsu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06k44z",
          "entity_name": "Modern Arnis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0n18n",
          "entity_name": "Daitō-ryū Aiki-jūjutsu"
        }
      ]
    },
    {
      "question": "the czecho-slovakia has how many breeds of dogs that has the same temperament as the cairn terriers?",
      "qid": "4303460009000_grailqa",
      "source": "grailqa",
      "entities": {
        "cairn terriers": "m.02z57c",
        "czecho-slovakia": "m.01mk6"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.01mk6)) (JOIN (R biology.animal_breed.temperament) m.02z57c))))",
      "actions": [
        "get_relations(m.01mk6)",
        "get_neighbors(m.01mk6,biology.breed_origin.breeds_originating_here)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.02z57c)",
        "get_neighbors(m.02z57c,biology.animal_breed.temperament)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "blitz basic and object lisp use programming language paradigm what is the other program language influenced by?",
      "qid": "4300798006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Object Lisp": "m.042ttz",
        "Blitz BASIC": "m.01jm0"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.042ttz) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.01jm0))))",
      "actions": [
        "get_relations(m.042ttz)",
        "get_neighbors(m.042ttz,computer.programming_language.language_paradigms)",
        "get_relations(m.01jm0)",
        "get_neighbors(m.01jm0,computer.programming_language.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.programming_language.language_paradigms)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05prj",
          "entity_name": "Object-oriented programming"
        }
      ]
    },
    {
      "question": "Who was Niccolo Machiavelli influenced by, that was a psychoanalyst?",
      "qid": "WebQTrn-1719_599508e0ec066d52b4ffa8f5eeb85b8a_cwq",
      "source": "cwq",
      "entities": {
        "niccolo machiavelli": "m.05cvs",
        "Psychoanalyst": "m.02nblbn"
      },
      "s_expression": "(AND (JOIN (R influence.influence_node.influenced_by) m.05cvs) (JOIN influence.influence_node.influenced (JOIN people.person.profession m.02nblbn)))",
      "actions": [
        "get_relations(m.05cvs)",
        "get_neighbors(m.05cvs,influence.influence_node.influenced_by)",
        "get_relations(m.02nblbn)",
        "get_neighbors(m.02nblbn,people.profession.people_with_this_profession)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.05qmj",
          "answer_type": "Entity",
          "entity_name": "Plato"
        },
        {
          "answer_argument": "m.0gz_",
          "answer_type": "Entity",
          "entity_name": "Aristotle"
        }
      ]
    },
    {
      "question": "what olympic event was contested officially in 1904 olympics and other olympic games in tokyo metropolis?",
      "qid": "4300161015000_grailqa",
      "source": "grailqa",
      "entities": {
        "tokyo metropolis": "m.07dfk",
        "1904 olympics": "m.018wrk"
      },
      "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.07dfk)) (JOIN olympics.olympic_event.olympic_games_contested m.018wrk)))",
      "actions": [
        "get_relations(m.07dfk)",
        "get_neighbors(m.07dfk,olympics.olympic_host_city.olympics_hosted)",
        "get_relations(#0)",
        "get_neighbors(#0,olympics.olympic_games.events)",
        "get_relations(m.018wrk)",
        "get_neighbors(m.018wrk,olympics.olympic_games.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gnx9y",
          "entity_name": "Men's 300m Free Rifle, 3 Positions"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3cx",
          "entity_name": "Men's Épée individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3cl",
          "entity_name": "Men's Shot put"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2pc",
          "entity_name": "Men's Discus throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk29t",
          "entity_name": "Men's Parallel bars"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2c_",
          "entity_name": "Men's Gymnastics, individual all-round"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2cj",
          "entity_name": "Men's Long jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2f7",
          "entity_name": "Men's 50m pistol"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2hl",
          "entity_name": "Men's Athletics, 100m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2lq",
          "entity_name": "Men's Foil individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2mz",
          "entity_name": "Men's Marathon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qm",
          "entity_name": "Men's Athletics, 400m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2rd",
          "entity_name": "Men's Pole vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2tl",
          "entity_name": "Men's Athletics, 400m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2x7",
          "entity_name": "Men's Pommel horse"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2xq",
          "entity_name": "Men's Sabre individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2yh",
          "entity_name": "Men's Athletics, 200m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2zl",
          "entity_name": "Men's Horizontal bar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk300",
          "entity_name": "Men's Hammer throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30h",
          "entity_name": "Men's Athletics, 110m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32_",
          "entity_name": "Men's Triple jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32p",
          "entity_name": "Men's High jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39d",
          "entity_name": "Men's Vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3b5",
          "entity_name": "Men's Athletics, 800m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3dj",
          "entity_name": "Men's Decathlon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3kp",
          "entity_name": "Men's Rings"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3l9",
          "entity_name": "Men's Single sculls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3n5",
          "entity_name": "Men's Athletics, 1500m"
        }
      ]
    },
    {
      "question": "What type of government does Japan use in Baldur von Schirach's place of birth?",
      "qid": "WebQTest-738_3f76d491e90682cc29e3de2546e1f9c5_cwq",
      "source": "cwq",
      "entities": {
        "Japan": "m.03_3d",
        "Baldur von Schirach": "m.0143sn"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.03_3d) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.0143sn)))",
      "actions": [
        "get_relations(m.03_3d)",
        "get_neighbors(m.03_3d,location.country.form_of_government)",
        "get_relations(m.0143sn)",
        "get_neighbors(m.0143sn,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "What zoo in downtown Chicago opened latest?",
      "qid": "WebQTrn-825_e7bc77994fe673069b79e5bfbfd7da41_cwq",
      "source": "cwq",
      "entities": {
        "Chicago": "m.01_d4"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R travel.travel_destination.tourist_attractions) m.01_d4) (JOIN location.location.containedby m.01_d4)) zoos.zoo.opened)",
      "actions": [
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,travel.travel_destination.tourist_attractions)",
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,location.location.contains)",
        "intersection(#0,#1)",
        "get_attributes(#2)",
        "argmax(#2,zoos.zoo.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.02jw0z",
          "answer_type": "Entity",
          "entity_name": "Shedd Aquarium"
        }
      ]
    },
    {
      "question": "What form of Government is the UK, birth place of Baldur von Schirach?",
      "qid": "WebQTest-659_3f76d491e90682cc29e3de2546e1f9c5_cwq",
      "source": "cwq",
      "entities": {
        "UK": "m.07ssc",
        "Baldur von Schirach": "m.0143sn"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.07ssc) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.0143sn)))",
      "actions": [
        "get_relations(m.07ssc)",
        "get_neighbors(m.07ssc,location.country.form_of_government)",
        "get_relations(m.0143sn)",
        "get_neighbors(m.0143sn,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "what religion is part of east asian religions and has same practices with buddhism?",
      "qid": "4300140006000_grailqa",
      "source": "grailqa",
      "entities": {
        "East Asian religions": "m.028b9mc",
        "Buddhism": "m.092bf5"
      },
      "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.092bf5)) (JOIN religion.religion.is_part_of m.028b9mc)))",
      "actions": [
        "get_relations(m.092bf5)",
        "get_neighbors(m.092bf5,religion.religion.practices)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religious_practice.practice_of)",
        "get_relations(m.028b9mc)",
        "get_neighbors(m.028b9mc,religion.religion.includes)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gvx",
          "entity_name": "Taoism"
        }
      ]
    },
    {
      "question": "how many different game cube models used powerpc processors?",
      "qid": "3205922015000_grailqa",
      "source": "grailqa",
      "entities": {
        "game cube": "m.0f0w2",
        "PowerPC": "m.0620f"
      },
      "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.0f0w2) (JOIN computer.computer.processor m.0620f))))",
      "actions": [
        "get_relations(m.0f0w2)",
        "get_neighbors(m.0f0w2,computer.computer.includes_models)",
        "get_relations(m.0620f)",
        "get_neighbors(m.0620f,computer.computer_processor.used_in_computers)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what are quotations from jihan, froth daughter that are addressed the same as \"i want to live like a man.\"?",
      "qid": "4302343014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Jihan, Froth Daughter": "m.0bxttn0",
        "\"I want to live like a man.\"": "m.0j3x8j6"
      },
      "s_expression": "(AND media_common.quotation_addressee (AND (JOIN media_common.quotation_addressee.quotations (JOIN (R fictional_universe.fictional_character.quotations) m.0bxttn0)) (JOIN media_common.quotation_addressee.quotations m.0j3x8j6)))",
      "actions": [
        "get_relations(m.0bxttn0)",
        "get_neighbors(m.0bxttn0,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.addressee)",
        "get_relations(m.0j3x8j6)",
        "get_neighbors(m.0j3x8j6,media_common.quotation.addressee)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bxj80p",
          "entity_name": "Tempus"
        }
      ]
    },
    {
      "question": "what cheese from domestic sheep milk has the same texture as asiago cheese?",
      "qid": "4302129007000_grailqa",
      "source": "grailqa",
      "entities": {
        "domestic sheep": "m.07bgp",
        "Asiago cheese": "m.02k5rl"
      },
      "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.07bgp) (JOIN (R food.cheese_texture.cheeses) (JOIN food.cheese_texture.cheeses m.02k5rl))))",
      "actions": [
        "get_relations(m.07bgp)",
        "get_neighbors(m.07bgp,food.cheese_milk_source.cheeses)",
        "get_relations(m.02k5rl)",
        "get_neighbors(m.02k5rl,food.cheese.texture)",
        "get_relations(#1)",
        "get_neighbors(#1,food.cheese_texture.cheeses)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01glzg",
          "entity_name": "Cabrales cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.068kk",
          "entity_name": "Pecorino Romano"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02h8bgl",
          "entity_name": "Berkswell"
        }
      ]
    },
    {
      "question": "what religion is party of syncretism and has same practices with hinduism?",
      "qid": "4300140017000_grailqa",
      "source": "grailqa",
      "entities": {
        "Syncretism": "m.0r8kd4z",
        "Hinduism": "m.03j6c"
      },
      "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.03j6c)) (JOIN religion.religion.is_part_of m.0r8kd4z)))",
      "actions": [
        "get_relations(m.03j6c)",
        "get_neighbors(m.03j6c,religion.religion.practices)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religious_practice.practice_of)",
        "get_relations(m.0r8kd4z)",
        "get_neighbors(m.0r8kd4z,religion.religion.includes)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gvx",
          "entity_name": "Taoism"
        }
      ]
    },
    {
      "question": "the religion featuring tisha b'av, which is part of abrahamic faith, has a founding leader who is named what?",
      "qid": "4302278000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Tisha B'Av": "m.01t663",
        "abrahamic faith": "m.0f_h6"
      },
      "s_expression": "(AND religion.founding_figure (JOIN (R religion.religion.founding_figures) (AND (JOIN (R time.holiday.featured_in_religions) m.01t663) (JOIN religion.religion.is_part_of m.0f_h6))))",
      "actions": [
        "get_relations(m.01t663)",
        "get_neighbors(m.01t663,time.holiday.featured_in_religions)",
        "get_relations(m.0f_h6)",
        "get_neighbors(m.0f_h6,religion.religion.includes)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,religion.religion.founding_figures)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01b5wx",
          "entity_name": "Sarah"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0pwb",
          "entity_name": "Abraham"
        }
      ]
    },
    {
      "question": "what was the most recently formed cyclone in the same category as hurricane dolly?",
      "qid": "4303808010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Hurricane Dolly": "m.04dn799"
      },
      "s_expression": "(ARGMAX (AND meteorology.tropical_cyclone (JOIN meteorology.tropical_cyclone.category (JOIN (R meteorology.tropical_cyclone.category) m.04dn799))) meteorology.tropical_cyclone.formed)",
      "actions": [
        "get_relations(m.04dn799)",
        "get_neighbors(m.04dn799,meteorology.tropical_cyclone.category)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
        "get_attributes(#1)",
        "argmax(#1,meteorology.tropical_cyclone.formed)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.011v6mk8",
          "entity_name": "Typhoon Kalmaegi"
        }
      ]
    },
    {
      "question": "which storage type is supported by canon 1d mark iii and those with color filter array of foveon x3 sensor?",
      "qid": "4302099014000_grailqa",
      "source": "grailqa",
      "entities": {
        "canon 1d mark iii": "m.02pmy2l",
        "Foveon X3 sensor": "m.02g86w"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN digicams.camera_storage_type.compatible_cameras m.02pmy2l) (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.color_filter_array_type m.02g86w))))",
      "actions": [
        "get_relations(m.02pmy2l)",
        "get_neighbors(m.02pmy2l,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.02g86w)",
        "get_neighbors(m.02g86w,digicams.camera_color_filter_array_type.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.supported_storage_types)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01rlj7",
          "entity_name": "CompactFlash"
        }
      ]
    },
    {
      "question": "What was the name of the song that Pink composed on Atom Heart Mother's first album?",
      "qid": "WebQTest-954_8048491a0f6eda7e90ddc7bd375bdd84_cwq",
      "source": "cwq",
      "entities": {
        "Atom Heart Mother": "m.059s8w"
      },
      "s_expression": "(ARGMIN (JOIN (R music.artist.album) (JOIN music.composer.compositions m.059s8w)) music.album.release_date)",
      "actions": [
        "get_relations(m.059s8w)",
        "get_neighbors(m.059s8w,music.composition.composer)",
        "get_relations(#0)",
        "get_neighbors(#0,music.artist.album)",
        "get_attributes(#1)",
        "argmin(#1,music.album.release_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0h3bhb1",
          "answer_type": "Entity",
          "entity_name": "Psychedelic Session-compilation album"
        }
      ]
    },
    {
      "question": "in what countries is the version developed by commodore gaming and distributed through virtual console released?",
      "qid": "4301141009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Virtual Console": "m.07sg3j",
        "Commodore Gaming": "m.02pz6yx"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.07sg3j) (JOIN (R cvg.cvg_developer.game_versions_developed) m.02pz6yx))))",
      "actions": [
        "get_relations(m.07sg3j)",
        "get_neighbors(m.07sg3j,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.02pz6yx)",
        "get_neighbors(m.02pz6yx,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.09c7w0",
          "entity_name": "United States of America"
        }
      ]
    },
    {
      "question": "Where do most people live in the country where Egyptian Arabic is spoken?",
      "qid": "WebQTrn-3037_eacad512118512366a932ffd59ad4578_cwq",
      "source": "cwq",
      "entities": {
        "Egyptian Arabic": "m.02hx2cr"
      },
      "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN location.country.languages_spoken m.02hx2cr)) topic_server.population_number)",
      "actions": [
        "get_relations(m.02hx2cr)",
        "get_neighbors(m.02hx2cr,language.human_language.countries_spoken_in)",
        "get_relations(#0)",
        "get_neighbors(#0,location.location.contains)",
        "get_attributes(#1)",
        "argmax(#1,topic_server.population_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.080msrv",
          "answer_type": "Entity",
          "entity_name": "Greater Cairo"
        }
      ]
    },
    {
      "question": "what year did the mets win their first world series",
      "qid": "WebQTrn-2356_webqsp",
      "source": "webqsp",
      "entities": {
        "mets": "m.05g76",
        "World Series": "m.0fjp3"
      },
      "s_expression": "(ARGMIN (AND (JOIN (R sports.sports_team.championships) m.05g76) (JOIN sports.sports_championship_event.championship m.0fjp3)) time.event.start_date)",
      "actions": [
        "get_relations(m.05g76)",
        "get_neighbors(m.05g76,sports.sports_team.championships)",
        "get_relations(m.0fjp3)",
        "get_neighbors(m.0fjp3,sports.sports_championship.events)",
        "intersection(#0,#1)",
        "get_attributes(#2)",
        "argmin(#2,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04jg9_",
          "answer_type": "Entity",
          "entity_name": "1969 World Series"
        }
      ]
    },
    {
      "question": "name all types of museums of the same type as musée d'art contemporain de montréal and arlington gallery.",
      "qid": "5400031003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Musée d'art contemporain de Montréal": "m.027yjjq",
        "Arlington Gallery": "m.04_jgbb"
      },
      "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.027yjjq) (JOIN architecture.type_of_museum.museums m.04_jgbb)))))",
      "actions": [
        "get_relations(m.027yjjq)",
        "get_neighbors(m.027yjjq,architecture.museum.type_of_museum)",
        "get_relations(m.04_jgbb)",
        "get_neighbors(m.04_jgbb,architecture.museum.type_of_museum)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,architecture.type_of_museum.museums)",
        "get_relations(#3)",
        "get_neighbors(#3,architecture.museum.type_of_museum)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gz",
          "entity_name": "Modern art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c9td2",
          "entity_name": "National museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9jkk",
          "entity_name": "Architecture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgh_k",
          "entity_name": "History museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgjgh",
          "entity_name": "Natural history museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0jvjpx6",
          "entity_name": "Antiquities museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026w5hv",
          "entity_name": "Contemporary art gallery"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pn3n6",
          "entity_name": "Historic house museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0528d17",
          "entity_name": "Photography Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kt8qr",
          "entity_name": "Culture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gt",
          "entity_name": "Archaeology museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059x_pp",
          "entity_name": "Archaeological Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wvyw7",
          "entity_name": "Design museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027v0wz",
          "entity_name": "University museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059vqps",
          "entity_name": "Ancient Art Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9gbh",
          "entity_name": "Jewish museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j58y",
          "entity_name": "Science museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0w_y7rb",
          "entity_name": "Asian art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99t0",
          "entity_name": "Decorative art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0djx8f",
          "entity_name": "Children's museum"
        }
      ]
    },
    {
      "question": "what museums share a type with powerhouse museum and montshire museum of science?",
      "qid": "5400031002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Powerhouse Museum": "m.02x7mq",
        "Montshire Museum of Science": "m.03pbmr"
      },
      "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.02x7mq) (JOIN architecture.type_of_museum.museums m.03pbmr)))))",
      "actions": [
        "get_relations(m.02x7mq)",
        "get_neighbors(m.02x7mq,architecture.museum.type_of_museum)",
        "get_relations(m.03pbmr)",
        "get_neighbors(m.03pbmr,architecture.museum.type_of_museum)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,architecture.type_of_museum.museums)",
        "get_relations(#3)",
        "get_neighbors(#3,architecture.museum.type_of_museum)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgjgh",
          "entity_name": "Natural history museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hhbr",
          "entity_name": "Art Gallery"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgh_k",
          "entity_name": "History museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kt8qr",
          "entity_name": "Culture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9d_3",
          "entity_name": "Technology museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pwl3",
          "entity_name": "Maritime museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lc8dl",
          "entity_name": "Aviation museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0fpc1f2",
          "entity_name": "Industrial museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0djx8f",
          "entity_name": "Children's museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0fxy91",
          "entity_name": "Aviation museum"
        }
      ]
    },
    {
      "question": "how many different mac models used motorola 68040 processors?",
      "qid": "3205922007000_grailqa",
      "source": "grailqa",
      "entities": {
        "mac": "m.0zd6",
        "Motorola 68040": "m.05397"
      },
      "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.0zd6) (JOIN computer.computer.processor m.05397))))",
      "actions": [
        "get_relations(m.0zd6)",
        "get_neighbors(m.0zd6,computer.computer.includes_models)",
        "get_relations(m.05397)",
        "get_neighbors(m.05397,computer.computer_processor.used_in_computers)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what camera storage type is supported by panasonic lumix dmc-g2 and the digital camera with iso setting of 12800?",
      "qid": "4302372009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Panasonic Lumix DMC-G2": "m.0gywrrp",
        "12800": "m.04sy2g0"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.04sy2g0)) (JOIN (R digicams.digital_camera.supported_storage_types) m.0gywrrp)))",
      "actions": [
        "get_relations(m.04sy2g0)",
        "get_neighbors(m.04sy2g0,digicams.camera_iso.cameras)",
        "get_relations(#0)",
        "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.0gywrrp)",
        "get_neighbors(m.0gywrrp,digicams.digital_camera.supported_storage_types)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tthm",
          "entity_name": "Secure Digital"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0220vm1",
          "entity_name": "SDHC Card"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0h27nlb",
          "entity_name": "SDXC Card"
        }
      ]
    },
    {
      "question": "Team owner John Mara last won which Super Bowls?",
      "qid": "WebQTrn-3290_79bdd4bc7e7acdf09d75459e5efe7293_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "John Mara": "m.094w0s"
      },
      "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.094w0s)) (JOIN sports.sports_championship_event.championship m.06x5s))",
      "actions": [
        "get_relations(m.094w0s)",
        "get_neighbors(m.094w0s,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.043t_rh",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLVI"
        },
        {
          "answer_argument": "m.04myq1",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLII"
        },
        {
          "answer_argument": "m.076sw",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXI"
        },
        {
          "answer_argument": "m.076v7",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXV"
        }
      ]
    },
    {
      "question": "What is the cause of death of the subject of the film Whitney Houston - I Will Always: Unauthorized?",
      "qid": "WebQTrn-2600_a15616e0fe214498a348b5ad6934d511_cwq",
      "source": "cwq",
      "entities": {
        "Drug overdose": "m.01tf_6",
        "Whitney Houston - I Will Always: Unauthorized": "m.012vsnwl"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN film.film_subject.films m.012vsnwl)) (JOIN people.cause_of_death.parent_cause_of_death m.01tf_6))",
      "actions": [
        "get_relations(m.012vsnwl)",
        "get_neighbors(m.012vsnwl,film.film.subjects)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.01tf_6)",
        "get_neighbors(m.01tf_6,people.cause_of_death.includes_causes_of_death)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02nx6jb",
          "answer_type": "Entity",
          "entity_name": "Cocaine overdose"
        }
      ]
    },
    {
      "question": "what category of schools do villanova university school of law and the publisher of george fox university journal fall under?",
      "qid": "4301751005000_grailqa",
      "source": "grailqa",
      "entities": {
        "George Fox University Journal": "m.0zp1xtf",
        "Villanova University School of Law": "m.02p80mq"
      },
      "s_expression": "(AND education.school_category (AND (JOIN (R education.educational_institution.school_type) (JOIN (R education.school_magazine.school) m.0zp1xtf)) (JOIN (R education.educational_institution.school_type) m.02p80mq)))",
      "actions": [
        "get_relations(m.0zp1xtf)",
        "get_neighbors(m.0zp1xtf,education.school_magazine.school)",
        "get_relations(#0)",
        "get_neighbors(#0,education.educational_institution.school_type)",
        "get_relations(m.02p80mq)",
        "get_neighbors(m.02p80mq,education.educational_institution.school_type)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01rs41",
          "entity_name": "Private school"
        }
      ]
    },
    {
      "question": "what visual art form is made by albrecht dürer besides printmaker?",
      "qid": "4302283007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Albrecht Dürer": "m.0z6n",
        "printmaker": "m.0bp7w"
      },
      "s_expression": "(AND visual_art.visual_art_form (JOIN (R visual_art.artwork.art_form) (AND (JOIN visual_art.artwork.artist m.0z6n) (JOIN visual_art.artwork.art_form m.0bp7w))))",
      "actions": [
        "get_relations(m.0z6n)",
        "get_neighbors(m.0z6n,visual_art.visual_artist.artworks)",
        "get_relations(m.0bp7w)",
        "get_neighbors(m.0bp7w,visual_art.visual_art_form.artworks)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,visual_art.artwork.art_form)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05qdh",
          "entity_name": "Painting"
        }
      ]
    },
    {
      "question": "When did the sports team that won the 1974 FA Cup Final championship most recently win the league championship?",
      "qid": "WebQTest-608_6ded35570d49c59e5db960a8330f3486_cwq",
      "source": "cwq",
      "entities": {
        "Football League Cup": "m.012dbw",
        "1974 FA Cup Final": "m.027_53v"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.027_53v)) (JOIN sports.sports_championship_event.championship m.012dbw)) time.event.end_date)",
      "actions": [
        "get_relations(m.027_53v)",
        "get_neighbors(m.027_53v,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.012dbw)",
        "get_neighbors(m.012dbw,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0h_b67k",
          "answer_type": "Entity",
          "entity_name": "2012 Football League Cup Final"
        }
      ]
    },
    {
      "question": "what automotive classes of pontiac parisienne had been modeled after the 2014 ford focus?",
      "qid": "4300308008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Pontiac Parisienne": "m.04p80l",
        "2014 Ford Focus": "m.0_v8m4q"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN (R automotive.model.automotive_class) m.04p80l) (JOIN automotive.automotive_class.examples (JOIN automotive.model.model_years m.0_v8m4q))))",
      "actions": [
        "get_relations(m.04p80l)",
        "get_neighbors(m.04p80l,automotive.model.automotive_class)",
        "get_relations(m.0_v8m4q)",
        "get_neighbors(m.0_v8m4q,automotive.model_year.model)",
        "get_relations(#1)",
        "get_neighbors(#1,automotive.model.automotive_class)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.021mp2",
          "entity_name": "Sedan"
        }
      ]
    },
    {
      "question": "what number of camera iso capability are utilized in the iso setting by hp photosmart e337 and sony cyber-shot dsc-w90?",
      "qid": "3205827014000_grailqa",
      "source": "grailqa",
      "entities": {
        "HP Photosmart E337": "m.03q2r6b",
        "Sony Cyber-shot DSC-W90": "m.04wjk1x"
      },
      "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.03q2r6b) (JOIN (R digicams.digital_camera.iso_setting) m.04wjk1x))))",
      "actions": [
        "get_relations(m.03q2r6b)",
        "get_neighbors(m.03q2r6b,digicams.digital_camera.iso_setting)",
        "get_relations(m.04wjk1x)",
        "get_neighbors(m.04wjk1x,digicams.digital_camera.iso_setting)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "4"
        }
      ]
    },
    {
      "question": "In what place is Harvard University where Scottish Americans are born?",
      "qid": "WebQTest-207_1688c5f3e3514e570a2ea05f5308616f_cwq",
      "source": "cwq",
      "entities": {
        "Harvard University": "m.03ksy",
        "Scottish American": "m.07bch9"
      },
      "s_expression": "(AND (JOIN (R location.location.containedby) m.03ksy) (JOIN location.location.people_born_here (JOIN people.person.ethnicity m.07bch9)))",
      "actions": [
        "get_relations(m.03ksy)",
        "get_neighbors(m.03ksy,location.location.containedby)",
        "get_relations(m.07bch9)",
        "get_neighbors(m.07bch9,people.ethnicity.people)",
        "get_relations(#1)",
        "get_neighbors(#1,people.person.place_of_birth)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01qh7",
          "answer_type": "Entity",
          "entity_name": "Cambridge"
        }
      ]
    },
    {
      "question": "what dug dosage form exist for drugs formulated from dimethicone/silicon and has active ingredient levothyroxine sodium?\n: liquid",
      "qid": "5400022002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Dimethicone/Silicon": "m.0hqwzb7",
        "levothyroxine sodium": "m.05h3j6"
      },
      "s_expression": "(AND medicine.drug_dosage_form (AND (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.formulation_of m.0hqwzb7)) (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.active_ingredient_moieties m.05h3j6))))",
      "actions": [
        "get_relations(m.0hqwzb7)",
        "get_neighbors(m.0hqwzb7,medicine.drug.marketed_formulations)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.drug_formulation.dosage_form)",
        "get_relations(m.05h3j6)",
        "get_neighbors(m.05h3j6,medicine.drug_ingredient.active_moiety_of_formulation)",
        "get_relations(#2)",
        "get_neighbors(#2,medicine.drug_formulation.dosage_form)",
        "intersection(#1,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04k94",
          "entity_name": "Liquid"
        }
      ]
    },
    {
      "question": "virtual console, which is developed by sega of japan, was released where?",
      "qid": "4301141003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Virtual Console": "m.07sg3j",
        "sega of japan": "m.06p8m"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.07sg3j) (JOIN (R cvg.cvg_developer.game_versions_developed) m.06p8m))))",
      "actions": [
        "get_relations(m.07sg3j)",
        "get_neighbors(m.07sg3j,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.06p8m)",
        "get_neighbors(m.06p8m,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.075g54v",
          "entity_name": "Wii/DS NA"
        }
      ]
    },
    {
      "question": "what type of storage is supported by sony alpha 850 with foveon x3 sensor color filter array?",
      "qid": "4302099015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Sony Alpha 850": "m.06_v4pc",
        "Foveon X3 sensor": "m.02g86w"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN digicams.camera_storage_type.compatible_cameras m.06_v4pc) (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.color_filter_array_type m.02g86w))))",
      "actions": [
        "get_relations(m.06_v4pc)",
        "get_neighbors(m.06_v4pc,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.02g86w)",
        "get_neighbors(m.02g86w,digicams.camera_color_filter_array_type.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.supported_storage_types)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01rlj7",
          "entity_name": "CompactFlash"
        }
      ]
    },
    {
      "question": "which supreme served ski run is rated by blue square?",
      "qid": "4301587001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Blue square": "m.04knmg3",
        "Supreme": "m.04kk20l"
      },
      "s_expression": "(AND skiing.ski_run (AND (JOIN skiing.ski_run.rating (JOIN (R skiing.run_rating_symbol.run_rating) m.04knmg3)) (JOIN skiing.ski_run.served_by m.04kk20l)))",
      "actions": [
        "get_relations(m.04knmg3)",
        "get_neighbors(m.04knmg3,skiing.run_rating_symbol.run_rating)",
        "get_relations(#0)",
        "get_neighbors(#0,skiing.run_rating.ski_runs)",
        "get_relations(m.04kk20l)",
        "get_neighbors(m.04kk20l,skiing.ski_lift.runs_served)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmp6",
          "entity_name": "3 Bears"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmmq",
          "entity_name": "Rock N' Roll"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmq6",
          "entity_name": "Big Dipper"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmsg",
          "entity_name": "Sleepy Hollow"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmsq",
          "entity_name": "Upper Big Dipper"
        }
      ]
    },
    {
      "question": "how many exhibition subjects are in nature interrupted?",
      "qid": "4302933007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Nature Interrupted": "m.04l246c"
      },
      "s_expression": "(COUNT (AND exhibitions.exhibition_subject (JOIN (R exhibitions.exhibition.subjects) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) (JOIN (R exhibitions.exhibition.exhibition_types) m.04l246c)))))",
      "actions": [
        "get_relations(m.04l246c)",
        "get_neighbors(m.04l246c,exhibitions.exhibition.exhibition_types)",
        "get_relations(#0)",
        "get_neighbors(#0,exhibitions.type_of_exhibition.exhibitions_of_this_type)",
        "get_relations(#1)",
        "get_neighbors(#1,exhibitions.exhibition.subjects)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "15"
        }
      ]
    },
    {
      "question": "what is a common maldivian cuisine dish that contains tuna fish?",
      "qid": "4301356015000_grailqa",
      "source": "grailqa",
      "entities": {
        "tuna fish": "m.0cj45",
        "Maldivian cuisine": "m.02rzrkf"
      },
      "s_expression": "(AND food.type_of_dish (JOIN food.type_of_dish.dishes (AND (JOIN food.dish.ingredients m.0cj45) (JOIN (R dining.cuisine.dishes) m.02rzrkf))))",
      "actions": [
        "get_relations(m.0cj45)",
        "get_neighbors(m.0cj45,food.ingredient.dishes)",
        "get_relations(m.02rzrkf)",
        "get_neighbors(m.02rzrkf,dining.cuisine.dishes)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,food.dish.type_of_dish1)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0n47s4r",
          "entity_name": "Paste"
        }
      ]
    },
    {
      "question": "which religion is part of the restoration and has same practices with eastern christians?",
      "qid": "4300140009000_grailqa",
      "source": "grailqa",
      "entities": {
        "The Restoration": "m.0dl7db1",
        "eastern christians": "m.0blk0"
      },
      "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.0blk0)) (JOIN religion.religion.is_part_of m.0dl7db1)))",
      "actions": [
        "get_relations(m.0blk0)",
        "get_neighbors(m.0blk0,religion.religion.practices)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religious_practice.practice_of)",
        "get_relations(m.0dl7db1)",
        "get_neighbors(m.0dl7db1,religion.religion.includes)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.058x5",
          "entity_name": "Mormonism"
        }
      ]
    },
    {
      "question": "what quantity of amusement park areas are there in florida and disneyland park parks?",
      "qid": "3206299005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Disneyland Park": "m.04cj6k",
        "florida": "m.02mv6p"
      },
      "s_expression": "(COUNT (AND amusement_parks.amusement_park_area (AND (JOIN amusement_parks.amusement_park_area.parks m.04cj6k) (JOIN amusement_parks.amusement_park_area.parks m.02mv6p))))",
      "actions": [
        "get_relations(m.04cj6k)",
        "get_neighbors(m.04cj6k,amusement_parks.park.areas)",
        "get_relations(m.02mv6p)",
        "get_neighbors(m.02mv6p,amusement_parks.park.areas)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "3"
        }
      ]
    },
    {
      "question": "what is the camera iso capability number of the iso setting used by sony cyber-shot dsc-w130 and nikon coolpix l6?",
      "qid": "3205827005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Sony Cyber-shot DSC-W130": "m.04wjkdh",
        "Nikon Coolpix L6": "m.03q2jq8"
      },
      "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.04wjkdh) (JOIN (R digicams.digital_camera.iso_setting) m.03q2jq8))))",
      "actions": [
        "get_relations(m.04wjkdh)",
        "get_neighbors(m.04wjkdh,digicams.digital_camera.iso_setting)",
        "get_relations(m.03q2jq8)",
        "get_neighbors(m.03q2jq8,digicams.digital_camera.iso_setting)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "5"
        }
      ]
    },
    {
      "question": "the m5 and dkw 3=6 are in which class of automobiles?",
      "qid": "4301079008000_grailqa",
      "source": "grailqa",
      "entities": {
        "DKW 3=6": "m.03qj3_x",
        "m5": "m.04dvgq"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples (JOIN (R automotive.model.predecessor) m.03qj3_x)) (JOIN automotive.automotive_class.examples m.04dvgq)))",
      "actions": [
        "get_relations(m.03qj3_x)",
        "get_neighbors(m.03qj3_x,automotive.model.predecessor)",
        "get_relations(#0)",
        "get_neighbors(#0,automotive.model.automotive_class)",
        "get_relations(m.04dvgq)",
        "get_neighbors(m.04dvgq,automotive.model.automotive_class)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.021mp2",
          "entity_name": "Sedan"
        }
      ]
    },
    {
      "question": "What type of guitar is played by the composer of Through Glass?",
      "qid": "WebQTest-1279_b711a2a4cbd4a6cc3bebde944f325016_cwq",
      "source": "cwq",
      "entities": {
        "Guitar": "m.0342h",
        "Through Glass": "m.0fs34n"
      },
      "s_expression": "(AND (JOIN (R music.group_member.instruments_played) (JOIN music.composer.compositions m.0fs34n)) (JOIN music.instrument.family m.0342h))",
      "actions": [
        "get_relations(m.0fs34n)",
        "get_neighbors(m.0fs34n,music.composition.composer)",
        "get_relations(#0)",
        "get_neighbors(#0,music.group_member.instruments_played)",
        "get_relations(m.0342h)",
        "get_neighbors(m.0342h,music.instrument.variation)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.018vs",
          "answer_type": "Entity",
          "entity_name": "Bass guitar"
        }
      ]
    },
    {
      "question": "what quantity of breed from swiss confederation share the same temperament with the toy bulldog?",
      "qid": "4303460006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Toy Bulldog": "m.038wvd",
        "swiss confederation": "m.06mzp"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.06mzp)) (JOIN (R biology.animal_breed.temperament) m.038wvd))))",
      "actions": [
        "get_relations(m.06mzp)",
        "get_neighbors(m.06mzp,biology.breed_origin.breeds_originating_here)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.038wvd)",
        "get_neighbors(m.038wvd,biology.animal_breed.temperament)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "4"
        }
      ]
    },
    {
      "question": "name the camera storage type supported by pentax optio s60 and a digital camera with an iso setting of 2500.",
      "qid": "4302372008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Pentax Optio S60": "m.03q2lk_",
        "2500": "m.0h27q8w"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.0h27q8w)) (JOIN (R digicams.digital_camera.supported_storage_types) m.03q2lk_)))",
      "actions": [
        "get_relations(m.0h27q8w)",
        "get_neighbors(m.0h27q8w,digicams.camera_iso.cameras)",
        "get_relations(#0)",
        "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.03q2lk_)",
        "get_neighbors(m.03q2lk_,digicams.digital_camera.supported_storage_types)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tthm",
          "entity_name": "Secure Digital"
        }
      ]
    },
    {
      "question": "what is the total number of infectious diseases that can be transmitted by a mosquito?",
      "qid": "4303160008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Mosquito": "m.09f96"
      },
      "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.09f96)))))",
      "actions": [
        "get_relations(m.09f96)",
        "get_neighbors(m.09f96,medicine.vector_of_disease.disease)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
        "get_relations(#1)",
        "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "110"
        }
      ]
    },
    {
      "question": "which are automotive classes of 1957 ford in the model of 1999 dodge charger concept?",
      "qid": "4300308014000_grailqa",
      "source": "grailqa",
      "entities": {
        "1957 Ford": "m.0gm1g3",
        "1999 Dodge Charger Concept": "m.0f7xbh"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN (R automotive.model.automotive_class) m.0gm1g3) (JOIN automotive.automotive_class.examples (JOIN automotive.model.model_years m.0f7xbh))))",
      "actions": [
        "get_relations(m.0gm1g3)",
        "get_neighbors(m.0gm1g3,automotive.model.automotive_class)",
        "get_relations(m.0f7xbh)",
        "get_neighbors(m.0f7xbh,automotive.model_year.model)",
        "get_relations(#1)",
        "get_neighbors(#1,automotive.model.automotive_class)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01d1dj",
          "entity_name": "Coupé"
        }
      ]
    },
    {
      "question": "What kind of government does the country where Alvaro Gil Cabral was born in have?",
      "qid": "WebQTrn-2060_aae1720ca8d746eb8883d69655f9e1e0_cwq",
      "source": "cwq",
      "entities": {
        "Spain": "m.06mkj",
        "alvaro gil cabral": "g.121r_b9t"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.06mkj) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here g.121r_b9t)))",
      "actions": [
        "get_relations(m.06mkj)",
        "get_neighbors(m.06mkj,location.country.form_of_government)",
        "get_relations(g.121r_b9t)",
        "get_neighbors(g.121r_b9t,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.04szc",
          "answer_type": "Entity",
          "entity_name": "Monarchy"
        }
      ]
    },
    {
      "question": "which is the number of automotive classes which are examples of ford falcon (xy) and fpv f6?",
      "qid": "3206121004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Ford Falcon (XY)": "m.02rstw2",
        "FPV F6": "m.0dr0bd"
      },
      "s_expression": "(COUNT (AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples m.02rstw2) (JOIN automotive.automotive_class.examples m.0dr0bd))))",
      "actions": [
        "get_relations(m.02rstw2)",
        "get_neighbors(m.02rstw2,automotive.model.automotive_class)",
        "get_relations(m.0dr0bd)",
        "get_neighbors(m.0dr0bd,automotive.model.automotive_class)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "a + and c++ programming language use programming language paradigm what is the other program language influenced by?",
      "qid": "4300798010000_grailqa",
      "source": "grailqa",
      "entities": {
        "c++ programming language": "m.0jgqg",
        "a +": "m.03m66l"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.0jgqg) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.03m66l))))",
      "actions": [
        "get_relations(m.0jgqg)",
        "get_neighbors(m.0jgqg,computer.programming_language.language_paradigms)",
        "get_relations(m.03m66l)",
        "get_neighbors(m.03m66l,computer.programming_language.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.programming_language.language_paradigms)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ykw",
          "entity_name": "Functional programming"
        }
      ]
    },
    {
      "question": "Which child of Ike and Tina Turner was born in LA?",
      "qid": "WebQTest-1655_6fde3c0b416bc40ae3692db7df6a6c53_cwq",
      "source": "cwq",
      "entities": {
        "Tina Turner": "m.01vwyqp",
        "ike": "m.0dbzg",
        "la": "m.030qb3t"
      },
      "s_expression": "(AND (JOIN (R people.person.children) m.01vwyqp) (AND (JOIN people.person.parents m.0dbzg) (JOIN people.person.place_of_birth m.030qb3t)))",
      "actions": [
        "get_relations(m.01vwyqp)",
        "get_neighbors(m.01vwyqp,people.person.children)",
        "get_relations(m.0dbzg)",
        "get_neighbors(m.0dbzg,people.person.children)",
        "get_relations(m.030qb3t)",
        "get_neighbors(m.030qb3t,location.location.people_born_here)",
        "intersection(#1,#2)",
        "intersection(#0,#3)"
      ],
      "answer": [
        {
          "answer_argument": "m.0ggl36p",
          "answer_type": "Entity",
          "entity_name": "Ronnie Turner"
        }
      ]
    },
    {
      "question": "how many active websites are owned by media tools ltd.?",
      "qid": "3206340001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Active": "m.02hsn4g",
        "Media Tools Ltd.": "m.01285gc2"
      },
      "s_expression": "(COUNT (AND internet.website (AND (JOIN internet.website.status m.02hsn4g) (JOIN (R internet.website_owner.websites_owned) m.01285gc2))))",
      "actions": [
        "get_relations(m.02hsn4g)",
        "get_neighbors(m.02hsn4g,internet.website_status.sites)",
        "get_relations(m.01285gc2)",
        "get_neighbors(m.01285gc2,internet.website_owner.websites_owned)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "reflections on community development: stories from bedford stuyvesant restoration corporation has how many exhibition subjects?",
      "qid": "4302933006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Reflections on Community Development: Stories from Bedford Stuyvesant Restoration Corporation": "m.04kwpfb"
      },
      "s_expression": "(COUNT (AND exhibitions.exhibition_subject (JOIN (R exhibitions.exhibition.subjects) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) (JOIN (R exhibitions.exhibition.exhibition_types) m.04kwpfb)))))",
      "actions": [
        "get_relations(m.04kwpfb)",
        "get_neighbors(m.04kwpfb,exhibitions.exhibition.exhibition_types)",
        "get_relations(#0)",
        "get_neighbors(#0,exhibitions.type_of_exhibition.exhibitions_of_this_type)",
        "get_relations(#1)",
        "get_neighbors(#1,exhibitions.exhibition.subjects)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "41"
        }
      ]
    },
    {
      "question": "When was the last time did the team that plays its home games at MCU Park won the World Series?",
      "qid": "WebQTest-1556_97aaf1de55537c27da2ebda0f76491ab_cwq",
      "source": "cwq",
      "entities": {
        "MCU Park": "m.02y110"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.02y110)) time.event.end_date)",
      "actions": [
        "get_relations(m.02y110)",
        "get_neighbors(m.02y110,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q9lc",
          "answer_type": "Entity",
          "entity_name": "1986 World Series"
        }
      ]
    },
    {
      "question": "casio exilim ex-z75 supports which storage type along with the digital camera with iso setting of high iso auto?",
      "qid": "4302372001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Casio Exilim EX-Z75": "m.03q2qv9",
        "High ISO Auto": "m.02nqg65"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.02nqg65)) (JOIN (R digicams.digital_camera.supported_storage_types) m.03q2qv9)))",
      "actions": [
        "get_relations(m.02nqg65)",
        "get_neighbors(m.02nqg65,digicams.camera_iso.cameras)",
        "get_relations(#0)",
        "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.03q2qv9)",
        "get_neighbors(m.03q2qv9,digicams.digital_camera.supported_storage_types)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tthm",
          "entity_name": "Secure Digital"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0220vm1",
          "entity_name": "SDHC Card"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01z76m",
          "entity_name": "MultiMediaCard"
        }
      ]
    },
    {
      "question": "What are the movies starring Adam Sandler that involved National Film Board of Cananda?",
      "qid": "WebQTrn-1677_22837422e25cf0a05cb0efba9aa80402_cwq",
      "source": "cwq",
      "entities": {
        "Adam Sandler": "m.0pz91",
        "national film board of cananda": "m.014l4w"
      },
      "s_expression": "(AND (JOIN (R film.producer.film) m.0pz91) (JOIN film.film.genre (JOIN organization.organization_sector.organizations_in_this_sector m.014l4w)))",
      "actions": [
        "get_relations(m.0pz91)",
        "get_neighbors(m.0pz91,film.producer.film)",
        "get_relations(m.014l4w)",
        "get_neighbors(m.014l4w,organization.organization.sectors)",
        "get_relations(#1)",
        "get_neighbors(#1,film.film_genre.films_in_this_genre)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.010rdrd1"
        },
        {
          "answer_argument": "m.02m7tn"
        }
      ]
    },
    {
      "question": "how many religious practices are there that practices jehovah's witness and mormonites?",
      "qid": "3204573007000_grailqa",
      "source": "grailqa",
      "entities": {
        "jehovah's witness": "m.0dtdq",
        "mormonites": "m.058x5"
      },
      "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.0dtdq) (JOIN (R religion.religion.practices) m.058x5))))",
      "actions": [
        "get_relations(m.0dtdq)",
        "get_neighbors(m.0dtdq,religion.religion.practices)",
        "get_relations(m.058x5)",
        "get_neighbors(m.058x5,religion.religion.practices)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "which visual art form is made by maya ying lin besides installation art?",
      "qid": "4302283015000_grailqa",
      "source": "grailqa",
      "entities": {
        "maya ying lin": "m.04vdx",
        "Installation art": "m.012z_m"
      },
      "s_expression": "(AND visual_art.visual_art_form (JOIN (R visual_art.artwork.art_form) (AND (JOIN visual_art.artwork.artist m.04vdx) (JOIN visual_art.artwork.art_form m.012z_m))))",
      "actions": [
        "get_relations(m.04vdx)",
        "get_neighbors(m.04vdx,visual_art.visual_artist.artworks)",
        "get_relations(m.012z_m)",
        "get_neighbors(m.012z_m,visual_art.visual_art_form.artworks)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,visual_art.artwork.art_form)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.06msq",
          "entity_name": "Sculpture"
        }
      ]
    },
    {
      "question": "on the third day and a multi-part musical release labelled apple records were produced by who?",
      "qid": "4301847007000_grailqa",
      "source": "grailqa",
      "entities": {
        "On the Third Day": "m.031ql_f",
        "Apple Records": "m.019n_t"
      },
      "s_expression": "(AND music.producer (AND (JOIN (R music.release.producers) (JOIN music.release.label m.019n_t)) (JOIN (R music.release.producers) m.031ql_f)))",
      "actions": [
        "get_relations(m.019n_t)",
        "get_neighbors(m.019n_t,music.record_label.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.producers)",
        "get_relations(m.031ql_f)",
        "get_neighbors(m.031ql_f,music.release.producers)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0473q",
          "entity_name": "Jeff Lynne"
        }
      ]
    },
    {
      "question": "what is the number of canadian whiskey blends with corn whiskey with scotch are there?",
      "qid": "4302561004000_grailqa",
      "source": "grailqa",
      "entities": {
        "scotch": "m.01k5lq",
        "canadian whiskey": "m.0212n",
        "Corn whiskey": "m.01yr36"
      },
      "s_expression": "(COUNT (AND distilled_spirits.blended_spirit (AND (JOIN (R distilled_spirits.distilled_spirit_type.blends) m.01k5lq) (AND (JOIN distilled_spirits.blended_spirit.style m.0212n) (JOIN (R distilled_spirits.distilled_spirit_type.blends) m.01yr36)))))",
      "actions": [
        "get_relations(m.01k5lq)",
        "get_neighbors(m.01k5lq,distilled_spirits.distilled_spirit_type.blends)",
        "get_relations(m.0212n)",
        "get_neighbors(m.0212n,distilled_spirits.blended_spirit_style.blends)",
        "get_relations(m.01yr36)",
        "get_neighbors(m.01yr36,distilled_spirits.distilled_spirit_type.blends)",
        "intersection(#1,#2)",
        "intersection(#0,#3)",
        "count(#4)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what programming language paradigm is followed by programming languages such as abc and derivatives of icon?",
      "qid": "4300417013000_grailqa",
      "source": "grailqa",
      "entities": {
        "ABC": "m.012whz",
        "Icon": "m.03tr0"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.03tr0)) (JOIN (R computer.programming_language.language_paradigms) m.012whz)))",
      "actions": [
        "get_relations(m.03tr0)",
        "get_neighbors(m.03tr0,computer.programming_language.dialects)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.language_paradigms)",
        "get_relations(m.012whz)",
        "get_neighbors(m.012whz,computer.programming_language.language_paradigms)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05yd5",
          "entity_name": "Procedural programming"
        }
      ]
    },
    {
      "question": "games developed by frontier developments and distributed through wii ware released where?",
      "qid": "4301141021000_grailqa",
      "source": "grailqa",
      "entities": {
        "wii ware": "m.03hfyj6",
        "Frontier Developments": "m.069dh8"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.03hfyj6) (JOIN (R cvg.cvg_developer.game_versions_developed) m.069dh8))))",
      "actions": [
        "get_relations(m.03hfyj6)",
        "get_neighbors(m.03hfyj6,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.069dh8)",
        "get_neighbors(m.069dh8,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.075g54v",
          "entity_name": "Wii/DS NA"
        }
      ]
    },
    {
      "question": "What Hilltop Park sports stadium houses home games?",
      "qid": "WebQTrn-52_1afd5634cb719e3b77b4345510599ca8_cwq",
      "source": "cwq",
      "entities": {
        "Hilltop Park": "m.039nhz"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.arena_stadium m.039nhz)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.039nhz)",
        "get_neighbors(m.039nhz,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.01_gsg",
          "answer_type": "Entity",
          "entity_name": "AT&T Park"
        }
      ]
    },
    {
      "question": "what number of camera iso capability are utilized in the iso setting by pentax k110d and sony cyber-shot dsc-w150?",
      "qid": "3205827008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Pentax K110D": "m.02pm0z5",
        "Sony Cyber-shot DSC-W150": "m.04wjky8"
      },
      "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.02pm0z5) (JOIN (R digicams.digital_camera.iso_setting) m.04wjky8))))",
      "actions": [
        "get_relations(m.02pm0z5)",
        "get_neighbors(m.02pm0z5,digicams.digital_camera.iso_setting)",
        "get_relations(m.04wjky8)",
        "get_neighbors(m.04wjky8,digicams.digital_camera.iso_setting)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "6"
        }
      ]
    },
    {
      "question": "Which structure in downtown Chicago opened most recently?",
      "qid": "WebQTrn-825_402d2dd9cab43436b0fb03a9fca57784_cwq",
      "source": "cwq",
      "entities": {
        "Chicago": "m.01_d4"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R travel.travel_destination.tourist_attractions) m.01_d4) (JOIN location.location.containedby m.01_d4)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,travel.travel_destination.tourist_attractions)",
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,location.location.contains)",
        "intersection(#0,#1)",
        "get_attributes(#2)",
        "argmax(#2,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.06_7k",
          "answer_type": "Entity",
          "entity_name": "Willis Tower"
        }
      ]
    },
    {
      "question": "how many different breeds from czech republic share the same temperament as the brazilian terrier?",
      "qid": "4303460004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Brazilian Terrier": "m.08c5h8",
        "Czech Republic": "m.01mjq"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.01mjq)) (JOIN (R biology.animal_breed.temperament) m.08c5h8))))",
      "actions": [
        "get_relations(m.01mjq)",
        "get_neighbors(m.01mjq,biology.breed_origin.breeds_originating_here)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.08c5h8)",
        "get_neighbors(m.08c5h8,biology.animal_breed.temperament)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "4"
        }
      ]
    },
    {
      "question": "what is the political ideology followed by the national liberal party and the australian federal election, 2004?",
      "qid": "4302370007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Australian federal election, 2004": "m.02br3q",
        "National Liberal Party": "m.02m99c"
      },
      "s_expression": "(AND government.political_ideology (AND (JOIN government.political_ideology.political_parties (JOIN (R government.parliamentary_election.government_formed_by) m.02br3q)) (JOIN (R government.political_party.ideology) m.02m99c)))",
      "actions": [
        "get_relations(m.02br3q)",
        "get_neighbors(m.02br3q,government.parliamentary_election.government_formed_by)",
        "get_relations(#0)",
        "get_neighbors(#0,government.political_party.ideology)",
        "get_relations(m.02m99c)",
        "get_neighbors(m.02m99c,government.political_party.ideology)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04hbc",
          "entity_name": "Liberalism"
        }
      ]
    },
    {
      "question": "the core text of abrahamic faiths that is honored by shabbat practitioners is called what?",
      "qid": "4300898007000_grailqa",
      "source": "grailqa",
      "entities": {
        "abrahamic faiths": "m.0f_h6",
        "Shabbat": "m.0747p"
      },
      "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.0f_h6) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.0747p))))",
      "actions": [
        "get_relations(m.0f_h6)",
        "get_neighbors(m.0f_h6,religion.religion.texts)",
        "get_relations(m.0747p)",
        "get_neighbors(m.0747p,religion.religious_practice.practice_of)",
        "get_relations(#1)",
        "get_neighbors(#1,religion.religion.texts)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gn9",
          "entity_name": "Tanakh"
        }
      ]
    },
    {
      "question": "which department of columbia u does sang-wook cheong work in?",
      "qid": "4301362002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Sang-Wook Cheong": "m.0105mj92",
        "columbia u": "m.01w5m"
      },
      "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.0105mj92)) (JOIN (R education.university.departments) m.01w5m)))",
      "actions": [
        "get_relations(m.0105mj92)",
        "get_neighbors(m.0105mj92,education.academic.research_areas)",
        "get_relations(#0)",
        "get_neighbors(#0,education.field_of_study.academic_departments)",
        "get_relations(m.01w5m)",
        "get_neighbors(m.01w5m,education.university.departments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dbg1p",
          "entity_name": "Columbia University Department of Physics"
        }
      ]
    },
    {
      "question": "how many practices are there that practices protestantism and anglicans?",
      "qid": "3204573010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Protestantism": "m.05sfs",
        "anglicans": "m.0n2g"
      },
      "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.05sfs) (JOIN (R religion.religion.practices) m.0n2g))))",
      "actions": [
        "get_relations(m.05sfs)",
        "get_neighbors(m.05sfs,religion.religion.practices)",
        "get_relations(m.0n2g)",
        "get_neighbors(m.0n2g,religion.religion.practices)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "Which timezone is Kansas in that is also a location near Strathmore (dj Murray) airport?",
      "qid": "WebQTrn-2514_cab1228be4e8c16ee35a67b7ac63b264_cwq",
      "source": "cwq",
      "entities": {
        "Kansas": "m.0488g",
        "strathmore (dj murray) airport": "m.09slsk"
      },
      "s_expression": "(AND (JOIN (R location.location.time_zones) m.0488g) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.09slsk)))",
      "actions": [
        "get_relations(m.0488g)",
        "get_neighbors(m.0488g,location.location.time_zones)",
        "get_relations(m.09slsk)",
        "get_neighbors(m.09slsk,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02hczc",
          "answer_type": "Entity",
          "entity_name": "Mountain Time Zone"
        }
      ]
    },
    {
      "question": "what is the name of the most recently formed cyclone in the same category as typhoon sanba?",
      "qid": "4303808002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Typhoon Sanba": "m.0n49xww"
      },
      "s_expression": "(ARGMAX (AND meteorology.tropical_cyclone (JOIN meteorology.tropical_cyclone.category (JOIN (R meteorology.tropical_cyclone.category) m.0n49xww))) meteorology.tropical_cyclone.formed)",
      "actions": [
        "get_relations(m.0n49xww)",
        "get_neighbors(m.0n49xww,meteorology.tropical_cyclone.category)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
        "get_attributes(#1)",
        "argmax(#1,meteorology.tropical_cyclone.formed)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0z2p66v",
          "entity_name": "Typhoon Haiyan"
        }
      ]
    },
    {
      "question": "which storage type is supported by sony alpha 850 and those with color filter array of foveon x3 sensor?",
      "qid": "4302099007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Sony Alpha 850": "m.06_v4pc",
        "Foveon X3 sensor": "m.02g86w"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN digicams.camera_storage_type.compatible_cameras m.06_v4pc) (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.color_filter_array_type m.02g86w))))",
      "actions": [
        "get_relations(m.06_v4pc)",
        "get_neighbors(m.06_v4pc,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.02g86w)",
        "get_neighbors(m.02g86w,digicams.camera_color_filter_array_type.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.supported_storage_types)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01rlj7",
          "entity_name": "CompactFlash"
        }
      ]
    },
    {
      "question": "what is the number of active websites owned by linkedin corporation?",
      "qid": "3206340011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Active": "m.02hsn4g",
        "LinkedIn Corporation": "m.0w03805"
      },
      "s_expression": "(COUNT (AND internet.website (AND (JOIN internet.website.status m.02hsn4g) (JOIN (R internet.website_owner.websites_owned) m.0w03805))))",
      "actions": [
        "get_relations(m.02hsn4g)",
        "get_neighbors(m.02hsn4g,internet.website_status.sites)",
        "get_relations(m.0w03805)",
        "get_neighbors(m.0w03805,internet.website_owner.websites_owned)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what science discipline does newtonian science conduct research in?",
      "qid": "4302233004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Science": "m.06mq7",
        "newtonian science": "m.03s9v"
      },
      "s_expression": "(AND education.field_of_study (AND (JOIN (R education.field_of_study.subdisciplines) m.06mq7) (JOIN (R education.field_of_study.subdiscipline_of) (JOIN (R education.academic.research_areas) m.03s9v))))",
      "actions": [
        "get_relations(m.06mq7)",
        "get_neighbors(m.06mq7,education.field_of_study.subdisciplines)",
        "get_relations(m.03s9v)",
        "get_neighbors(m.03s9v,education.academic.research_areas)",
        "get_relations(#1)",
        "get_neighbors(#1,education.field_of_study.subdiscipline_of)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.09pz7",
          "entity_name": "Natural science"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09vvxv",
          "entity_name": "Formal science"
        }
      ]
    },
    {
      "question": "What type of government is used in the UK where Emanuel Lasker was born?",
      "qid": "WebQTest-659_3ce332b703593e71708a5604865c5758_cwq",
      "source": "cwq",
      "entities": {
        "UK": "m.07ssc",
        "Emanuel Lasker": "m.01kfm7"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.07ssc) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
      "actions": [
        "get_relations(m.07ssc)",
        "get_neighbors(m.07ssc,location.country.form_of_government)",
        "get_relations(m.01kfm7)",
        "get_neighbors(m.01kfm7,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "which staple scottish food dishes contain chicken meat?",
      "qid": "4301356005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Chicken meat": "m.0f25w9",
        "scottish food": "m.0ftx68"
      },
      "s_expression": "(AND food.type_of_dish (JOIN food.type_of_dish.dishes (AND (JOIN food.dish.ingredients m.0f25w9) (JOIN (R dining.cuisine.dishes) m.0ftx68))))",
      "actions": [
        "get_relations(m.0f25w9)",
        "get_neighbors(m.0f25w9,food.ingredient.dishes)",
        "get_relations(m.0ftx68)",
        "get_neighbors(m.0ftx68,dining.cuisine.dishes)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,food.dish.type_of_dish1)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01z1m1x",
          "entity_name": "Soup"
        }
      ]
    },
    {
      "question": "What drug killed the artist who went on Moment of Truth World Tour?",
      "qid": "WebQTrn-2600_d695af9f3b17666dd434043cacddafe1_cwq",
      "source": "cwq",
      "entities": {
        "Drug overdose": "m.01tf_6",
        "Moment of Truth World Tour": "m.04crr_4"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.artist.concert_tours m.04crr_4)) (JOIN people.cause_of_death.parent_cause_of_death m.01tf_6))",
      "actions": [
        "get_relations(m.04crr_4)",
        "get_neighbors(m.04crr_4,music.concert_tour.artist)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.01tf_6)",
        "get_neighbors(m.01tf_6,people.cause_of_death.includes_causes_of_death)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02nx6jb",
          "answer_type": "Entity",
          "entity_name": "Cocaine overdose"
        }
      ]
    },
    {
      "question": "which programming language paradigm does dialect and java programming language follow?",
      "qid": "4300417001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Dialect": "m.03cmd8m",
        "java programming language": "m.07sbkfb"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.07sbkfb)) (JOIN (R computer.programming_language.language_paradigms) m.03cmd8m)))",
      "actions": [
        "get_relations(m.07sbkfb)",
        "get_neighbors(m.07sbkfb,computer.programming_language.dialects)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.language_paradigms)",
        "get_relations(m.03cmd8m)",
        "get_neighbors(m.03cmd8m,computer.programming_language.language_paradigms)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05prj",
          "entity_name": "Object-oriented programming"
        }
      ]
    },
    {
      "question": "What year did Steve Bisciotti's team win the Superbowl?",
      "qid": "WebQTrn-2136_8d86dc5e03446f0e50fd69bc06ae0658_cwq",
      "source": "cwq",
      "entities": {
        "superbowl": "m.06x5s",
        "Steve Bisciotti": "m.06x8mf"
      },
      "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.06x8mf)) (JOIN sports.sports_championship_event.championship m.06x5s))",
      "actions": [
        "get_relations(m.06x8mf)",
        "get_neighbors(m.06x8mf,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0642vqv",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLVII"
        },
        {
          "answer_argument": "m.076yq",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXXV"
        }
      ]
    },
    {
      "question": "Where do most of the people who subscribe to the newspaper Akher Saa live?",
      "qid": "WebQTrn-3037_3b676cf5603d91ac09fd09d3697b68fb_cwq",
      "source": "cwq",
      "entities": {
        "Akher Saa": "m.05f4_4z"
      },
      "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN periodicals.newspaper_circulation_area.newspapers m.05f4_4z)) topic_server.population_number)",
      "actions": [
        "get_relations(m.05f4_4z)",
        "get_neighbors(m.05f4_4z,book.newspaper.circulation_areas)",
        "get_relations(#0)",
        "get_neighbors(#0,location.location.contains)",
        "get_attributes(#1)",
        "argmax(#1,topic_server.population_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.080msrv",
          "answer_type": "Entity",
          "entity_name": "Greater Cairo"
        }
      ]
    },
    {
      "question": "what sort of programming language paradigm is followed by programming languages such as qi and derivatives of lambda calculus?",
      "qid": "4300417009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Qi": "m.02prj6h",
        "Lambda calculus": "m.04mg4"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.04mg4)) (JOIN (R computer.programming_language.language_paradigms) m.02prj6h)))",
      "actions": [
        "get_relations(m.04mg4)",
        "get_neighbors(m.04mg4,computer.programming_language.dialects)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.language_paradigms)",
        "get_relations(m.02prj6h)",
        "get_neighbors(m.02prj6h,computer.programming_language.language_paradigms)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ykw",
          "entity_name": "Functional programming"
        }
      ]
    },
    {
      "question": "which artwork on cardboard was painted in the era of dave robertson?",
      "qid": "4301655007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Dave Robertson": "m.0t52347",
        "cardboard": "m.03q7pgh"
      },
      "s_expression": "(AND visual_art.artwork (AND (JOIN visual_art.artwork.period_or_movement (JOIN visual_art.art_period_movement.associated_artists m.0t52347)) (JOIN visual_art.artwork.support m.03q7pgh)))",
      "actions": [
        "get_relations(m.0t52347)",
        "get_neighbors(m.0t52347,visual_art.visual_artist.associated_periods_or_movements)",
        "get_relations(#0)",
        "get_neighbors(#0,visual_art.art_period_movement.associated_artworks)",
        "get_relations(m.03q7pgh)",
        "get_neighbors(m.03q7pgh,visual_art.visual_art_support.artworks)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.011f2bng",
          "entity_name": "The Old Age of William Tell"
        }
      ]
    },
    {
      "question": "rocky top's sundance kid and porcelaine are breeds that share what temperament?",
      "qid": "4300459002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Rocky Top's Sundance Kid": "m.0dlnf7n",
        "Porcelaine": "m.02qllrh"
      },
      "s_expression": "(AND biology.breed_temperament (AND (JOIN (R biology.animal_breed.temperament) (JOIN (R biology.pedigreed_animal.breed) m.0dlnf7n)) (JOIN (R biology.animal_breed.temperament) m.02qllrh)))",
      "actions": [
        "get_relations(m.0dlnf7n)",
        "get_neighbors(m.0dlnf7n,biology.pedigreed_animal.breed)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.02qllrh)",
        "get_neighbors(m.02qllrh,biology.animal_breed.temperament)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kp0pq",
          "entity_name": "Active"
        }
      ]
    },
    {
      "question": "how many religious texts do christanity and church of god share?",
      "qid": "3206221001000_grailqa",
      "source": "grailqa",
      "entities": {
        "church of god": "m.02q21kx",
        "christanity": "m.01lp8"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of m.02q21kx) (JOIN (R religion.religion.texts) m.01lp8))))",
      "actions": [
        "get_relations(m.02q21kx)",
        "get_neighbors(m.02q21kx,religion.religion.texts)",
        "get_relations(m.01lp8)",
        "get_neighbors(m.01lp8,religion.religion.texts)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "the same rocket manufacturer who manufactured energia and n1 created what other rocket?\nsaturn int-20, delta iii, delta ii...",
      "qid": "4300129007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Energia": "m.09dm5",
        "N1": "m.0346nk"
      },
      "s_expression": "(AND spaceflight.rocket (JOIN spaceflight.rocket.manufacturer (AND (JOIN (R spaceflight.rocket.manufacturer) m.09dm5) (JOIN spaceflight.rocket_manufacturer.rockets_manufactured m.0346nk))))",
      "actions": [
        "get_relations(m.09dm5)",
        "get_neighbors(m.09dm5,spaceflight.rocket.manufacturer)",
        "get_relations(m.0346nk)",
        "get_neighbors(m.0346nk,spaceflight.rocket.manufacturer)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,spaceflight.rocket_manufacturer.rockets_manufactured)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0407zvl",
          "entity_name": "Sputnik"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0187hy",
          "entity_name": "Soyuz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0232bk",
          "entity_name": "Voskhod"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0283h2_",
          "entity_name": "Polyot"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027f0v8",
          "entity_name": "Soyuz-2"
        }
      ]
    },
    {
      "question": "what was the first programming language influenced by another whatwg language?",
      "qid": "4303199008000_grailqa",
      "source": "grailqa",
      "entities": {
        "WHATWG": "m.05x46k"
      },
      "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.05x46k))) computer.programming_language.introduced)",
      "actions": [
        "get_relations(m.05x46k)",
        "get_neighbors(m.05x46k,computer.programming_language_developer.programming_languages_developed)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.influenced)",
        "get_attributes(#1)",
        "argmin(#1,computer.programming_language.introduced)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bp8q",
          "entity_name": "Curl"
        }
      ]
    },
    {
      "question": "Where is the Chicago Shakespeare Theater located?",
      "qid": "WebQTrn-825_e771cad04213001ba8aae56d6e8016db_cwq",
      "source": "cwq",
      "entities": {
        "Chicago": "m.01_d4",
        "Chicago Shakespeare Theater": "m.06plzq"
      },
      "s_expression": "(AND (JOIN (R travel.travel_destination.tourist_attractions) m.01_d4) (AND (JOIN location.location.containedby m.01_d4) (JOIN location.location.contains m.06plzq)))",
      "actions": [
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,travel.travel_destination.tourist_attractions)",
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,location.location.contains)",
        "get_relations(m.06plzq)",
        "get_neighbors(m.06plzq,location.location.containedby)",
        "intersection(#1,#2)",
        "intersection(#0,#3)"
      ],
      "answer": [
        {
          "answer_argument": "m.0c7ln",
          "answer_type": "Entity",
          "entity_name": "Navy Pier"
        }
      ]
    },
    {
      "question": "how many models of apple 1 computers used 6502 microprocessor processors?",
      "qid": "3205922014000_grailqa",
      "source": "grailqa",
      "entities": {
        "apple 1": "m.0n_v",
        "6502 microprocessor": "m.0530y"
      },
      "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.0n_v) (JOIN computer.computer.processor m.0530y))))",
      "actions": [
        "get_relations(m.0n_v)",
        "get_neighbors(m.0n_v,computer.computer.includes_models)",
        "get_relations(m.0530y)",
        "get_neighbors(m.0530y,computer.computer_processor.used_in_computers)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "the international ladies garment workers' union operates in which common parent industry of the fire hazards?",
      "qid": "4301917011000_grailqa",
      "source": "grailqa",
      "entities": {
        "international ladies garment workers' union": "m.054w78",
        "fire hazards": "m.03wymq"
      },
      "s_expression": "(AND business.industry (AND (JOIN (R business.industry.child_industry) (JOIN business.industry.trade_unions m.054w78)) (JOIN (R business.industry.child_industry) m.03wymq)))",
      "actions": [
        "get_relations(m.054w78)",
        "get_neighbors(m.054w78,business.trade_union.industry)",
        "get_relations(#0)",
        "get_neighbors(#0,business.industry.child_industry)",
        "get_relations(m.03wymq)",
        "get_neighbors(m.03wymq,business.industry.child_industry)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0126b6d7",
          "entity_name": "Ballyclare Limited"
        }
      ]
    },
    {
      "question": "matthew h. sommer conducts research in which asian studies discipline?",
      "qid": "4302233006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Asian studies": "m.06zq7_",
        "Matthew H. Sommer": "m.0cl8sr6"
      },
      "s_expression": "(AND education.field_of_study (AND (JOIN (R education.field_of_study.subdisciplines) m.06zq7_) (JOIN (R education.field_of_study.subdiscipline_of) (JOIN (R education.academic.research_areas) m.0cl8sr6))))",
      "actions": [
        "get_relations(m.06zq7_)",
        "get_neighbors(m.06zq7_,education.field_of_study.subdisciplines)",
        "get_relations(m.0cl8sr6)",
        "get_neighbors(m.0cl8sr6,education.academic.research_areas)",
        "get_relations(#1)",
        "get_neighbors(#1,education.field_of_study.subdiscipline_of)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02111p",
          "entity_name": "Sinology"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08_8bx",
          "entity_name": "East Asian Studies"
        }
      ]
    },
    {
      "question": "which programming language paradigm does qi and lambda calculus follow?",
      "qid": "4300417014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Qi": "m.02prj6h",
        "Lambda calculus": "m.04mg4"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.04mg4)) (JOIN (R computer.programming_language.language_paradigms) m.02prj6h)))",
      "actions": [
        "get_relations(m.04mg4)",
        "get_neighbors(m.04mg4,computer.programming_language.dialects)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.language_paradigms)",
        "get_relations(m.02prj6h)",
        "get_neighbors(m.02prj6h,computer.programming_language.language_paradigms)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ykw",
          "entity_name": "Functional programming"
        }
      ]
    },
    {
      "question": "Who founded Pixar, and was influenced by Stephen Colbert?",
      "qid": "WebQTrn-248_391e41c63cd4d9aeaa2144eece52067c_cwq",
      "source": "cwq",
      "entities": {
        "Pixar": "m.0kk9v",
        "Stephen Colbert": "m.01xdf5"
      },
      "s_expression": "(AND (JOIN (R organization.organization.founders) m.0kk9v) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.01xdf5)))",
      "actions": [
        "get_relations(m.0kk9v)",
        "get_neighbors(m.0kk9v,organization.organization.founders)",
        "get_relations(m.01xdf5)",
        "get_neighbors(m.01xdf5,influence.influence_node.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.06y3r",
          "answer_type": "Entity",
          "entity_name": "Steve Jobs"
        }
      ]
    },
    {
      "question": "what drugs have serotonin as an active ingredient and are also made from aluminum oxide/kaolin/barium cation/bromine/calcium cation/chimaphila umbellata/chlorine/ferric cation/hydrofluoric acid/lemna minor/nitric acid/lead/strychnine/comfrey root homeopathic preparation?",
      "qid": "5400022012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Aluminum oxide/Kaolin/Barium cation/Bromine/Calcium cation/Chimaphila umbellata/Chlorine/Ferric cation/Hydrofluoric acid/Lemna minor/Nitric acid/Lead/Strychnine/Comfrey root homeopathic preparation": "m.0hqx2f4",
        "Serotonin": "m.073z8"
      },
      "s_expression": "(AND medicine.drug_dosage_form (AND (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.formulation_of m.0hqx2f4)) (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.active_ingredient_moieties m.073z8))))",
      "actions": [
        "get_relations(m.0hqx2f4)",
        "get_neighbors(m.0hqx2f4,medicine.drug.marketed_formulations)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.drug_formulation.dosage_form)",
        "get_relations(m.073z8)",
        "get_neighbors(m.073z8,medicine.drug_ingredient.active_moiety_of_formulation)",
        "get_relations(#2)",
        "get_neighbors(#2,medicine.drug_formulation.dosage_form)",
        "intersection(#1,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04k94",
          "entity_name": "Liquid"
        }
      ]
    },
    {
      "question": "What time zone is in the location near Strathmore (DJ Murray) Airport in Texas?",
      "qid": "WebQTrn-2759_cab1228be4e8c16ee35a67b7ac63b264_cwq",
      "source": "cwq",
      "entities": {
        "Texas": "m.07b_l",
        "strathmore (dj murray) airport": "m.09slsk"
      },
      "s_expression": "(AND (JOIN (R location.location.time_zones) m.07b_l) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.09slsk)))",
      "actions": [
        "get_relations(m.07b_l)",
        "get_neighbors(m.07b_l,location.location.time_zones)",
        "get_relations(m.09slsk)",
        "get_neighbors(m.09slsk,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02hczc",
          "answer_type": "Entity",
          "entity_name": "Mountain Time Zone"
        }
      ]
    },
    {
      "question": "which person designed the iphone4 and mac?",
      "qid": "4301299012000_grailqa",
      "source": "grailqa",
      "entities": {
        "mac": "m.0zd6",
        "iphone4": "m.0c0bg9c"
      },
      "s_expression": "(AND computer.computer_designer (AND (JOIN computer.computer_designer.computers_designed (JOIN (R computer.computer.parent_model) m.0c0bg9c)) (JOIN (R computer.computer.key_designers) m.0zd6)))",
      "actions": [
        "get_relations(m.0c0bg9c)",
        "get_neighbors(m.0c0bg9c,computer.computer.parent_model)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.computer.key_designers)",
        "get_relations(m.0zd6)",
        "get_neighbors(m.0zd6,computer.computer.key_designers)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.06y3r",
          "entity_name": "Steve Jobs"
        }
      ]
    },
    {
      "question": "what is the name of the automotive class associated with the models audi and the predecessor astra?",
      "qid": "4301079005000_grailqa",
      "source": "grailqa",
      "entities": {
        "astra": "m.01j3dc",
        "audi": "m.02pnv6"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples (JOIN (R automotive.model.predecessor) m.01j3dc)) (JOIN automotive.automotive_class.examples m.02pnv6)))",
      "actions": [
        "get_relations(m.01j3dc)",
        "get_neighbors(m.01j3dc,automotive.model.predecessor)",
        "get_relations(#0)",
        "get_neighbors(#0,automotive.model.automotive_class)",
        "get_relations(m.02pnv6)",
        "get_neighbors(m.02pnv6,automotive.model.automotive_class)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02swz_",
          "entity_name": "Compact car"
        }
      ]
    },
    {
      "question": "what breed of dog would have a similar temperament to the maltese dog and english setter?",
      "qid": "4300795009000_grailqa",
      "source": "grailqa",
      "entities": {
        "maltese dog": "m.02cyl6",
        "English Setter": "m.0gz1d"
      },
      "s_expression": "(AND biology.animal_breed (JOIN biology.animal_breed.temperament (AND (JOIN (R biology.animal_breed.temperament) m.02cyl6) (JOIN biology.breed_temperament.breeds m.0gz1d))))",
      "actions": [
        "get_relations(m.02cyl6)",
        "get_neighbors(m.02cyl6,biology.animal_breed.temperament)",
        "get_relations(m.0gz1d)",
        "get_neighbors(m.0gz1d,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,biology.breed_temperament.breeds)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.027dd3t",
          "entity_name": "Black Norwegian Elkhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02r4blp",
          "entity_name": "Braque d'Auvergne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01qn1p",
          "entity_name": "English Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p39m",
          "entity_name": "American Water Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01sc6y",
          "entity_name": "Patterdale Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03htgw",
          "entity_name": "Koolie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03ysz",
          "entity_name": "Italian Greyhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05sfy0",
          "entity_name": "Löwchen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08s0ws",
          "entity_name": "Boykin Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gz2b",
          "entity_name": "Australian Kelpie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0km3f",
          "entity_name": "Labrador Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kwdc",
          "entity_name": "German Wirehaired Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gx1zf",
          "entity_name": "Billy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01t032",
          "entity_name": "Golden Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.020z66",
          "entity_name": "Miniature Schnauzer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0182yx",
          "entity_name": "Shetland Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0km5c",
          "entity_name": "German Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0183xd",
          "entity_name": "Vizsla"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01cx_v",
          "entity_name": "Chesapeake Bay Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01hzb8",
          "entity_name": "Great Pyrenees"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01j0x",
          "entity_name": "Basenji"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01kv93",
          "entity_name": "Staffordshire Bull Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p5rd",
          "entity_name": "Bernese Mountain Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pm38",
          "entity_name": "Clumber Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01s7fj",
          "entity_name": "Shih Tzu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.020z5t",
          "entity_name": "English Springer Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0271kpq",
          "entity_name": "Spanish Water Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02_73c",
          "entity_name": "Rat Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kf24",
          "entity_name": "Australian Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kgrx",
          "entity_name": "Cardigan Welsh Corgi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kw9d",
          "entity_name": "German Shorthaired Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02nscg",
          "entity_name": "Bearded Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02rfz5",
          "entity_name": "Irish Soft-coated Wheaten Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02vjrc",
          "entity_name": "Groenendael"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wbf7",
          "entity_name": "Bedlington Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.031pqh",
          "entity_name": "Peruvian Hairless Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0353h4",
          "entity_name": "Border Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.035xn5",
          "entity_name": "Toy Fox Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_vlr",
          "entity_name": "Smooth Fox Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03cq_p",
          "entity_name": "Kerry Blue Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03d12",
          "entity_name": "Greyhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03jjm4",
          "entity_name": "Norwich Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l5cy",
          "entity_name": "Spinone Italiano"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03ydd_",
          "entity_name": "Havanese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0403wp9",
          "entity_name": "Muggin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0410k_5",
          "entity_name": "Treeing Tennessee Brindle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04dm6",
          "entity_name": "Komondor"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04jj62w",
          "entity_name": "Llewellyn"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04nmst",
          "entity_name": "King Charles Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04prkf",
          "entity_name": "Small Münsterländer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04swlxt",
          "entity_name": "Hellenikos Ichnilatis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.057_4d",
          "entity_name": "Canadian Eskimo Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05tbqb",
          "entity_name": "Coton de Tulear"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05y236",
          "entity_name": "New Guinea singing dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.074pqh",
          "entity_name": "Spanish Mastiff"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0773fb",
          "entity_name": "Treeing Walker Coonhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07dx0m",
          "entity_name": "Japanese Spitz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08626",
          "entity_name": "Whippet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08f_zh",
          "entity_name": "Pont-Audemer Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bjrtp",
          "entity_name": "Cirneco dell'Etna"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bllpv",
          "entity_name": "Puggle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dpx6y",
          "entity_name": "German Longhaired Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0fl887",
          "entity_name": "Braque du Bourbonnais"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gt5n2",
          "entity_name": "Cretan Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gvx7",
          "entity_name": "Pharaoh Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hw_s",
          "entity_name": "Basset Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0nr94",
          "entity_name": "Bichon Frise"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04p3f7",
          "entity_name": "Standard Schnauzer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1203ng2yx",
          "entity_name": "Damchi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.017lw7",
          "entity_name": "American Eskimo Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01d7mc",
          "entity_name": "Black and Tan Coonhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01dj7",
          "entity_name": "Beagle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01llgk",
          "entity_name": "Boxer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p33b",
          "entity_name": "Mudi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p85j",
          "entity_name": "Barbet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pq45",
          "entity_name": "Chinook"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01przn",
          "entity_name": "Mackenzie River husky"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pyhj",
          "entity_name": "Shiloh Shepherd Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.020dr1",
          "entity_name": "Bluetick coonhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026067b",
          "entity_name": "Guejae Gae"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026qz0j",
          "entity_name": "Polish Hunting Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0285t83",
          "entity_name": "German Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02fvym",
          "entity_name": "Goldendoodle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02fxgn",
          "entity_name": "Cockapoo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kfwr",
          "entity_name": "Poodle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ktbm",
          "entity_name": "Smooth Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kvr1",
          "entity_name": "Puli"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02n_s4",
          "entity_name": "Korean Jindo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02p1d4",
          "entity_name": "St. Bernard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pp4mc",
          "entity_name": "Bohemian Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pxllv",
          "entity_name": "Blue Picardy Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qx4jn",
          "entity_name": "IrishJacks"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02x9dk",
          "entity_name": "Boston Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02xlz3",
          "entity_name": "Bergamasco Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02z2jdn",
          "entity_name": "Beagador"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02z57c",
          "entity_name": "Cairn Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xnp",
          "entity_name": "Welsh Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03606n",
          "entity_name": "Sapsali"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0363rs",
          "entity_name": "Toy Manchester Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03b6hk",
          "entity_name": "Catalan Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03b8_5",
          "entity_name": "Brittany"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03grqp",
          "entity_name": "Drentse Patrijshond"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03gt33k",
          "entity_name": "Tamaskan Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03h71r",
          "entity_name": "Bouvier des Flandres"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03nrh1z",
          "entity_name": "Canadian Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yk8l",
          "entity_name": "Tibetan Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0408cgh",
          "entity_name": "Stephens Cur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0410kz_",
          "entity_name": "Schapendoes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.044lwh",
          "entity_name": "Irish Water Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f2yc",
          "entity_name": "Anatolian Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04mhks",
          "entity_name": "Jagdterrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04svlc5",
          "entity_name": "Braque du Puy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04sxbdx",
          "entity_name": "Mullins Feist"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04sxbjk",
          "entity_name": "Parnell's Carolina Cur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05z8jf",
          "entity_name": "Shikoku"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06llrr",
          "entity_name": "Carolina Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.076_8",
          "entity_name": "Scottish Deerhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.076zg",
          "entity_name": "Saluki"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07bln6",
          "entity_name": "Curly Coated Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07p7st",
          "entity_name": "Portuguese Podengo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07vgwn",
          "entity_name": "Pumi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08c5h8",
          "entity_name": "Brazilian Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08pb1g",
          "entity_name": "Australian Stumpy Tail Cattle Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.093z2k",
          "entity_name": "Carlin Pinscher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kkkg",
          "entity_name": "Istrian Coarse-haired Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b26w3",
          "entity_name": "Schnoodle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b6c67",
          "entity_name": "German Pinscher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bq2r1",
          "entity_name": "Indian Spitz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c3k58",
          "entity_name": "Pražský Krysařík"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c8gtz",
          "entity_name": "Valley Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cqpth",
          "entity_name": "Hortaya borzaya"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dbk_j",
          "entity_name": "Kai Ken"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gh46s",
          "entity_name": "Tahltan Bear Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0h01s5",
          "entity_name": "Skye Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hkfc",
          "entity_name": "Kooikerhondje"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j7vm",
          "entity_name": "Kuvasz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0lbw4",
          "entity_name": "Great Dane"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0m1ct",
          "entity_name": "Wirehaired Pointing Griffon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0ysvz",
          "entity_name": "Louisiana Catahoula Leopard Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0blw4s",
          "entity_name": "Huntaway"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.016wfy",
          "entity_name": "Pomeranian"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.017t3p",
          "entity_name": "Airedale Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01_gx_",
          "entity_name": "Yorkshire Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01fgs3",
          "entity_name": "Boerboel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01j7n4",
          "entity_name": "Swedish Vallhund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01k9j2",
          "entity_name": "Mexican Hairless Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p89l",
          "entity_name": "Sarplaninac"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p900",
          "entity_name": "Beauceron"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pkw7",
          "entity_name": "Papillon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01z404",
          "entity_name": "Newfoundland"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025_s6d",
          "entity_name": "Croatian Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025_sbw",
          "entity_name": "French Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026nbpz",
          "entity_name": "Mountain View Cur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.028br6g",
          "entity_name": "French Brittany"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02_70q",
          "entity_name": "Briard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02_jdw",
          "entity_name": "Portuguese Water Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kh72",
          "entity_name": "Parson Russell Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kn5w",
          "entity_name": "Entlebucher Mountain Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02l61f",
          "entity_name": "Rough Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pl0tr",
          "entity_name": "Dorgi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ppbk1",
          "entity_name": "American English Coonhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02q6wxt",
          "entity_name": "Karakachan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qllrh",
          "entity_name": "Porcelaine"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qr3y_",
          "entity_name": "Northern Inuit Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02rjc05",
          "entity_name": "Dalmatian"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02xp9c",
          "entity_name": "Miniature Australian Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xlb",
          "entity_name": "Irish Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xv1",
          "entity_name": "Lakeland Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.035405",
          "entity_name": "Finnish Spitz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.038wvd",
          "entity_name": "Toy Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03c51t7",
          "entity_name": "Welsh Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03dszr",
          "entity_name": "Akbash dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03f84m",
          "entity_name": "American Hairless Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03fqgz",
          "entity_name": "Australian Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03g_78s",
          "entity_name": "Gaddi Kutta"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03gymyk",
          "entity_name": "Vikhan Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03j7p3",
          "entity_name": "Old English Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l04k",
          "entity_name": "Nova Scotia Duck Tolling Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03nn344",
          "entity_name": "Catahoula Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03vrbz",
          "entity_name": "Lhasa Apso"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0413r8v",
          "entity_name": "Treeing Cur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045tty",
          "entity_name": "Japanese Chin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04q65n",
          "entity_name": "Giant Schnauzer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04sxch4",
          "entity_name": "Pocket Beagle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04y09b",
          "entity_name": "Landseer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051ppn",
          "entity_name": "Glen of Imaal Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.054kbj",
          "entity_name": "Utonagan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.055br8",
          "entity_name": "Thai Bangkaew Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05qgc4",
          "entity_name": "Polish Lowland Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05y5lx",
          "entity_name": "Maremma Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05z86m",
          "entity_name": "Lancashire Heeler"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06g210",
          "entity_name": "Canaan Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06pq2r",
          "entity_name": "Doberman Pinscher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06smkm",
          "entity_name": "Tosa"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06v_sc",
          "entity_name": "American Foxhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06w066",
          "entity_name": "English Foxhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.071jj",
          "entity_name": "Siberian Husky"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.076_n",
          "entity_name": "Sloughi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.082x3k",
          "entity_name": "Eurasier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.089vcl",
          "entity_name": "Thai Ridgeback"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08kkns",
          "entity_name": "Plott Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08pmt0",
          "entity_name": "Alaskan Klee Kai"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dflqz",
          "entity_name": "Blue Lacy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g0rch",
          "entity_name": "Danish Swedish Farmdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0pwdp",
          "entity_name": "Border Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.018z4d",
          "entity_name": "Bloodhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01d7fl",
          "entity_name": "Jack Russell Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02bp0t",
          "entity_name": "Pekingese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kwjt",
          "entity_name": "Weimaraner"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02vjwg",
          "entity_name": "Tervuren"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0353wm",
          "entity_name": "English Toy Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03cr7fw",
          "entity_name": "Morkie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03w0j9",
          "entity_name": "Tibetan Mastiff"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03ys4",
          "entity_name": "Ibizan Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.049jr6",
          "entity_name": "American Pit Bull Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05pyhd",
          "entity_name": "Tibetan Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06c5rq",
          "entity_name": "Grand Bleu de Gascogne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c779w",
          "entity_name": "Berger Picard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0fxnkq",
          "entity_name": "Moscow Watchdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.035w0_",
          "entity_name": "Perro de Presa Canario"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01j0g",
          "entity_name": "Borzoi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.018g_l",
          "entity_name": "Rhodesian Ridgeback"
        }
      ]
    },
    {
      "question": "who designed a bipropellant rocket engine with liquid hydrogen and gas-generator cycle?",
      "qid": "4300753004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Gas-generator cycle": "m.04qqvv",
        "Liquid hydrogen": "m.0g0nz"
      },
      "s_expression": "(AND spaceflight.rocket_engine_designer (JOIN spaceflight.rocket_engine_designer.rocket_engines (AND (JOIN (R spaceflight.rocket_engine_cycle.rocket_engines) m.04qqvv) (JOIN (R spaceflight.rocket_engine_fuel.rocket_engines) m.0g0nz))))",
      "actions": [
        "get_relations(m.04qqvv)",
        "get_neighbors(m.04qqvv,spaceflight.rocket_engine_cycle.rocket_engines)",
        "get_relations(m.0g0nz)",
        "get_neighbors(m.0g0nz,spaceflight.rocket_engine_fuel.rocket_engines)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,spaceflight.rocket_engine.designed_by)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04zgxk",
          "entity_name": "Aerojet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01vhl6",
          "entity_name": "Rocketdyne"
        }
      ]
    },
    {
      "question": "list all types of museums that are of the same type as the museum of modern art and smithsonian institution",
      "qid": "5400031004000_grailqa",
      "source": "grailqa",
      "entities": {
        "the museum of modern art": "m.0hhjk",
        "Smithsonian Institution": "m.0hfyj"
      },
      "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.0hhjk) (JOIN architecture.type_of_museum.museums m.0hfyj)))))",
      "actions": [
        "get_relations(m.0hhjk)",
        "get_neighbors(m.0hhjk,architecture.museum.type_of_museum)",
        "get_relations(m.0hfyj)",
        "get_neighbors(m.0hfyj,architecture.museum.type_of_museum)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,architecture.type_of_museum.museums)",
        "get_relations(#3)",
        "get_neighbors(#3,architecture.museum.type_of_museum)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c9td2",
          "entity_name": "National museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gz",
          "entity_name": "Modern art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9jkk",
          "entity_name": "Architecture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgh_k",
          "entity_name": "History museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgjgh",
          "entity_name": "Natural history museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0jvjpx6",
          "entity_name": "Antiquities museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026w5hv",
          "entity_name": "Contemporary art gallery"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pn3n6",
          "entity_name": "Historic house museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0528d17",
          "entity_name": "Photography Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kt8qr",
          "entity_name": "Culture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gt",
          "entity_name": "Archaeology museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059x_pp",
          "entity_name": "Archaeological Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wvyw7",
          "entity_name": "Design museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027v0wz",
          "entity_name": "University museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059vqps",
          "entity_name": "Ancient Art Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9gbh",
          "entity_name": "Jewish museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0w_y7rb",
          "entity_name": "Asian art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99t0",
          "entity_name": "Decorative art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0djx8f",
          "entity_name": "Children's museum"
        }
      ]
    },
    {
      "question": "when is the last time the ravens won a superbowl",
      "qid": "WebQTest-595_webqsp",
      "source": "webqsp",
      "entities": {
        "ravens": "m.01ct6",
        "superbowl": "m.06x5s"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) m.01ct6) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.01ct6)",
        "get_neighbors(m.01ct6,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#0,#1)",
        "get_attributes(#2)",
        "argmax(#2,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0642vqv",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLVII"
        }
      ]
    },
    {
      "question": "what semi-firm textured cheese is made from the products of lamb and goat?",
      "qid": "4301155004000_grailqa",
      "source": "grailqa",
      "entities": {
        "lamb": "m.07bgp",
        "Goat": "m.03fwl",
        "semi-firm": "m.02h82t0"
      },
      "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.07bgp) (AND (JOIN food.cheese.source_of_milk m.03fwl) (JOIN food.cheese.texture m.02h82t0))))",
      "actions": [
        "get_relations(m.07bgp)",
        "get_neighbors(m.07bgp,food.cheese_milk_source.cheeses)",
        "get_relations(m.03fwl)",
        "get_neighbors(m.03fwl,food.cheese_milk_source.cheeses)",
        "get_relations(m.02h82t0)",
        "get_neighbors(m.02h82t0,food.cheese_texture.cheeses)",
        "intersection(#1,#2)",
        "intersection(#0,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02h8b9t",
          "entity_name": "Benedictine"
        }
      ]
    },
    {
      "question": "of the computers that used m68000 processors, how many were amiga models?",
      "qid": "3205922003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Amiga": "m.0vvw",
        "m68000": "m.052vq"
      },
      "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.0vvw) (JOIN computer.computer.processor m.052vq))))",
      "actions": [
        "get_relations(m.0vvw)",
        "get_neighbors(m.0vvw,computer.computer.includes_models)",
        "get_relations(m.052vq)",
        "get_neighbors(m.052vq,computer.computer_processor.used_in_computers)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "how many automotive classes are there for ford expedition and the hyundai genesis?",
      "qid": "3206121007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Ford Expedition": "m.03t26k",
        "Hyundai Genesis": "m.02q7bch"
      },
      "s_expression": "(COUNT (AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples m.03t26k) (JOIN automotive.automotive_class.examples m.02q7bch))))",
      "actions": [
        "get_relations(m.03t26k)",
        "get_neighbors(m.03t26k,automotive.model.automotive_class)",
        "get_relations(m.02q7bch)",
        "get_neighbors(m.02q7bch,automotive.model.automotive_class)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what isos are currently supported by sony cyber-shot dsc-w170 cameras from nikon corp.?",
      "qid": "4304013011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Sony Cyber-shot DSC-W170": "m.04wjl1x",
        "nikon corp.": "m.03pmfw"
      },
      "s_expression": "(AND digicams.camera_iso (AND (JOIN digicams.camera_iso.cameras m.04wjl1x) (JOIN (R digicams.digital_camera.iso_setting) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.03pmfw))))",
      "actions": [
        "get_relations(m.04wjl1x)",
        "get_neighbors(m.04wjl1x,digicams.digital_camera.iso_setting)",
        "get_relations(m.03pmfw)",
        "get_neighbors(m.03pmfw,digicams.camera_sensor_manufacturer.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.iso_setting)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_x",
          "entity_name": "100"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_g",
          "entity_name": "400"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_p",
          "entity_name": "200"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg4v",
          "entity_name": "3200"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg51",
          "entity_name": "1600"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg58",
          "entity_name": "800"
        }
      ]
    },
    {
      "question": "which core text of catholic religion do sacraments practitioners honor?",
      "qid": "4300898004000_grailqa",
      "source": "grailqa",
      "entities": {
        "catholic religion": "m.0c8wxp",
        "sacraments": "m.06xq6"
      },
      "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.0c8wxp) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.06xq6))))",
      "actions": [
        "get_relations(m.0c8wxp)",
        "get_neighbors(m.0c8wxp,religion.religion.texts)",
        "get_relations(m.06xq6)",
        "get_neighbors(m.06xq6,religion.religious_practice.practice_of)",
        "get_relations(#1)",
        "get_neighbors(#1,religion.religion.texts)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.015j7",
          "entity_name": "The Bible"
        }
      ]
    },
    {
      "question": "Of what form of cancer did the artist who had a tour named Natty Dread Tour die from?",
      "qid": "WebQTrn-3531_72cf301b99cc05fd52d411e67b13d02d_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "Natty Dread Tour": "m.0fdsb5"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.artist.concert_tours m.0fdsb5)) (JOIN people.cause_of_death.parent_cause_of_death m.0qcr0))",
      "actions": [
        "get_relations(m.0fdsb5)",
        "get_neighbors(m.0fdsb5,music.concert_tour.artist)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,people.cause_of_death.includes_causes_of_death)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.046wcr",
          "answer_type": "Entity",
          "entity_name": "Acral lentiginous melanoma"
        },
        {
          "answer_argument": "m.04kndz2",
          "answer_type": "Entity",
          "entity_name": "Metastatic Melanoma"
        }
      ]
    },
    {
      "question": "which storage type is supported by kodak cx4200 and those with color filter array of bayer?",
      "qid": "4302099004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Kodak CX4200": "m.03q2mk0",
        "bayer": "m.02r8js"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN digicams.camera_storage_type.compatible_cameras m.03q2mk0) (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.color_filter_array_type m.02r8js))))",
      "actions": [
        "get_relations(m.03q2mk0)",
        "get_neighbors(m.03q2mk0,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.02r8js)",
        "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.supported_storage_types)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tthm",
          "entity_name": "Secure Digital"
        }
      ]
    },
    {
      "question": "Who was once influenced by Girar Desargues and went on to influence Samuel Taylor?",
      "qid": "WebQTest-1198_fa37e433eaf26b34a57900ac4af9259c_cwq",
      "source": "cwq",
      "entities": {
        "samuel taylor": "m.078w2",
        "girar desargues": "m.01_4zq"
      },
      "s_expression": "(AND (JOIN (R influence.influence_node.influenced_by) m.078w2) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.01_4zq)))",
      "actions": [
        "get_relations(m.078w2)",
        "get_neighbors(m.078w2,influence.influence_node.influenced_by)",
        "get_relations(m.01_4zq)",
        "get_neighbors(m.01_4zq,influence.influence_node.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.015n8",
          "answer_type": "Entity",
          "entity_name": "Baruch Spinoza"
        }
      ]
    },
    {
      "question": "What type of government can be found in the birthplace of Baldur von Schirach and the Bahamas?",
      "qid": "WebQTrn-2863_3f76d491e90682cc29e3de2546e1f9c5_cwq",
      "source": "cwq",
      "entities": {
        "Bahamas": "m.0160w",
        "Baldur von Schirach": "m.0143sn"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0160w) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.0143sn)))",
      "actions": [
        "get_relations(m.0160w)",
        "get_neighbors(m.0160w,location.country.form_of_government)",
        "get_relations(m.0143sn)",
        "get_neighbors(m.0143sn,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "When was the last time the team with the mascot Bailey win a playoff?",
      "qid": "WebQTest-1711_96d16482c34e6502b6e243a02006467d_cwq",
      "source": "cwq",
      "entities": {
        "Bailey": "m.0j2h90q"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.0j2h90q)) time.event.end_date)",
      "actions": [
        "get_relations(m.0j2h90q)",
        "get_neighbors(m.0j2h90q,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.010fdzhp",
          "answer_type": "Entity",
          "entity_name": "2014 Stanley Cup Finals"
        }
      ]
    },
    {
      "question": "media tools ltd. owns how many active websites?",
      "qid": "3206340006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Active": "m.02hsn4g",
        "Media Tools Ltd.": "m.01285gc2"
      },
      "s_expression": "(COUNT (AND internet.website (AND (JOIN internet.website.status m.02hsn4g) (JOIN (R internet.website_owner.websites_owned) m.01285gc2))))",
      "actions": [
        "get_relations(m.02hsn4g)",
        "get_neighbors(m.02hsn4g,internet.website_status.sites)",
        "get_relations(m.01285gc2)",
        "get_neighbors(m.01285gc2,internet.website_owner.websites_owned)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what is the programming language influenced by another language developed by world wide web consortium that was introduced first?",
      "qid": "4303199011000_grailqa",
      "source": "grailqa",
      "entities": {
        "World Wide Web Consortium": "m.082bb"
      },
      "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.082bb))) computer.programming_language.introduced)",
      "actions": [
        "get_relations(m.082bb)",
        "get_neighbors(m.082bb,computer.programming_language_developer.programming_languages_developed)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.influenced)",
        "get_attributes(#1)",
        "argmin(#1,computer.programming_language.introduced)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bp8q",
          "entity_name": "Curl"
        }
      ]
    },
    {
      "question": "the same rocket manufacturer who manufactured atlas iii and titan iv created what other rocket?",
      "qid": "4300129010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Atlas III": "m.0f6_rb",
        "Titan IV": "m.03g51v"
      },
      "s_expression": "(AND spaceflight.rocket (JOIN spaceflight.rocket.manufacturer (AND (JOIN (R spaceflight.rocket.manufacturer) m.0f6_rb) (JOIN spaceflight.rocket_manufacturer.rockets_manufactured m.03g51v))))",
      "actions": [
        "get_relations(m.0f6_rb)",
        "get_neighbors(m.0f6_rb,spaceflight.rocket.manufacturer)",
        "get_relations(m.03g51v)",
        "get_neighbors(m.03g51v,spaceflight.rocket.manufacturer)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,spaceflight.rocket_manufacturer.rockets_manufactured)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0fft5p",
          "entity_name": "Athena"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0269d32",
          "entity_name": "Saturn-Shuttle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03gwh3",
          "entity_name": "Atlas II"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02688c_",
          "entity_name": "DIRECT"
        }
      ]
    },
    {
      "question": "how many infectious diseases are transmitted by triatominae? ",
      "qid": "4303160012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Triatominae": "m.060t35"
      },
      "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.060t35)))))",
      "actions": [
        "get_relations(m.060t35)",
        "get_neighbors(m.060t35,medicine.vector_of_disease.disease)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
        "get_relations(#1)",
        "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "30"
        }
      ]
    },
    {
      "question": "What type of cancer was the cause of death for the recording artist of \"I've Got Love?\"?",
      "qid": "WebQTrn-3531_80bd8aa7f1d0243606c8935e89ba7f9f_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "I've Got Love": "m.0g5ybvs"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.featured_artist.recordings m.0g5ybvs)) (JOIN people.cause_of_death.parent_cause_of_death m.0qcr0))",
      "actions": [
        "get_relations(m.0g5ybvs)",
        "get_neighbors(m.0g5ybvs,music.recording.featured_artists)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,people.cause_of_death.includes_causes_of_death)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.046wcr",
          "answer_type": "Entity",
          "entity_name": "Acral lentiginous melanoma"
        },
        {
          "answer_argument": "m.04kndz2",
          "answer_type": "Entity",
          "entity_name": "Metastatic Melanoma"
        }
      ]
    },
    {
      "question": "what is the industry in which financial sector union of sweden operates and is the common parent industry of branches and agencies of foreign banks?",
      "qid": "4301917001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Financial Sector Union of Sweden": "m.0dl786",
        "Branches and Agencies of Foreign Banks": "m.03qth1v"
      },
      "s_expression": "(AND business.industry (AND (JOIN (R business.industry.child_industry) (JOIN business.industry.trade_unions m.0dl786)) (JOIN (R business.industry.child_industry) m.03qth1v)))",
      "actions": [
        "get_relations(m.0dl786)",
        "get_neighbors(m.0dl786,business.trade_union.industry)",
        "get_relations(#0)",
        "get_neighbors(#0,business.industry.child_industry)",
        "get_relations(m.03qth1v)",
        "get_neighbors(m.03qth1v,business.industry.child_industry)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qvw5x",
          "entity_name": "Branches and Agencies of Foreign Banks (branches)"
        }
      ]
    },
    {
      "question": "what religion is party of monotheistic religions and has same practices with christian religion?",
      "qid": "4300140000000_grailqa",
      "source": "grailqa",
      "entities": {
        "monotheistic religions": "m.04xy3",
        "christian religion": "m.01lp8"
      },
      "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.01lp8)) (JOIN religion.religion.is_part_of m.04xy3)))",
      "actions": [
        "get_relations(m.01lp8)",
        "get_neighbors(m.01lp8,religion.religion.practices)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religious_practice.practice_of)",
        "get_relations(m.04xy3)",
        "get_neighbors(m.04xy3,religion.religion.includes)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01cjt",
          "entity_name": "Bahá'í Faith"
        }
      ]
    },
    {
      "question": "which visual art form is made by martin desjardins besides metal working?",
      "qid": "4302283004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Martin Desjardins": "m.026cht2",
        "metal working": "m.01ng72"
      },
      "s_expression": "(AND visual_art.visual_art_form (JOIN (R visual_art.artwork.art_form) (AND (JOIN visual_art.artwork.artist m.026cht2) (JOIN visual_art.artwork.art_form m.01ng72))))",
      "actions": [
        "get_relations(m.026cht2)",
        "get_neighbors(m.026cht2,visual_art.visual_artist.artworks)",
        "get_relations(m.01ng72)",
        "get_neighbors(m.01ng72,visual_art.visual_art_form.artworks)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,visual_art.artwork.art_form)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.06msq",
          "entity_name": "Sculpture"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pkk0",
          "entity_name": "Bas-relief"
        }
      ]
    },
    {
      "question": "what was the programming language first introduced by steve which was influenced by another language?",
      "qid": "4303199012000_grailqa",
      "source": "grailqa",
      "entities": {
        "steve": "m.03c3sv"
      },
      "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.03c3sv))) computer.programming_language.introduced)",
      "actions": [
        "get_relations(m.03c3sv)",
        "get_neighbors(m.03c3sv,computer.programming_language_developer.programming_languages_developed)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.influenced)",
        "get_attributes(#1)",
        "argmin(#1,computer.programming_language.introduced)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01hxzg",
          "entity_name": "ISWIM"
        }
      ]
    },
    {
      "question": "what was  radio station KDMR 's first cartoon called?",
      "qid": "WebQTrn-1461_25676c33970f83e1b1e372feb99c95e4_cwq",
      "source": "cwq",
      "entities": {
        "KDMR": "m.0gpwfp"
      },
      "s_expression": "(ARGMIN (JOIN (R media_common.netflix_genre.titles) (JOIN broadcast.radio_station_owner.radio_stations m.0gpwfp)) tv.tv_program.air_date_of_first_episode)",
      "actions": [
        "get_relations(m.0gpwfp)",
        "get_neighbors(m.0gpwfp,broadcast.radio_station.owner)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.netflix_genre.titles)",
        "get_attributes(#1)",
        "argmin(#1,tv.tv_program.air_date_of_first_episode)"
      ],
      "answer": [
        {
          "answer_argument": "m.01_1p3",
          "answer_type": "Entity",
          "entity_name": "Walt Disney's Wonderful World of Color"
        }
      ]
    },
    {
      "question": "what is the total number of spacecrafts manufactured by finmeccanica and italian space agency?",
      "qid": "3201449015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Italian Space Agency": "m.035c4c",
        "Finmeccanica": "m.02r3h1"
      },
      "s_expression": "(COUNT (AND spaceflight.spacecraft (AND (JOIN spaceflight.spacecraft.manufacturer m.035c4c) (JOIN spaceflight.spacecraft.manufacturer m.02r3h1))))",
      "actions": [
        "get_relations(m.035c4c)",
        "get_neighbors(m.035c4c,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "get_relations(m.02r3h1)",
        "get_neighbors(m.02r3h1,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "which diabetes treatments has pains side effects?",
      "qid": "4301182009000_grailqa",
      "source": "grailqa",
      "entities": {
        "diabetes": "m.0849qj",
        "pains": "m.062t2"
      },
      "s_expression": "(AND medicine.medical_treatment (AND (JOIN medicine.medical_treatment.side_effects (JOIN medicine.symptom.parent_symptom m.062t2)) (JOIN medicine.medical_treatment.used_to_treat m.0849qj)))",
      "actions": [
        "get_relations(m.062t2)",
        "get_neighbors(m.062t2,medicine.symptom.includes_symptoms)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.symptom.side_effect_of)",
        "get_relations(m.0849qj)",
        "get_neighbors(m.0849qj,medicine.disease.treatments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07ypgv",
          "entity_name": "Pramlintide"
        }
      ]
    },
    {
      "question": "what sort of programming language paradigm is followed by programming languages such as sing# and derivatives of vilnius basic?",
      "qid": "4300417015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Sing#": "m.08pndh",
        "Vilnius BASIC": "m.04d9tq"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.04d9tq)) (JOIN (R computer.programming_language.language_paradigms) m.08pndh)))",
      "actions": [
        "get_relations(m.04d9tq)",
        "get_neighbors(m.04d9tq,computer.programming_language.dialects)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.language_paradigms)",
        "get_relations(m.08pndh)",
        "get_neighbors(m.08pndh,computer.programming_language.language_paradigms)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.06w_b",
          "entity_name": "Structured programming"
        }
      ]
    },
    {
      "question": "how many christian religion texts are religious texts of st. anthony's day?",
      "qid": "4303883004000_grailqa",
      "source": "grailqa",
      "entities": {
        "christian religion": "m.01lp8",
        "St. Anthony's Day": "m.011nk6vg"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of (JOIN (R time.holiday.featured_in_religions) m.011nk6vg)) (JOIN (R religion.religion.texts) m.01lp8))))",
      "actions": [
        "get_relations(m.011nk6vg)",
        "get_neighbors(m.011nk6vg,time.holiday.featured_in_religions)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religion.texts)",
        "get_relations(m.01lp8)",
        "get_neighbors(m.01lp8,religion.religion.texts)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "3"
        }
      ]
    },
    {
      "question": "what is the number of super famicom box models that use ricoh 5a22 processors?",
      "qid": "3205922004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Super Famicom Box": "m.02kx0d6",
        "Ricoh 5A22": "m.0by0z8"
      },
      "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.02kx0d6) (JOIN computer.computer.processor m.0by0z8))))",
      "actions": [
        "get_relations(m.02kx0d6)",
        "get_neighbors(m.02kx0d6,computer.computer.includes_models)",
        "get_relations(m.0by0z8)",
        "get_neighbors(m.0by0z8,computer.computer_processor.used_in_computers)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "how many mormon texts are religious texts of st casimir's day?",
      "qid": "4303883014000_grailqa",
      "source": "grailqa",
      "entities": {
        "mormon": "m.058x5",
        "St Casimir's Day": "m.0fdm1h"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of (JOIN (R time.holiday.featured_in_religions) m.0fdm1h)) (JOIN (R religion.religion.texts) m.058x5))))",
      "actions": [
        "get_relations(m.0fdm1h)",
        "get_neighbors(m.0fdm1h,time.holiday.featured_in_religions)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religion.texts)",
        "get_relations(m.058x5)",
        "get_neighbors(m.058x5,religion.religion.texts)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what martial art involving internal is in the same category as silat?",
      "qid": "4301064010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Silat": "m.03hfzm1",
        "Internal": "m.02_yl6z"
      },
      "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.03hfzm1)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.02_yl6z)))",
      "actions": [
        "get_relations(m.03hfzm1)",
        "get_neighbors(m.03hfzm1,martial_arts.martial_art.category)",
        "get_relations(#0)",
        "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
        "get_relations(m.02_yl6z)",
        "get_neighbors(m.02_yl6z,martial_arts.martial_art_category.martial_arts)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07k4r",
          "entity_name": "Tai chi"
        }
      ]
    },
    {
      "question": "Who are Ike's kids, the artist came up with \"(Simply) The Best \"?",
      "qid": "WebQTest-1655_a37e5462aa82b36cb505f7a15681e6fa_cwq",
      "source": "cwq",
      "entities": {
        "ike": "m.0dbzg",
        "(Simply) The Best": "m.0wfybr"
      },
      "s_expression": "(AND (JOIN (R people.person.children) (JOIN music.featured_artist.recordings m.0wfybr)) (JOIN people.person.parents m.0dbzg))",
      "actions": [
        "get_relations(m.0wfybr)",
        "get_neighbors(m.0wfybr,music.recording.featured_artists)",
        "get_relations(#0)",
        "get_neighbors(#0,people.person.children)",
        "get_relations(m.0dbzg)",
        "get_neighbors(m.0dbzg,people.person.children)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0ggl36p",
          "answer_type": "Entity",
          "entity_name": "Ronnie Turner"
        },
        {
          "answer_argument": "m.0j5dh53",
          "answer_type": "Entity",
          "entity_name": "Raymond Craig Turner"
        }
      ]
    },
    {
      "question": "What year did the team with the mascot named Clark win the World Series?",
      "qid": "WebQTrn-682_c2352030c3341e28768312045c4f093d_cwq",
      "source": "cwq",
      "entities": {
        "Clark": "m.0_yll7n"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.0_yll7n)) time.event.start_date)",
      "actions": [
        "get_relations(m.0_yll7n)",
        "get_neighbors(m.0_yll7n,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04tg8s",
          "answer_type": "Entity",
          "entity_name": "1908 World Series"
        }
      ]
    },
    {
      "question": "Which of Chicago's venues has the largest capacity?",
      "qid": "WebQTrn-825_5e513370fb98d3e7e9298a7ca8dbe1a3_cwq",
      "source": "cwq",
      "entities": {
        "Chicago": "m.01_d4"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R travel.travel_destination.tourist_attractions) m.01_d4) (JOIN location.location.containedby m.01_d4)) architecture.venue.capacity)",
      "actions": [
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,travel.travel_destination.tourist_attractions)",
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,location.location.contains)",
        "intersection(#0,#1)",
        "get_attributes(#2)",
        "argmax(#2,architecture.venue.capacity)"
      ],
      "answer": [
        {
          "answer_argument": "m.0b0sh",
          "answer_type": "Entity",
          "entity_name": "Wrigley Field"
        }
      ]
    },
    {
      "question": "what other forms of visual art were made by leonard de vinci other than classical painting?",
      "qid": "4302283003000_grailqa",
      "source": "grailqa",
      "entities": {
        "leonard de vinci": "m.04lg6",
        "classical painting": "m.05qdh"
      },
      "s_expression": "(AND visual_art.visual_art_form (JOIN (R visual_art.artwork.art_form) (AND (JOIN visual_art.artwork.artist m.04lg6) (JOIN visual_art.artwork.art_form m.05qdh))))",
      "actions": [
        "get_relations(m.04lg6)",
        "get_neighbors(m.04lg6,visual_art.visual_artist.artworks)",
        "get_relations(m.05qdh)",
        "get_neighbors(m.05qdh,visual_art.visual_art_form.artworks)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,visual_art.artwork.art_form)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04rd7",
          "entity_name": "Mural"
        }
      ]
    },
    {
      "question": "what is another martial art that involves hybrid and is in the same category as kurash?",
      "qid": "4301064009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Kurash": "m.01w2pl",
        "Hybrid": "m.03nzdm_"
      },
      "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.01w2pl)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.03nzdm_)))",
      "actions": [
        "get_relations(m.01w2pl)",
        "get_neighbors(m.01w2pl,martial_arts.martial_art.category)",
        "get_relations(#0)",
        "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
        "get_relations(m.03nzdm_)",
        "get_neighbors(m.03nzdm_,martial_arts.martial_art_category.martial_arts)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03bs3p",
          "entity_name": "Sanshou"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02618d8",
          "entity_name": "Russian All-Round Fighting"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.048yh",
          "entity_name": "Krav Maga"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b65c",
          "entity_name": "Hwa Rang Do"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06jm_r",
          "entity_name": "Bartitsu"
        }
      ]
    },
    {
      "question": "Which Super Bowl is the most recent one won by the team whose fight song is I'm Shipping Up to Boston?",
      "qid": "WebQTrn-1930_d7607789d5094368472c7046b3a0b666_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "I'm Shipping Up to Boston": "m.02pjx3n"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.fight_song m.02pjx3n)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.02pjx3n)",
        "get_neighbors(m.02pjx3n,sports.fight_song.sports_team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.032tkh",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXXIX"
        }
      ]
    },
    {
      "question": "which was the most recently formed cyclone that is in the same category as 1999 odisha cyclone?",
      "qid": "4303808011000_grailqa",
      "source": "grailqa",
      "entities": {
        "1999 Odisha cyclone": "m.06g61z"
      },
      "s_expression": "(ARGMAX (AND meteorology.tropical_cyclone (JOIN meteorology.tropical_cyclone.category (JOIN (R meteorology.tropical_cyclone.category) m.06g61z))) meteorology.tropical_cyclone.formed)",
      "actions": [
        "get_relations(m.06g61z)",
        "get_neighbors(m.06g61z,meteorology.tropical_cyclone.category)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
        "get_attributes(#1)",
        "argmax(#1,meteorology.tropical_cyclone.formed)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0y52xn7",
          "entity_name": "Cyclone Phailin"
        }
      ]
    },
    {
      "question": "state the number of religious texts of fast of esther among the texts on abrahamic faiths.",
      "qid": "4303883005000_grailqa",
      "source": "grailqa",
      "entities": {
        "abrahamic faiths": "m.0f_h6",
        "Fast of Esther": "m.06y942"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of (JOIN (R time.holiday.featured_in_religions) m.06y942)) (JOIN (R religion.religion.texts) m.0f_h6))))",
      "actions": [
        "get_relations(m.06y942)",
        "get_neighbors(m.06y942,time.holiday.featured_in_religions)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religion.texts)",
        "get_relations(m.0f_h6)",
        "get_neighbors(m.0f_h6,religion.religion.texts)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "What kind of cancer took the life of the lyricist who wrote \"My Baby Understands?\"?",
      "qid": "WebQTrn-2936_2f25b2bc7f66ef39406fa4397144733c_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "My Baby Understands": "m.0_jwv1v"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.lyricist.lyrics_written m.0_jwv1v)) (JOIN people.cause_of_death.parent_cause_of_death m.0qcr0))",
      "actions": [
        "get_relations(m.0_jwv1v)",
        "get_neighbors(m.0_jwv1v,music.composition.lyricist)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,people.cause_of_death.includes_causes_of_death)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.04p3w",
          "answer_type": "Entity",
          "entity_name": "Lung cancer"
        }
      ]
    },
    {
      "question": "the longest release track of howe recordings is what?",
      "qid": "4300020000000_grailqa",
      "source": "grailqa",
      "entities": {
        "howe": "m.02l_7y"
      },
      "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.02l_7y))) music.release_track.length)",
      "actions": [
        "get_relations(m.02l_7y)",
        "get_neighbors(m.02l_7y,music.engineer.tracks_engineered)",
        "get_relations(#0)",
        "get_neighbors(#0,music.recording.tracks)",
        "get_attributes(#1)",
        "argmax(#1,music.release_track.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0mkg8xy",
          "entity_name": "Masquerade"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0rqnft4",
          "entity_name": "Masquerade"
        }
      ]
    },
    {
      "question": "which programming language influenced by another language developed by jonathan a. rees was introduced first?",
      "qid": "4303199004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Jonathan A. Rees": "m.01xrtql"
      },
      "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.01xrtql))) computer.programming_language.introduced)",
      "actions": [
        "get_relations(m.01xrtql)",
        "get_neighbors(m.01xrtql,computer.programming_language_developer.programming_languages_developed)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.influenced)",
        "get_attributes(#1)",
        "argmin(#1,computer.programming_language.introduced)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.042tk1",
          "entity_name": "Oaklisp"
        }
      ]
    },
    {
      "question": "what rice plant dish is common in cuisine of thailand?",
      "qid": "4301356002000_grailqa",
      "source": "grailqa",
      "entities": {
        "rice plant": "m.09759",
        "cuisine of thailand": "m.07hxn"
      },
      "s_expression": "(AND food.type_of_dish (JOIN food.type_of_dish.dishes (AND (JOIN food.dish.ingredients m.09759) (JOIN (R dining.cuisine.dishes) m.07hxn))))",
      "actions": [
        "get_relations(m.09759)",
        "get_neighbors(m.09759,food.ingredient.dishes)",
        "get_relations(m.07hxn)",
        "get_neighbors(m.07hxn,dining.cuisine.dishes)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,food.dish.type_of_dish1)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l4q9",
          "entity_name": "Entrée"
        }
      ]
    },
    {
      "question": "Which Super Bowls were won by the football organization that claimed victory in the Super Bowl XLII championship?",
      "qid": "WebQTrn-3290_92e3a190df8ed73d4fff3bbfbd2b6b86_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "Super Bowl XLII": "m.04myq1"
      },
      "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.04myq1)) (JOIN sports.sports_championship_event.championship m.06x5s))",
      "actions": [
        "get_relations(m.04myq1)",
        "get_neighbors(m.04myq1,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.043t_rh",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLVI"
        },
        {
          "answer_argument": "m.04myq1",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLII"
        },
        {
          "answer_argument": "m.076sw",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXI"
        },
        {
          "answer_argument": "m.076v7",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXV"
        }
      ]
    },
    {
      "question": "What is the name of the airport in the area where the Phoenix Gazette is circulated?",
      "qid": "WebQTrn-1650_8db2e38165789e9d0a25ace51c913756_cwq",
      "source": "cwq",
      "entities": {
        "Southwest Airlines": "m.0gztl",
        "Phoenix Gazette": "m.0bmwns"
      },
      "s_expression": "(AND (JOIN (R location.location.nearby_airports) (JOIN periodicals.newspaper_circulation_area.newspapers m.0bmwns)) (JOIN aviation.airport.focus_city_for m.0gztl))",
      "actions": [
        "get_relations(m.0bmwns)",
        "get_neighbors(m.0bmwns,book.newspaper.circulation_areas)",
        "get_relations(#0)",
        "get_neighbors(#0,location.location.nearby_airports)",
        "get_relations(m.0gztl)",
        "get_neighbors(m.0gztl,aviation.airline.focus_cities)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0syvm",
          "answer_type": "Entity",
          "entity_name": "Phoenix Sky Harbor International Airport"
        }
      ]
    },
    {
      "question": "which breeds are similar in temperament to the anatolian and irish setter?",
      "qid": "4300795014000_grailqa",
      "source": "grailqa",
      "entities": {
        "anatolian": "m.04f2yc",
        "Irish Setter": "m.039rzl"
      },
      "s_expression": "(AND biology.animal_breed (JOIN biology.animal_breed.temperament (AND (JOIN (R biology.animal_breed.temperament) m.04f2yc) (JOIN biology.breed_temperament.breeds m.039rzl))))",
      "actions": [
        "get_relations(m.04f2yc)",
        "get_neighbors(m.04f2yc,biology.animal_breed.temperament)",
        "get_relations(m.039rzl)",
        "get_neighbors(m.039rzl,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,biology.breed_temperament.breeds)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01qn1p",
          "entity_name": "English Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01dv7j",
          "entity_name": "Schipperke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06j1z7",
          "entity_name": "Chippiparai"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01s7fj",
          "entity_name": "Shih Tzu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01x5q1",
          "entity_name": "Jämthund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0353qr",
          "entity_name": "Dandie Dinmont Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03fyyd",
          "entity_name": "Shar Pei"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04dm6",
          "entity_name": "Komondor"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04swl7y",
          "entity_name": "Halden Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0778jb",
          "entity_name": "Redbone Coonhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cbgst",
          "entity_name": "Kintamani"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1203ng2yx",
          "entity_name": "Damchi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01przn",
          "entity_name": "Mackenzie River husky"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0363rs",
          "entity_name": "Toy Manchester Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03y6bvt",
          "entity_name": "Finnish Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yk8l",
          "entity_name": "Tibetan Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05p5nvc",
          "entity_name": "Petit Bleu de Gascogne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07bln6",
          "entity_name": "Curly Coated Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07t_h2",
          "entity_name": "Africanis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09h20b",
          "entity_name": "Rafeiro do Alentejo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c1zmz",
          "entity_name": "Central Asian Shepherd Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j7vm",
          "entity_name": "Kuvasz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0ysvz",
          "entity_name": "Louisiana Catahoula Leopard Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.011l1",
          "entity_name": "Afghan Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.018ywq",
          "entity_name": "Scottish Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01_gx_",
          "entity_name": "Yorkshire Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p89l",
          "entity_name": "Sarplaninac"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025s7vs",
          "entity_name": "Briquet Griffon Vendéen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.028y5g",
          "entity_name": "Saarloos wolfdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02f1fz",
          "entity_name": "West Highland White Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kn5w",
          "entity_name": "Entlebucher Mountain Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02q6wxt",
          "entity_name": "Karakachan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02rf9c3",
          "entity_name": "Central Anatolian Shepherd Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ryncw",
          "entity_name": "Ariege Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xv1",
          "entity_name": "Lakeland Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.035405",
          "entity_name": "Finnish Spitz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0355ff",
          "entity_name": "Greenland Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03c51t7",
          "entity_name": "Welsh Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03dszr",
          "entity_name": "Akbash dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04371y",
          "entity_name": "Kangal dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045tty",
          "entity_name": "Japanese Chin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052h3c",
          "entity_name": "Karelian Bear Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06m828",
          "entity_name": "Petit Basset Griffon Vendéen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06v_sc",
          "entity_name": "American Foxhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.089vcl",
          "entity_name": "Thai Ridgeback"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c40t",
          "entity_name": "Chow Chow"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03ys4",
          "entity_name": "Ibizan Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0fxnkq",
          "entity_name": "Moscow Watchdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01j0g",
          "entity_name": "Borzoi"
        }
      ]
    },
    {
      "question": "games developed by taito corporation and distributed through physical media released where?",
      "qid": "4301141023000_grailqa",
      "source": "grailqa",
      "entities": {
        "Physical media": "m.0663y78",
        "Taito Corporation": "m.07rfp"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.0663y78) (JOIN (R cvg.cvg_developer.game_versions_developed) m.07rfp))))",
      "actions": [
        "get_relations(m.0663y78)",
        "get_neighbors(m.0663y78,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.07rfp)",
        "get_neighbors(m.07rfp,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_3d",
          "entity_name": "Japan"
        }
      ]
    },
    {
      "question": "what is the political ideology followed by the us republican party and the canadian federal election, 2008?",
      "qid": "4302370006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Canadian federal election, 2008": "m.0b1_7g",
        "us republican party": "m.07wbk"
      },
      "s_expression": "(AND government.political_ideology (AND (JOIN government.political_ideology.political_parties (JOIN (R government.parliamentary_election.government_formed_by) m.0b1_7g)) (JOIN (R government.political_party.ideology) m.07wbk)))",
      "actions": [
        "get_relations(m.0b1_7g)",
        "get_neighbors(m.0b1_7g,government.parliamentary_election.government_formed_by)",
        "get_relations(#0)",
        "get_neighbors(#0,government.political_party.ideology)",
        "get_relations(m.07wbk)",
        "get_neighbors(m.07wbk,government.political_party.ideology)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01yqp",
          "entity_name": "Conservatism"
        }
      ]
    },
    {
      "question": "What ocean does the river under the Swanport Bridge flow into?",
      "qid": "WebQTrn-1234_163eb3ba328ba762733d8663ddb02520_cwq",
      "source": "cwq",
      "entities": {
        "ocean": "m.05kq4",
        "Swanport Bridge": "m.03qn4l4"
      },
      "s_expression": "(AND (JOIN (R geography.river.mouth) (JOIN geography.body_of_water.bridges m.03qn4l4)) (JOIN geography.geographical_feature.category m.05kq4))",
      "actions": [
        "get_relations(m.03qn4l4)",
        "get_neighbors(m.03qn4l4,transportation.bridge.body_of_water_spanned)",
        "get_relations(#0)",
        "get_neighbors(#0,geography.river.mouth)",
        "get_relations(m.05kq4)",
        "get_neighbors(m.05kq4,geography.geographical_feature_category.features)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.06nqw",
          "answer_type": "Entity",
          "entity_name": "Southern Ocean"
        }
      ]
    },
    {
      "question": "how much content about talk radio is produced by the person that produces weekend edition sunday?",
      "qid": "4303008004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Talk radio": "m.07dn1",
        "Weekend Edition Sunday": "m.0t4t10s"
      },
      "s_expression": "(COUNT (AND broadcast.content (AND (JOIN (R broadcast.genre.content) m.07dn1) (JOIN (R broadcast.producer.produces) (JOIN broadcast.producer.produces m.0t4t10s)))))",
      "actions": [
        "get_relations(m.07dn1)",
        "get_neighbors(m.07dn1,broadcast.genre.content)",
        "get_relations(m.0t4t10s)",
        "get_neighbors(m.0t4t10s,broadcast.content.producer)",
        "get_relations(#1)",
        "get_neighbors(#1,broadcast.producer.produces)",
        "intersection(#0,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "4"
        }
      ]
    },
    {
      "question": "drugs formulated from phenol/diphenhydramine containing active ingredient panax ginseng fruit have what dosage form?",
      "qid": "5400022004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Phenol/Diphenhydramine": "m.0jxrk_0",
        "Panax ginseng fruit": "m.0jxp2xd"
      },
      "s_expression": "(AND medicine.drug_dosage_form (AND (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.formulation_of m.0jxrk_0)) (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.active_ingredient_moieties m.0jxp2xd))))",
      "actions": [
        "get_relations(m.0jxrk_0)",
        "get_neighbors(m.0jxrk_0,medicine.drug.marketed_formulations)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.drug_formulation.dosage_form)",
        "get_relations(m.0jxp2xd)",
        "get_neighbors(m.0jxp2xd,medicine.drug_ingredient.active_moiety_of_formulation)",
        "get_relations(#2)",
        "get_neighbors(#2,medicine.drug_formulation.dosage_form)",
        "intersection(#1,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04k94",
          "entity_name": "Liquid"
        }
      ]
    },
    {
      "question": "the maximum speed can be found in which ride designed by the same designer as haunted manison?",
      "qid": "482000302_graphquestions",
      "source": "graphquestions",
      "entities": {
        "haunted manison": "m.01p79p"
      },
      "s_expression": "(ARGMAX (AND amusement_parks.ride (JOIN amusement_parks.ride.designer (JOIN amusement_parks.ride_designer.rides m.01p79p))) amusement_parks.ride.max_speed)",
      "actions": [
        "get_relations(m.01p79p)",
        "get_neighbors(m.01p79p,amusement_parks.ride.designer)",
        "get_relations(#0)",
        "get_neighbors(#0,amusement_parks.ride_designer.rides)",
        "get_attributes(#1)",
        "argmax(#1,amusement_parks.ride.max_speed)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.040fq5",
          "entity_name": "California Screamin'"
        }
      ]
    },
    {
      "question": "which olympic event was contested officially in 1928 winter olympics and other olympic games in great salt lake city?",
      "qid": "4300161005000_grailqa",
      "source": "grailqa",
      "entities": {
        "great salt lake city": "m.0f2r6",
        "1928 Winter Olympics": "m.0d4j2"
      },
      "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.0f2r6)) (JOIN olympics.olympic_event.olympic_games_contested m.0d4j2)))",
      "actions": [
        "get_relations(m.0f2r6)",
        "get_neighbors(m.0f2r6,olympics.olympic_host_city.olympics_hosted)",
        "get_relations(#0)",
        "get_neighbors(#0,olympics.olympic_games.events)",
        "get_relations(m.0d4j2)",
        "get_neighbors(m.0d4j2,olympics.olympic_games.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07nxf_t",
          "entity_name": "Men's Cross-country, 50km"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqcn",
          "entity_name": "Women's Singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqdl",
          "entity_name": "Men's 500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqf_",
          "entity_name": "Men's 10000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_xm",
          "entity_name": "Men's 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zhzln",
          "entity_name": "Men's 5000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07nxg0q",
          "entity_name": "Men's Nordic Combined, Individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07rcjwr",
          "entity_name": "Men's Large hill individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bj4fg7",
          "entity_name": "Men's singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqds",
          "entity_name": "Men's Skeleton"
        }
      ]
    },
    {
      "question": "what is the longest release track of recordings written by robyn ferguson?",
      "qid": "4300020008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Robyn Ferguson": "m.0115t775"
      },
      "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.0115t775))) music.release_track.length)",
      "actions": [
        "get_relations(m.0115t775)",
        "get_neighbors(m.0115t775,music.engineer.tracks_engineered)",
        "get_relations(#0)",
        "get_neighbors(#0,music.recording.tracks)",
        "get_attributes(#1)",
        "argmax(#1,music.release_track.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.011cgpg_",
          "entity_name": "Molested Innocence"
        }
      ]
    },
    {
      "question": "Which museum established latest can be seen in downtown Chicago?",
      "qid": "WebQTrn-825_ca574e3042334dacd81a97eceeb3cbc4_cwq",
      "source": "cwq",
      "entities": {
        "Chicago": "m.01_d4"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R travel.travel_destination.tourist_attractions) m.01_d4) (JOIN location.location.containedby m.01_d4)) architecture.museum.established)",
      "actions": [
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,travel.travel_destination.tourist_attractions)",
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,location.location.contains)",
        "intersection(#0,#1)",
        "get_attributes(#2)",
        "argmax(#2,architecture.museum.established)"
      ],
      "answer": [
        {
          "answer_argument": "m.021czc",
          "answer_type": "Entity",
          "entity_name": "Field Museum of Natural History"
        }
      ]
    },
    {
      "question": "What is the most populous city in the country of origin for Al Ahram Beverages Co Stella Beer?",
      "qid": "WebQTrn-3037_9f924908bb36bf7d331fa1b933af9f58_cwq",
      "source": "cwq",
      "entities": {
        "al ahram beverages co stella beer": "m.04dqn_j"
      },
      "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN food.beer_country_region.beers_from_here m.04dqn_j)) topic_server.population_number)",
      "actions": [
        "get_relations(m.04dqn_j)",
        "get_neighbors(m.04dqn_j,food.beer.from_region)",
        "get_relations(#0)",
        "get_neighbors(#0,location.location.contains)",
        "get_attributes(#1)",
        "argmax(#1,topic_server.population_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.080msrv",
          "answer_type": "Entity",
          "entity_name": "Greater Cairo"
        }
      ]
    },
    {
      "question": "how many apple macintosh models used intel core processors?",
      "qid": "3205922011000_grailqa",
      "source": "grailqa",
      "entities": {
        "apple macintosh": "m.0zd6",
        "Intel Core": "m.09b_4m"
      },
      "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.0zd6) (JOIN computer.computer.processor m.09b_4m))))",
      "actions": [
        "get_relations(m.0zd6)",
        "get_neighbors(m.0zd6,computer.computer.includes_models)",
        "get_relations(m.09b_4m)",
        "get_neighbors(m.09b_4m,computer.computer_processor.used_in_computers)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "The cyclone Eliane affected many areas, what is the larges nation that was affected?",
      "qid": "WebQTest-523_ed9842b42608ed4538f187dc18a3902b_cwq",
      "source": "cwq",
      "entities": {
        "Eliane": "m.03hjlq7"
      },
      "s_expression": "(ARGMAX (JOIN (R base.locations.continents.countries_within) (JOIN meteorology.cyclone_affected_area.cyclones m.03hjlq7)) topic_server.population_number)",
      "actions": [
        "get_relations(m.03hjlq7)",
        "get_neighbors(m.03hjlq7,meteorology.tropical_cyclone.affected_areas)",
        "get_relations(#0)",
        "get_neighbors(#0,base.locations.continents.countries_within)",
        "get_attributes(#1)",
        "argmax(#1,topic_server.population_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.06bnz",
          "answer_type": "Entity",
          "entity_name": "Russia"
        }
      ]
    },
    {
      "question": "which was the most recently formed cyclone in the same category as hurricane sandy?",
      "qid": "4303808007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Hurricane Sandy": "m.0n9fbyf"
      },
      "s_expression": "(ARGMAX (AND meteorology.tropical_cyclone (JOIN meteorology.tropical_cyclone.category (JOIN (R meteorology.tropical_cyclone.category) m.0n9fbyf))) meteorology.tropical_cyclone.formed)",
      "actions": [
        "get_relations(m.0n9fbyf)",
        "get_neighbors(m.0n9fbyf,meteorology.tropical_cyclone.category)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
        "get_attributes(#1)",
        "argmax(#1,meteorology.tropical_cyclone.formed)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.011__193",
          "entity_name": "Hurricane Simon"
        }
      ]
    },
    {
      "question": "What type of government does Australia currently have, specifically where Emanuel Lasker was born?",
      "qid": "WebQTrn-848_3ce332b703593e71708a5604865c5758_cwq",
      "source": "cwq",
      "entities": {
        "Australia": "m.0chghy",
        "Emanuel Lasker": "m.01kfm7"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0chghy) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
      "actions": [
        "get_relations(m.0chghy)",
        "get_neighbors(m.0chghy,location.country.form_of_government)",
        "get_relations(m.01kfm7)",
        "get_neighbors(m.01kfm7,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "which viewfinder does the camera with sensor from nikon corp. and a compression format of jpeg image use?",
      "qid": "4302274006000_grailqa",
      "source": "grailqa",
      "entities": {
        "jpeg image": "m.0220vh_",
        "nikon corp.": "m.03pmfw"
      },
      "s_expression": "(AND digicams.camera_viewfinder_type (JOIN digicams.camera_viewfinder_type.digital_cameras (AND (JOIN (R digicams.camera_compressed_format.cameras) m.0220vh_) (JOIN digicams.digital_camera.camera_sensor_manufacturer m.03pmfw))))",
      "actions": [
        "get_relations(m.0220vh_)",
        "get_neighbors(m.0220vh_,digicams.camera_compressed_format.cameras)",
        "get_relations(m.03pmfw)",
        "get_neighbors(m.03pmfw,digicams.camera_sensor_manufacturer.cameras)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,digicams.digital_camera.viewfinder_type)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01jpdj",
          "entity_name": "Pentaprism"
        }
      ]
    },
    {
      "question": "In what year did the team whose mascot is named Mr. Met when their first world series?",
      "qid": "WebQTrn-2356_0937b86e1aaf5f36cf0faed52effe91c_cwq",
      "source": "cwq",
      "entities": {
        "World Series": "m.0fjp3",
        "Mr. Met": "m.01xn5q"
      },
      "s_expression": "(ARGMIN (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.01xn5q)) (JOIN sports.sports_championship_event.championship m.0fjp3)) time.event.start_date)",
      "actions": [
        "get_relations(m.01xn5q)",
        "get_neighbors(m.01xn5q,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.0fjp3)",
        "get_neighbors(m.0fjp3,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmin(#3,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04jg9_",
          "answer_type": "Entity",
          "entity_name": "1969 World Series"
        }
      ]
    },
    {
      "question": "what is the programming language influenced by tex and the program language paradigm used by water programming language?",
      "qid": "4300798013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Water programming language": "m.03qtl5",
        "TeX": "m.07dh_"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.03qtl5) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.07dh_))))",
      "actions": [
        "get_relations(m.03qtl5)",
        "get_neighbors(m.03qtl5,computer.programming_language.language_paradigms)",
        "get_relations(m.07dh_)",
        "get_neighbors(m.07dh_,computer.programming_language.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.programming_language.language_paradigms)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05prj",
          "entity_name": "Object-oriented programming"
        }
      ]
    },
    {
      "question": "how many temperaments do saarloos wolfdog and briquet griffon vendéen have in common?",
      "qid": "3205485008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Saarloos wolfdog": "m.028y5g",
        "Briquet Griffon Vendéen": "m.025s7vs"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds m.028y5g) (JOIN (R biology.animal_breed.temperament) m.025s7vs))))",
      "actions": [
        "get_relations(m.028y5g)",
        "get_neighbors(m.028y5g,biology.animal_breed.temperament)",
        "get_relations(m.025s7vs)",
        "get_neighbors(m.025s7vs,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "What system of government rules Spain, the home of Antao Martins Homem?",
      "qid": "WebQTrn-369_89e002ff7250ffeee9ef6f385a7a0658_cwq",
      "source": "cwq",
      "entities": {
        "Spain": "m.06mkj",
        "antao martins homem": "g.122wbmv4"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.06mkj) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here g.122wbmv4)))",
      "actions": [
        "get_relations(m.06mkj)",
        "get_neighbors(m.06mkj,location.country.form_of_government)",
        "get_relations(g.122wbmv4)",
        "get_neighbors(g.122wbmv4,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.04szc",
          "answer_type": "Entity",
          "entity_name": "Monarchy"
        }
      ]
    },
    {
      "question": "what type of guitar does the topic of the image Kirk Hammett performing with Metallica in Vienna in 2007 play?",
      "qid": "WebQTrn-278_48038f9655a95d1ebd646df1c0ec6a68_cwq",
      "source": "cwq",
      "entities": {
        "Guitar": "m.0342h",
        "Kirk Hammett performing with Metallica in Vienna in 2007": "m.0423g15"
      },
      "s_expression": "(AND (JOIN (R music.group_member.instruments_played) (JOIN common.topic.image m.0423g15)) (JOIN music.instrument.family m.0342h))",
      "actions": [
        "get_relations(m.0423g15)",
        "get_neighbors(m.0423g15,common.image.appears_in_topic_gallery)",
        "get_relations(#0)",
        "get_neighbors(#0,music.group_member.instruments_played)",
        "get_relations(m.0342h)",
        "get_neighbors(m.0342h,music.instrument.variation)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.018vs",
          "answer_type": "Entity",
          "entity_name": "Bass guitar"
        }
      ]
    },
    {
      "question": "In the country that contains Gebel Elba, what is the primary language spoken?",
      "qid": "WebQTest-1608_8b3815ec57389b13892dd5abb108cc4e_cwq",
      "source": "cwq",
      "entities": {
        "Gebel Elba": "m.026cy73"
      },
      "s_expression": "(JOIN (R location.country.languages_spoken) (AND (JOIN (R language.human_language.main_country) common.topic) (JOIN location.location.partially_contains m.026cy73)))",
      "actions": [
        "get_relations(common.topic)",
        "get_neighbors(common.topic,language.human_language.main_country)",
        "get_relations(m.026cy73)",
        "get_neighbors(m.026cy73,location.location.partially_containedby)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,location.country.languages_spoken)"
      ],
      "answer": [
        {
          "answer_argument": "m.012zfy",
          "answer_type": "Entity",
          "entity_name": "Siwi Language"
        },
        {
          "answer_argument": "m.02hx2cr",
          "answer_type": "Entity",
          "entity_name": "Egyptian Arabic"
        },
        {
          "answer_argument": "m.02hxbhg",
          "answer_type": "Entity",
          "entity_name": "Sa'idi Arabic"
        },
        {
          "answer_argument": "m.03wc2kf",
          "answer_type": "Entity",
          "entity_name": "Bedawi Arabic"
        }
      ]
    },
    {
      "question": "When did the sports team who calls Hilltop Park home last win the World Series?",
      "qid": "WebQTrn-710_1afd5634cb719e3b77b4345510599ca8_cwq",
      "source": "cwq",
      "entities": {
        "Hilltop Park": "m.039nhz"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.039nhz)) time.event.start_date)",
      "actions": [
        "get_relations(m.039nhz)",
        "get_neighbors(m.039nhz,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0117q3yz"
        }
      ]
    },
    {
      "question": "where is the version developed by taito corporation and distributed through physical media released?",
      "qid": "4301141006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Physical media": "m.0663y78",
        "Taito Corporation": "m.07rfp"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.0663y78) (JOIN (R cvg.cvg_developer.game_versions_developed) m.07rfp))))",
      "actions": [
        "get_relations(m.0663y78)",
        "get_neighbors(m.0663y78,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.07rfp)",
        "get_neighbors(m.07rfp,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_3d",
          "entity_name": "Japan"
        }
      ]
    },
    {
      "question": "which dog breeds have the same temperament as maltese terrier and english setter?",
      "qid": "4300795013000_grailqa",
      "source": "grailqa",
      "entities": {
        "maltese terrier": "m.02cyl6",
        "English Setter": "m.0gz1d"
      },
      "s_expression": "(AND biology.animal_breed (JOIN biology.animal_breed.temperament (AND (JOIN (R biology.animal_breed.temperament) m.02cyl6) (JOIN biology.breed_temperament.breeds m.0gz1d))))",
      "actions": [
        "get_relations(m.02cyl6)",
        "get_neighbors(m.02cyl6,biology.animal_breed.temperament)",
        "get_relations(m.0gz1d)",
        "get_neighbors(m.0gz1d,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,biology.breed_temperament.breeds)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.027dd3t",
          "entity_name": "Black Norwegian Elkhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02r4blp",
          "entity_name": "Braque d'Auvergne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01qn1p",
          "entity_name": "English Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p39m",
          "entity_name": "American Water Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01sc6y",
          "entity_name": "Patterdale Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03htgw",
          "entity_name": "Koolie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03ysz",
          "entity_name": "Italian Greyhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05sfy0",
          "entity_name": "Löwchen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08s0ws",
          "entity_name": "Boykin Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gz2b",
          "entity_name": "Australian Kelpie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0km3f",
          "entity_name": "Labrador Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kwdc",
          "entity_name": "German Wirehaired Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gx1zf",
          "entity_name": "Billy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01t032",
          "entity_name": "Golden Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.020z66",
          "entity_name": "Miniature Schnauzer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0182yx",
          "entity_name": "Shetland Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0km5c",
          "entity_name": "German Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0183xd",
          "entity_name": "Vizsla"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01cx_v",
          "entity_name": "Chesapeake Bay Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01hzb8",
          "entity_name": "Great Pyrenees"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01j0x",
          "entity_name": "Basenji"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01kv93",
          "entity_name": "Staffordshire Bull Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p5rd",
          "entity_name": "Bernese Mountain Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pm38",
          "entity_name": "Clumber Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01s7fj",
          "entity_name": "Shih Tzu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.020z5t",
          "entity_name": "English Springer Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0271kpq",
          "entity_name": "Spanish Water Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02_73c",
          "entity_name": "Rat Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kf24",
          "entity_name": "Australian Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kgrx",
          "entity_name": "Cardigan Welsh Corgi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kw9d",
          "entity_name": "German Shorthaired Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02nscg",
          "entity_name": "Bearded Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02rfz5",
          "entity_name": "Irish Soft-coated Wheaten Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02vjrc",
          "entity_name": "Groenendael"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wbf7",
          "entity_name": "Bedlington Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.031pqh",
          "entity_name": "Peruvian Hairless Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0353h4",
          "entity_name": "Border Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.035xn5",
          "entity_name": "Toy Fox Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_vlr",
          "entity_name": "Smooth Fox Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03cq_p",
          "entity_name": "Kerry Blue Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03d12",
          "entity_name": "Greyhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03jjm4",
          "entity_name": "Norwich Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l5cy",
          "entity_name": "Spinone Italiano"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03ydd_",
          "entity_name": "Havanese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0403wp9",
          "entity_name": "Muggin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0410k_5",
          "entity_name": "Treeing Tennessee Brindle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04dm6",
          "entity_name": "Komondor"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04jj62w",
          "entity_name": "Llewellyn"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04nmst",
          "entity_name": "King Charles Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04prkf",
          "entity_name": "Small Münsterländer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04swlxt",
          "entity_name": "Hellenikos Ichnilatis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.057_4d",
          "entity_name": "Canadian Eskimo Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05tbqb",
          "entity_name": "Coton de Tulear"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05y236",
          "entity_name": "New Guinea singing dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.074pqh",
          "entity_name": "Spanish Mastiff"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0773fb",
          "entity_name": "Treeing Walker Coonhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07dx0m",
          "entity_name": "Japanese Spitz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08626",
          "entity_name": "Whippet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08f_zh",
          "entity_name": "Pont-Audemer Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bjrtp",
          "entity_name": "Cirneco dell'Etna"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bllpv",
          "entity_name": "Puggle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dpx6y",
          "entity_name": "German Longhaired Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0fl887",
          "entity_name": "Braque du Bourbonnais"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gt5n2",
          "entity_name": "Cretan Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gvx7",
          "entity_name": "Pharaoh Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hw_s",
          "entity_name": "Basset Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0nr94",
          "entity_name": "Bichon Frise"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04p3f7",
          "entity_name": "Standard Schnauzer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1203ng2yx",
          "entity_name": "Damchi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.017lw7",
          "entity_name": "American Eskimo Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01d7mc",
          "entity_name": "Black and Tan Coonhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01dj7",
          "entity_name": "Beagle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01llgk",
          "entity_name": "Boxer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p33b",
          "entity_name": "Mudi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p85j",
          "entity_name": "Barbet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pq45",
          "entity_name": "Chinook"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01przn",
          "entity_name": "Mackenzie River husky"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pyhj",
          "entity_name": "Shiloh Shepherd Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.020dr1",
          "entity_name": "Bluetick coonhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026067b",
          "entity_name": "Guejae Gae"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026qz0j",
          "entity_name": "Polish Hunting Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0285t83",
          "entity_name": "German Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02fvym",
          "entity_name": "Goldendoodle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02fxgn",
          "entity_name": "Cockapoo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kfwr",
          "entity_name": "Poodle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ktbm",
          "entity_name": "Smooth Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kvr1",
          "entity_name": "Puli"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02n_s4",
          "entity_name": "Korean Jindo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02p1d4",
          "entity_name": "St. Bernard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pp4mc",
          "entity_name": "Bohemian Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pxllv",
          "entity_name": "Blue Picardy Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qx4jn",
          "entity_name": "IrishJacks"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02x9dk",
          "entity_name": "Boston Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02xlz3",
          "entity_name": "Bergamasco Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02z2jdn",
          "entity_name": "Beagador"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02z57c",
          "entity_name": "Cairn Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xnp",
          "entity_name": "Welsh Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03606n",
          "entity_name": "Sapsali"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0363rs",
          "entity_name": "Toy Manchester Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03b6hk",
          "entity_name": "Catalan Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03b8_5",
          "entity_name": "Brittany"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03grqp",
          "entity_name": "Drentse Patrijshond"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03gt33k",
          "entity_name": "Tamaskan Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03h71r",
          "entity_name": "Bouvier des Flandres"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03nrh1z",
          "entity_name": "Canadian Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yk8l",
          "entity_name": "Tibetan Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0408cgh",
          "entity_name": "Stephens Cur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0410kz_",
          "entity_name": "Schapendoes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.044lwh",
          "entity_name": "Irish Water Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f2yc",
          "entity_name": "Anatolian Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04mhks",
          "entity_name": "Jagdterrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04svlc5",
          "entity_name": "Braque du Puy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04sxbdx",
          "entity_name": "Mullins Feist"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04sxbjk",
          "entity_name": "Parnell's Carolina Cur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05z8jf",
          "entity_name": "Shikoku"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06llrr",
          "entity_name": "Carolina Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.076_8",
          "entity_name": "Scottish Deerhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.076zg",
          "entity_name": "Saluki"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07bln6",
          "entity_name": "Curly Coated Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07p7st",
          "entity_name": "Portuguese Podengo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07vgwn",
          "entity_name": "Pumi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08c5h8",
          "entity_name": "Brazilian Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08pb1g",
          "entity_name": "Australian Stumpy Tail Cattle Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.093z2k",
          "entity_name": "Carlin Pinscher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kkkg",
          "entity_name": "Istrian Coarse-haired Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b26w3",
          "entity_name": "Schnoodle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b6c67",
          "entity_name": "German Pinscher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bq2r1",
          "entity_name": "Indian Spitz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c3k58",
          "entity_name": "Pražský Krysařík"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c8gtz",
          "entity_name": "Valley Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cqpth",
          "entity_name": "Hortaya borzaya"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dbk_j",
          "entity_name": "Kai Ken"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gh46s",
          "entity_name": "Tahltan Bear Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0h01s5",
          "entity_name": "Skye Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hkfc",
          "entity_name": "Kooikerhondje"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j7vm",
          "entity_name": "Kuvasz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0lbw4",
          "entity_name": "Great Dane"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0m1ct",
          "entity_name": "Wirehaired Pointing Griffon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0ysvz",
          "entity_name": "Louisiana Catahoula Leopard Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0blw4s",
          "entity_name": "Huntaway"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.016wfy",
          "entity_name": "Pomeranian"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.017t3p",
          "entity_name": "Airedale Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01_gx_",
          "entity_name": "Yorkshire Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01fgs3",
          "entity_name": "Boerboel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01j7n4",
          "entity_name": "Swedish Vallhund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01k9j2",
          "entity_name": "Mexican Hairless Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p89l",
          "entity_name": "Sarplaninac"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p900",
          "entity_name": "Beauceron"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pkw7",
          "entity_name": "Papillon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01z404",
          "entity_name": "Newfoundland"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025_s6d",
          "entity_name": "Croatian Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025_sbw",
          "entity_name": "French Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026nbpz",
          "entity_name": "Mountain View Cur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.028br6g",
          "entity_name": "French Brittany"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02_70q",
          "entity_name": "Briard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02_jdw",
          "entity_name": "Portuguese Water Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kh72",
          "entity_name": "Parson Russell Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kn5w",
          "entity_name": "Entlebucher Mountain Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02l61f",
          "entity_name": "Rough Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pl0tr",
          "entity_name": "Dorgi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ppbk1",
          "entity_name": "American English Coonhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02q6wxt",
          "entity_name": "Karakachan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qllrh",
          "entity_name": "Porcelaine"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qr3y_",
          "entity_name": "Northern Inuit Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02rjc05",
          "entity_name": "Dalmatian"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02xp9c",
          "entity_name": "Miniature Australian Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xlb",
          "entity_name": "Irish Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xv1",
          "entity_name": "Lakeland Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.035405",
          "entity_name": "Finnish Spitz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.038wvd",
          "entity_name": "Toy Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03c51t7",
          "entity_name": "Welsh Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03dszr",
          "entity_name": "Akbash dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03f84m",
          "entity_name": "American Hairless Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03fqgz",
          "entity_name": "Australian Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03g_78s",
          "entity_name": "Gaddi Kutta"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03gymyk",
          "entity_name": "Vikhan Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03j7p3",
          "entity_name": "Old English Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l04k",
          "entity_name": "Nova Scotia Duck Tolling Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03nn344",
          "entity_name": "Catahoula Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03vrbz",
          "entity_name": "Lhasa Apso"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0413r8v",
          "entity_name": "Treeing Cur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045tty",
          "entity_name": "Japanese Chin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04q65n",
          "entity_name": "Giant Schnauzer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04sxch4",
          "entity_name": "Pocket Beagle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04y09b",
          "entity_name": "Landseer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051ppn",
          "entity_name": "Glen of Imaal Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.054kbj",
          "entity_name": "Utonagan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.055br8",
          "entity_name": "Thai Bangkaew Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05qgc4",
          "entity_name": "Polish Lowland Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05y5lx",
          "entity_name": "Maremma Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05z86m",
          "entity_name": "Lancashire Heeler"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06g210",
          "entity_name": "Canaan Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06pq2r",
          "entity_name": "Doberman Pinscher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06smkm",
          "entity_name": "Tosa"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06v_sc",
          "entity_name": "American Foxhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06w066",
          "entity_name": "English Foxhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.071jj",
          "entity_name": "Siberian Husky"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.076_n",
          "entity_name": "Sloughi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.082x3k",
          "entity_name": "Eurasier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.089vcl",
          "entity_name": "Thai Ridgeback"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08kkns",
          "entity_name": "Plott Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08pmt0",
          "entity_name": "Alaskan Klee Kai"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dflqz",
          "entity_name": "Blue Lacy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g0rch",
          "entity_name": "Danish Swedish Farmdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0pwdp",
          "entity_name": "Border Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.018z4d",
          "entity_name": "Bloodhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01d7fl",
          "entity_name": "Jack Russell Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02bp0t",
          "entity_name": "Pekingese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kwjt",
          "entity_name": "Weimaraner"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02vjwg",
          "entity_name": "Tervuren"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0353wm",
          "entity_name": "English Toy Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03cr7fw",
          "entity_name": "Morkie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03w0j9",
          "entity_name": "Tibetan Mastiff"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03ys4",
          "entity_name": "Ibizan Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.049jr6",
          "entity_name": "American Pit Bull Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05pyhd",
          "entity_name": "Tibetan Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06c5rq",
          "entity_name": "Grand Bleu de Gascogne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c779w",
          "entity_name": "Berger Picard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0fxnkq",
          "entity_name": "Moscow Watchdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.035w0_",
          "entity_name": "Perro de Presa Canario"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01j0g",
          "entity_name": "Borzoi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.018g_l",
          "entity_name": "Rhodesian Ridgeback"
        }
      ]
    },
    {
      "question": "5min media owns what amount of active websites?",
      "qid": "3206340014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Active": "m.02hsn4g",
        "5min Media": "m.02_86nr"
      },
      "s_expression": "(COUNT (AND internet.website (AND (JOIN internet.website.status m.02hsn4g) (JOIN (R internet.website_owner.websites_owned) m.02_86nr))))",
      "actions": [
        "get_relations(m.02hsn4g)",
        "get_neighbors(m.02hsn4g,internet.website_status.sites)",
        "get_relations(m.02_86nr)",
        "get_neighbors(m.02_86nr,internet.website_owner.websites_owned)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what was the most recently formed cyclone in the same category as hurricane iniki?",
      "qid": "4303808003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Hurricane Iniki": "m.03ndhv"
      },
      "s_expression": "(ARGMAX (AND meteorology.tropical_cyclone (JOIN meteorology.tropical_cyclone.category (JOIN (R meteorology.tropical_cyclone.category) m.03ndhv))) meteorology.tropical_cyclone.formed)",
      "actions": [
        "get_relations(m.03ndhv)",
        "get_neighbors(m.03ndhv,meteorology.tropical_cyclone.category)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
        "get_attributes(#1)",
        "argmax(#1,meteorology.tropical_cyclone.formed)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.011jnng3",
          "entity_name": "Hurricane Iselle"
        }
      ]
    },
    {
      "question": "how many canadian whiskey are a combination of corn whiskey with rye?",
      "qid": "4302561003000_grailqa",
      "source": "grailqa",
      "entities": {
        "rye": "m.01p5b6",
        "canadian whiskey": "m.0212n",
        "Corn whiskey": "m.01yr36"
      },
      "s_expression": "(COUNT (AND distilled_spirits.blended_spirit (AND (JOIN (R distilled_spirits.distilled_spirit_type.blends) m.01p5b6) (AND (JOIN distilled_spirits.blended_spirit.style m.0212n) (JOIN (R distilled_spirits.distilled_spirit_type.blends) m.01yr36)))))",
      "actions": [
        "get_relations(m.01p5b6)",
        "get_neighbors(m.01p5b6,distilled_spirits.distilled_spirit_type.blends)",
        "get_relations(m.0212n)",
        "get_neighbors(m.0212n,distilled_spirits.blended_spirit_style.blends)",
        "get_relations(m.01yr36)",
        "get_neighbors(m.01yr36,distilled_spirits.distilled_spirit_type.blends)",
        "intersection(#1,#2)",
        "intersection(#0,#3)",
        "count(#4)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "Which country is the birth place of the http://leapfroggr.com/blog blogger and the location of puerto galera?",
      "qid": "WebQTrn-1697_4a65a4fa00ada78f4448204112bb58eb_cwq",
      "source": "cwq",
      "entities": {
        "puerto galera": "m.01pn1_",
        "leapfroggr.com": "m.0127vgv8"
      },
      "s_expression": "(AND (JOIN (R location.location.containedby) m.01pn1_) (JOIN location.location.people_born_here (JOIN internet.blogger.blog m.0127vgv8)))",
      "actions": [
        "get_relations(m.01pn1_)",
        "get_neighbors(m.01pn1_,location.location.containedby)",
        "get_relations(m.0127vgv8)",
        "get_neighbors(m.0127vgv8,internet.blog.blogger)",
        "get_relations(#1)",
        "get_neighbors(#1,people.person.place_of_birth)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.05v8c",
          "answer_type": "Entity",
          "entity_name": "Philippines"
        }
      ]
    },
    {
      "question": "which artwork on canvases was painted in the era of auguste herbin?",
      "qid": "4301655004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Auguste Herbin": "m.05rvdq",
        "canvases": "m.0jmpt"
      },
      "s_expression": "(AND visual_art.artwork (AND (JOIN visual_art.artwork.period_or_movement (JOIN visual_art.art_period_movement.associated_artists m.05rvdq)) (JOIN visual_art.artwork.support m.0jmpt)))",
      "actions": [
        "get_relations(m.05rvdq)",
        "get_neighbors(m.05rvdq,visual_art.visual_artist.associated_periods_or_movements)",
        "get_relations(#0)",
        "get_neighbors(#0,visual_art.art_period_movement.associated_artworks)",
        "get_relations(m.0jmpt)",
        "get_neighbors(m.0jmpt,visual_art.visual_art_support.artworks)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bvdlg_",
          "entity_name": "Flowering Peach Trees"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1ylhldg6s",
          "entity_name": "The Bathers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02z97km",
          "entity_name": "Music in the Tuileries"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075vb_b",
          "entity_name": "Train Tracks at the Saint-Lazare Station"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0btycrz",
          "entity_name": "The Floor Scrapers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0czqrv",
          "entity_name": "Dora Maar au Chat"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c1gw6f",
          "entity_name": "The Pink Peach Tree"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0glx3bd",
          "entity_name": "Blossoming Pear Tree"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gycf9m",
          "entity_name": "Woman Walking Under the Trees (L'Oliver)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gzrt29",
          "entity_name": "The Bathers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.043zkzc",
          "entity_name": "Las Meninas (after Velázquez)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09s423j",
          "entity_name": "The Sick-ward of the Hospital at Arles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g4sfsd",
          "entity_name": "Le Pont Neuf"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0449l3r",
          "entity_name": "Bather Seated in a Landscape"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07l9jn6",
          "entity_name": "L'Arlésienne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gv9r7",
          "entity_name": "The Card Players"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bmd5nh",
          "entity_name": "The Races at Longchamp"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bnqjhn",
          "entity_name": "View across the Bay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.060gt8v",
          "entity_name": "The Rue Mosnier with Flags"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9_vc",
          "entity_name": "Stacks of Wheat (Sunset, Snow Effect)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0773srr",
          "entity_name": "Symphony in White, No.1: The White Girl"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hc9py6",
          "entity_name": "Camille Monet (1847–1879) on a Garden Bench"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.120wktcz",
          "entity_name": "Almond Blossoms"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09vb52v",
          "entity_name": "The Houses of Parliament, Sunset"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052k481",
          "entity_name": "Rainy Day, Fifth Avenue"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09s48n4",
          "entity_name": "Lady on a Tram Station"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yyvt4",
          "entity_name": "The Garden at Les Lauves"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9yj8",
          "entity_name": "Café Singer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9yz3",
          "entity_name": "Uncle and Niece (Henri Degas and His Niece Lucie Degas)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.046vv1k",
          "entity_name": "At the Races"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0645tyv",
          "entity_name": "Stage Rehearsal"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g6ytc5",
          "entity_name": "Sur la Plage"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0101hl57",
          "entity_name": "The ship's deck"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025dvlv",
          "entity_name": "London, the Parliament, Effects of Sun in the Fog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075dbn1",
          "entity_name": "Eugène Manet on the Isle of Wight"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075dgdn",
          "entity_name": "Eugène Manet and His Daughter at Bougival"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075dgf2",
          "entity_name": "Eugène Manet and His Daughter in the Garden"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07l9nhj",
          "entity_name": "Pork Butcher's Shop in Arles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.11cfvbmxd",
          "entity_name": "Fruit Bowl, Glass, and Apples"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0101hg7n",
          "entity_name": "Flowers in a Crystal Vase"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0101ht6p",
          "entity_name": "Bunch of asparagus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0105ww1y",
          "entity_name": "Flowers in a Vase"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01066wvm",
          "entity_name": "Still Life with Quinces"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0115nvrj",
          "entity_name": "Crab on its Back"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.011f8c7n",
          "entity_name": "Horse, Pipe, and Red Flower"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9ynp",
          "entity_name": "The Plate of Apples"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qb7s3",
          "entity_name": "Still Life with Apples and Grapes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qbbt_",
          "entity_name": "Still Life with Apples, Pears, Lemons and Grapes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qqw31",
          "entity_name": "Still Life with Apples"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0447zr0",
          "entity_name": "Vase with Three Sunflowers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0449pfq",
          "entity_name": "Still Life with a Bottle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.044dnb2",
          "entity_name": "Vase with Five Sunflowers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b9fkx",
          "entity_name": "Ginger Pot with Pomegranate and Pears"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05sq3lp",
          "entity_name": "Still Life with Fish"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bxzg63",
          "entity_name": "Young Spartans Exercising"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g_f4ty",
          "entity_name": "Skiffs on the Yerres"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l0jw",
          "entity_name": "Water Lilies"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063tq35",
          "entity_name": "Portrait of Armand Roulin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.066mwg1",
          "entity_name": "Laundresses at the Laïta River"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.066mzd_",
          "entity_name": "Paysage"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05fb8zp",
          "entity_name": "Garden at Sainte-Adresse"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.046vtw2",
          "entity_name": "The Boating Party"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09vbb60",
          "entity_name": "Girl in White"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g4t_b7",
          "entity_name": "The Garden of the Tuileries on a Winter Afternoon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07mpgkn",
          "entity_name": "Wheat Fields at Auvers Under Clouded Sky"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0chb3gy",
          "entity_name": "Boy with Skull"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l3dp",
          "entity_name": "Water Lilies"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.121vr3gq",
          "entity_name": "Portrait of Ambroise Vollard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04d01s9",
          "entity_name": "Woman with a Guitar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059h5l7",
          "entity_name": "Girl with a Watering Can"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l45c",
          "entity_name": "Wheatstack (Snow Effect, Overcast day)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qb7t1",
          "entity_name": "The Artist's House at Argenteuil"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025dvkv",
          "entity_name": "Water Lilies"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b7z9h",
          "entity_name": "Water Lilies and Japanese Bridge"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cc6rn1",
          "entity_name": "Wheat Field with Cypresses"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04dmj9n",
          "entity_name": "Violin and Checkerboard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0101hnr3",
          "entity_name": "On the beach"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0105x1s7",
          "entity_name": "Landscape at Beaulieu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05t3cc",
          "entity_name": "Luncheon of the Boating Party"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dd7th",
          "entity_name": "The portrait of Eugène Boch"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05c_js6",
          "entity_name": "The Monet Family in Their Garden at Argenteuil"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063tq2y",
          "entity_name": "Portrait of Armand Roulin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cz2qq",
          "entity_name": "The Lighthouse at Honfleur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01_x23",
          "entity_name": "Impression, Sunrise"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05btcdq",
          "entity_name": "Self-Portrait with a Straw Hat"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1218dxsg",
          "entity_name": "L'Arlésienne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qb0ph",
          "entity_name": "Equestrienne (At the Circus Fernando)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qbc1v",
          "entity_name": "Moulin de la Galette"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0529g10",
          "entity_name": "At the Rat Mort"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064jbky",
          "entity_name": "At the Moulin Rouge, The Dance"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hc9fxq",
          "entity_name": "Haystacks (Effect of Snow and Sun)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gw5k0",
          "entity_name": "The Card Players"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9yqz",
          "entity_name": "Waterloo Bridge, Sunlight Effect"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qb1_h",
          "entity_name": "Fishing in Spring, the Pont de Clichy (Asnires)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0645v0v",
          "entity_name": "Ballet Rehearsal"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0413691",
          "entity_name": "The Railway"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0479_q",
          "entity_name": "The Starry Night"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0_8f2w2",
          "entity_name": "La Parisienne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bvb9js",
          "entity_name": "Mountain Landscape behind the Saint Paul Hospital"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05t31rv",
          "entity_name": "Portrait of Dr. Gachet (Second Version)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.042zkxs",
          "entity_name": "The Road Menders"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b8446",
          "entity_name": "Rouen Cathedral, West Facade, Sunlight"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075dgtn",
          "entity_name": "Julie Manet et son Lévrier Laerte"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0773wj5",
          "entity_name": "Molesey Weir – Morning"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05zjn50",
          "entity_name": "Vision After the Sermon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045bc5_",
          "entity_name": "Maison Maria with a View of Château-Noir"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06_v97l",
          "entity_name": "Pont Boieldieu in Rouen, Rainy Weather"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gybwhz",
          "entity_name": "Mademoiselle Ravoux"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04d7_sm",
          "entity_name": "L'Allee des Alyscamps"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l43m",
          "entity_name": "Grainstacks, White Frost Effect"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1yg4lyyv6",
          "entity_name": "La gare Saint-Lazare"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cz2zb",
          "entity_name": "Pont Neuf, Paris"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064j5_q",
          "entity_name": "Breton Women in the Meadow"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0d7q0p",
          "entity_name": "The Yellow House"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hc9s95",
          "entity_name": "Poppy Fields near Argenteuil"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0101nwb2",
          "entity_name": "The Seine at Bougival"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l3l5",
          "entity_name": "The Japanese Footbridge and the Water Lily Pool, Giverny"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hc9w4t",
          "entity_name": "Camille Monet (1847–1879) in the Garden at Argenteuil"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04dmh_z",
          "entity_name": "Harlequin with Guitar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qxry_",
          "entity_name": "Tiger in a Tropical Storm"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9_gr",
          "entity_name": "Mother and Child"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063jfqk",
          "entity_name": "The Four Trees"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0kbjd8h",
          "entity_name": "When will you marry?"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063yy9w",
          "entity_name": "The Funeral"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gybw9v",
          "entity_name": "Portrait of Adeline Ravoux"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qbc95",
          "entity_name": "Terrace and Observation Deck at the Moulin de Blute-Fin, Montmartre"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075vcd2",
          "entity_name": "La gare Saint-Lazare, Les signaux"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0288z6c",
          "entity_name": "The Weeping Woman"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063k__q",
          "entity_name": "Water Lilies"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bnqc0x",
          "entity_name": "Le Pont de Maincy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9z78",
          "entity_name": "Branch of the Seine Near Giverny (Mist) from the \"Mornings on the Seine\" series"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l44m",
          "entity_name": "Wheatstacks (End of Day, Autumn)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l0q3",
          "entity_name": "Nympheas"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0101hpk8",
          "entity_name": "The House at Rueil"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kl62g",
          "entity_name": "Wheat Stacks with Reaper"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063j6w7",
          "entity_name": "Noirmoutier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l34t",
          "entity_name": "Water Lilies"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.046vwsp",
          "entity_name": "Idle Hours"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.066mwlg",
          "entity_name": "Two Breton Women under an Apple Tree in Flower"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.11b5v6k4fv",
          "entity_name": "L'Arlésienne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0100dh2v",
          "entity_name": "Women Walking on the Beach"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bvq_p",
          "entity_name": "And They Still Say Fish are Expensive!"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bvqm5",
          "entity_name": "Children on the Seashore"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064jf15",
          "entity_name": "Portrait of Paul Ranson Wearing Nabic Costume"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yytn4",
          "entity_name": "Mont Sainte-Victoire and the Viaduct of the Arc River Valley"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06l_bv",
          "entity_name": "Nude Descending a Staircase, No. 2"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0807ttn",
          "entity_name": "Scène d'été"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0s8xr_p",
          "entity_name": "The Muses"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04mv5fb",
          "entity_name": "Acacias in Spring"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g913m",
          "entity_name": "Les Arènes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svl7",
          "entity_name": "Twilight"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045sbdj",
          "entity_name": "Lady at the Tea Table"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wcwf",
          "entity_name": "La Berceuse (Augustine Roulin)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bdjcd",
          "entity_name": "Portrait of Dr. Gachet (First Version)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0773wn6",
          "entity_name": "Footbridge at Argenteuil"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9_0y",
          "entity_name": "Madame Cézanne in a Yellow Chair"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svkz",
          "entity_name": "The Basin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l319",
          "entity_name": "Water Lily Pond"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l42c",
          "entity_name": "Haystacks: Snow Effects"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0598k3n",
          "entity_name": "Rochefort's Escape"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0598g7f",
          "entity_name": "The Green Wave"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1ym_l12sl",
          "entity_name": "Asparagus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0105wy8x",
          "entity_name": "Chestnut Tree in Bloom"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0105x0c5",
          "entity_name": "Portrait of Mademoiselle Irene Cahen d `Anvers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079rl66",
          "entity_name": "Monet Painting in his Garden at Argenteuil"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g4xgqt",
          "entity_name": "The Quays at Rouen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079rkdy",
          "entity_name": "Houses of Parliament"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0105x47v",
          "entity_name": "Girl Reading"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063khk9",
          "entity_name": "Water Lilies"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0773w2q",
          "entity_name": "Bridge at Villeneuve-la-Garenne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063jfrm",
          "entity_name": "Poplars (Wind effect)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09s42qf",
          "entity_name": "Bedroom in Arles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wcxf",
          "entity_name": "La Berceuse (Augustine Roulin)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gj5qf4",
          "entity_name": "Two Tahitian Women"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l375",
          "entity_name": "The Water Lily Pond"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svkw",
          "entity_name": "Last Light"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01066wb_",
          "entity_name": "The Harvest"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0jwvr2w",
          "entity_name": "In the Conservatory"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svkl",
          "entity_name": "Autumn's Approach"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gzrvsd",
          "entity_name": "The Bathers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.121lswy5",
          "entity_name": "The Cradle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045s7b7",
          "entity_name": "Young Woman Sewing in a Garden"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045tl_t",
          "entity_name": "The Swing"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05hyxb",
          "entity_name": "Bal du moulin de la Galette"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06ffxn",
          "entity_name": "The Church at Auvers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l44w",
          "entity_name": "Grainstack (Sunset)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03wmxb3",
          "entity_name": "Entrance to the Public Gardens in Arles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.010675v2",
          "entity_name": "Road Along the Seine near Asnieres"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0101nttk",
          "entity_name": "Automne, Peupliers, Eragny"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09tz78s",
          "entity_name": "The Mother and Sister of the Artist"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qb0d3",
          "entity_name": "Self-portrait"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0100_wg7",
          "entity_name": "The Saint-Sever Bridge, Rouen: Mist"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gy2rtp",
          "entity_name": "Landscape with Figures"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0514lmq",
          "entity_name": "Bathers at Asnières"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l42m",
          "entity_name": "Haystacks (Midday)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079rj_l",
          "entity_name": "The Railroad Bridge Viewed from the Port"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svl4",
          "entity_name": "Bluff's Ridge"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hgz196",
          "entity_name": "\"Les Vessenots\" in Auvers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wfks",
          "entity_name": "Portrait of Camille Roulin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hc9wdz",
          "entity_name": "Morning on the Seine near Giverny"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bvbh4q",
          "entity_name": "The Agony in the Garden"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075vbvt",
          "entity_name": "Gare Saint-Lazare, the Western Region Goods Sheds"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cz2q1",
          "entity_name": "Woman with a Parasol - Madame Monet and Her Son"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0635yq9",
          "entity_name": "Mont Sainte-Victoire and Chateau Noir"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0120x0m4",
          "entity_name": "Berthe Morisot with a Bouquet of Violets"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065ww11",
          "entity_name": "The Bridge over the Allier at Pont-du-Chateau in Winter"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065wy1d",
          "entity_name": "Tugboats to Rouen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yytpq",
          "entity_name": "Montagne Sainte-Victoire"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l423",
          "entity_name": "Haystacks at the End of Summer, Morning Effect"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0rysyb4",
          "entity_name": "The Sea at Les Saintes-Maries-de-la-Mer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l42w",
          "entity_name": "Wheatstack"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064j1vl",
          "entity_name": "Bretons in the Forest of Huelgoat"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063j2n9",
          "entity_name": "Portrait of the Postman Joseph Roulin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09tzb_0",
          "entity_name": "Grain Field"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qb6xk",
          "entity_name": "Houses of Parliament, London"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.121764px",
          "entity_name": "Rouen Cathedral, Full Sunlight"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063ffxg",
          "entity_name": "The Croquet Game"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063pwlk",
          "entity_name": "Grainstack at Giverny"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064j1rr",
          "entity_name": "Landscape at Le Pouldu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0100qk67",
          "entity_name": "Snow At Argenteuil"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0ddbl5r",
          "entity_name": "A Meadow in the Mountains: Le Mas de Saint-Paul"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9zyt",
          "entity_name": "Water Lily Pond"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04w138",
          "entity_name": "Cafe Terrace at Night"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gy6t7f",
          "entity_name": "View of the Domaine Saint-Joseph"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kl64y",
          "entity_name": "Vineyards with a View of Auvers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hc9x6h",
          "entity_name": "The Bodmer Oak, Fontainebleau Forest"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.066mzdm",
          "entity_name": "La Grammaire"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0105x3j1",
          "entity_name": "Fog on Guernsey"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064j1lj",
          "entity_name": "Girl from Savoy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.120jw__9",
          "entity_name": "Soap Bubbles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bvhpf",
          "entity_name": "Self Portrait with Skull-Cap"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.011f5hz8",
          "entity_name": "test 2"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g4xhlj",
          "entity_name": "The Little Country Maid"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05zj4l",
          "entity_name": "Les Demoiselles d'Avignon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l13l",
          "entity_name": "Three Trees in Grey Weather"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gw8z82",
          "entity_name": "Le Moulin de la Galette"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059h4sq",
          "entity_name": "Sunset at Sea"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gyc6f8",
          "entity_name": "The Dance Hall in Arles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0_g8g96",
          "entity_name": "La Grenouillère"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0101nvnr",
          "entity_name": "Sunset at Eragny"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079rk47",
          "entity_name": "La Pointe de la Hève at Low Tide"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9zqz",
          "entity_name": "On a Balcony"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064j1gs",
          "entity_name": "Farmhouse at Le Pouldu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079rkz6",
          "entity_name": "Parliament, Effect of Fog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.121_bx11",
          "entity_name": "Le Déjeuner sur l'Herbe"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g3vhw",
          "entity_name": "The Three Dancers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075w3rc",
          "entity_name": "The Red Roofs, a Corner of a Village, winter effect"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yyf48",
          "entity_name": "Portrait of Mlle Yvonne Landsberg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0101hhjt",
          "entity_name": "Claude Monet in his Floating Studio"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075vbf7",
          "entity_name": "Gare Saint-Lazare: Arrival of a Train"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0598kfc",
          "entity_name": "Boating"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.046vtvq",
          "entity_name": "The Cup of Tea"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07l9nbk",
          "entity_name": "Spring in Arles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yyv84",
          "entity_name": "Mont Sainte-Victoire Seen from the Bibemus Quarry"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yyv7z",
          "entity_name": "Mont Sainte-Victoire Seen from Les Lauves"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03wbnny",
          "entity_name": "The Large Bathers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l43c",
          "entity_name": "Wheatstack (Thaw, Sunset)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064jd5h",
          "entity_name": "Vines"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gz60h2",
          "entity_name": "Mountains at Saint-Remy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gwbbq",
          "entity_name": "The Card Players"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07622gx",
          "entity_name": "Rue Montargueil with Flags"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g4xjy0",
          "entity_name": "White Frost"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qb2mw",
          "entity_name": "Arrival of the Normandy Train, Gare Saint-Lazare"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g_4pzl",
          "entity_name": "Bather and the Rocks"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0449pg2",
          "entity_name": "View of Château-Noir"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09tz79w",
          "entity_name": "In the Dining Room"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gw29d",
          "entity_name": "The Card Players"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064jd53",
          "entity_name": "Digitales"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gvnfc",
          "entity_name": "The Card Players (5th version)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l43w",
          "entity_name": "Wheatstack (Sun in the Mist)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03nvlqz",
          "entity_name": "Mont Sainte-Victoire seen from Bellevue"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l44c",
          "entity_name": "Grainstacks, Snow Effect"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0q3zm38",
          "entity_name": "L'Oiseau bleu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0105x55t",
          "entity_name": "Woman with a Parasol in a Garden"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gw907v",
          "entity_name": "Le Moulin de la Galette"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9yd1",
          "entity_name": "The Bedroom"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bvb8x0",
          "entity_name": "Landscape from Pont-Aven, Brittany"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025dvd7",
          "entity_name": "Portrait of Picasso"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qb804",
          "entity_name": "Rabbit Warren at Pontoise, Snow"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l433",
          "entity_name": "Grainstack in Sunshine"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gkrsx",
          "entity_name": "The Painter of Sunflowers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kl9py",
          "entity_name": "Self-Portrait with Hat"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059h4sm",
          "entity_name": "The Canoeist's Luncheon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063ffm0",
          "entity_name": "The Funeral"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bwh71z",
          "entity_name": "Nude, Green Leaves and Bust"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02vyvyc",
          "entity_name": "Paris Street; Rainy Day"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05nbspq",
          "entity_name": "Oarsmen Rowing on the Yerres"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.062s1p9",
          "entity_name": "Gondola in Venice"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gyc83g",
          "entity_name": "Couple Walking in the Trees"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b6z0dn",
          "entity_name": "Rose Trellises in Giverny"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05ch12t",
          "entity_name": "Farmhouse in Provence"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09tzhb8",
          "entity_name": "Chasing Butterflies"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0598kd_",
          "entity_name": "Plum Brandy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wdlm",
          "entity_name": "Portrait of Madame Augustine Roulin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045t3vx",
          "entity_name": "Flood at Port-Marly"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064jdky",
          "entity_name": "Nabis Landscape"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0773wwv",
          "entity_name": "Under the Bridge at Hampton Court"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.12396ws6",
          "entity_name": "Evening, Honfleur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c1r70t",
          "entity_name": "Portrait of Ambroise Vollard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g4tzv4",
          "entity_name": "The Garden of the Tuileries on a Winter Afternoon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0105wzcd",
          "entity_name": "The Skiff"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qbcd4",
          "entity_name": "Day of the God (Mahana no Atua)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052cyqr",
          "entity_name": "The Tuileries Gardens, Afternoon, Sun"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bwgc7q",
          "entity_name": "Self-Portrait with Palette"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0449zrp",
          "entity_name": "The Barefoot Girl"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g4xf_c",
          "entity_name": "The Road to Versailles at Louveciennes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0105x2n_",
          "entity_name": "The Piazza San Marco"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svl1",
          "entity_name": "Grey's Creek"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0598kdt",
          "entity_name": "Portrait of Stéphane Mallarmé"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wcw2",
          "entity_name": "La Berceuse (Augustine Roulin)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09v9x3l",
          "entity_name": "The Fifer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wfbp",
          "entity_name": "Schoolboy (Camille Roulin)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0n5vvp9",
          "entity_name": "The Cafe-Concert"
        }
      ]
    },
    {
      "question": "what parent industry do the auto industry and the industry in which union operates have in common?",
      "qid": "4301917006000_grailqa",
      "source": "grailqa",
      "entities": {
        "union": "m.054w78",
        "auto industry": "m.015smg"
      },
      "s_expression": "(AND business.industry (AND (JOIN (R business.industry.child_industry) (JOIN business.industry.trade_unions m.054w78)) (JOIN (R business.industry.child_industry) m.015smg)))",
      "actions": [
        "get_relations(m.054w78)",
        "get_neighbors(m.054w78,business.trade_union.industry)",
        "get_relations(#0)",
        "get_neighbors(#0,business.industry.child_industry)",
        "get_relations(m.015smg)",
        "get_neighbors(m.015smg,business.industry.child_industry)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0126b6d7",
          "entity_name": "Ballyclare Limited"
        }
      ]
    },
    {
      "question": "ronald bilius weasley destroyed an item belonging to which character with the ability of principles of flight?",
      "qid": "4302209001000_grailqa",
      "source": "grailqa",
      "entities": {
        "ronald bilius weasley": "m.0c8jw",
        "principles of flight": "m.01515d"
      },
      "s_expression": "(AND fictional_universe.fictional_character (AND (JOIN fictional_universe.fictional_character.has_possessed (JOIN fictional_universe.fictional_object.destroyer m.0c8jw)) (JOIN fictional_universe.fictional_character.powers_or_abilities m.01515d)))",
      "actions": [
        "get_relations(m.0c8jw)",
        "get_neighbors(m.0c8jw,fictional_universe.fictional_object_destroyer.fictional_objects_destroyed)",
        "get_relations(#0)",
        "get_neighbors(#0,fictional_universe.fictional_object.owner)",
        "get_relations(m.01515d)",
        "get_neighbors(m.01515d,fictional_universe.character_powers.characters_with_this_ability)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c8lv",
          "entity_name": "Lord Voldemort"
        }
      ]
    },
    {
      "question": "What was the cause of death for the lyricist for \"[Intro]\"?",
      "qid": "WebQTrn-3557_3bfcb2a1e9b7ffe135387fb2276bbc5e_cwq",
      "source": "cwq",
      "entities": {
        "Drug overdose": "m.01tf_6",
        "[intro]": "m.0_jk4hr"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.lyricist.lyrics_written m.0_jk4hr)) (JOIN medicine.disease.parent_disease m.01tf_6))",
      "actions": [
        "get_relations(m.0_jk4hr)",
        "get_neighbors(m.0_jk4hr,music.composition.lyricist)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.01tf_6)",
        "get_neighbors(m.01tf_6,medicine.disease.includes_diseases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02kp1qn",
          "answer_type": "Entity",
          "entity_name": "Heroin overdose"
        }
      ]
    },
    {
      "question": "in the games of the i olympiad and other olympic games in los angeles, california, which olympic event was officially contested?",
      "qid": "4300161009000_grailqa",
      "source": "grailqa",
      "entities": {
        "los angeles, california": "m.030qb3t",
        "games of the i olympiad": "m.0c_tl"
      },
      "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.030qb3t)) (JOIN olympics.olympic_event.olympic_games_contested m.0c_tl)))",
      "actions": [
        "get_relations(m.030qb3t)",
        "get_neighbors(m.030qb3t,olympics.olympic_host_city.olympics_hosted)",
        "get_relations(#0)",
        "get_neighbors(#0,olympics.olympic_games.events)",
        "get_relations(m.0c_tl)",
        "get_neighbors(m.0c_tl,olympics.olympic_games.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gnx9y",
          "entity_name": "Men's 300m Free Rifle, 3 Positions"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2_w",
          "entity_name": "Men's Track cycling, Sprint individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30n",
          "entity_name": "Men's Road cycling, individual road race"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3cl",
          "entity_name": "Men's Shot put"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2pc",
          "entity_name": "Men's Discus throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk29t",
          "entity_name": "Men's Parallel bars"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2cj",
          "entity_name": "Men's Long jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2hl",
          "entity_name": "Men's Athletics, 100m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2lq",
          "entity_name": "Men's Foil individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2mz",
          "entity_name": "Men's Marathon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qm",
          "entity_name": "Men's Athletics, 400m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qs",
          "entity_name": "Men's 100m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2rd",
          "entity_name": "Men's Pole vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2x7",
          "entity_name": "Men's Pommel horse"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2xq",
          "entity_name": "Men's Sabre individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2zl",
          "entity_name": "Men's Horizontal bar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30h",
          "entity_name": "Men's Athletics, 110m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32_",
          "entity_name": "Men's Triple jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32p",
          "entity_name": "Men's High jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39d",
          "entity_name": "Men's Vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3b5",
          "entity_name": "Men's Athletics, 800m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3kp",
          "entity_name": "Men's Rings"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3n5",
          "entity_name": "Men's Athletics, 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07nngyv",
          "entity_name": "Rope climbing"
        }
      ]
    },
    {
      "question": "of tropical cyclones that affected andaman and nicobar islands, which are in the same category with tropical storm ivan?",
      "qid": "4300198009000_grailqa",
      "source": "grailqa",
      "entities": {
        "tropical storm ivan": "m.03tn0n",
        "Andaman and Nicobar Islands": "m.0cvvc"
      },
      "s_expression": "(AND meteorology.tropical_cyclone (AND (JOIN (R meteorology.tropical_cyclone_category.tropical_cyclones) (JOIN (R meteorology.tropical_cyclone.category) m.03tn0n)) (JOIN meteorology.tropical_cyclone.affected_areas m.0cvvc)))",
      "actions": [
        "get_relations(m.03tn0n)",
        "get_neighbors(m.03tn0n,meteorology.tropical_cyclone.category)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
        "get_relations(m.0cvvc)",
        "get_neighbors(m.0cvvc,meteorology.cyclone_affected_area.cyclones)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0y52xn7",
          "entity_name": "Cyclone Phailin"
        }
      ]
    },
    {
      "question": "Of the times the Baltimore Ravens won the Super Bowl, which event ended first?",
      "qid": "WebQTrn-2136_0f56b49cc2257ee6ecffc17f5a53198c_cwq",
      "source": "cwq",
      "entities": {
        "Baltimore Ravens": "m.01ct6",
        "Super Bowl": "m.06x5s"
      },
      "s_expression": "(ARGMIN (AND (JOIN (R sports.sports_team.championships) m.01ct6) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.01ct6)",
        "get_neighbors(m.01ct6,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#0,#1)",
        "get_attributes(#2)",
        "argmin(#2,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.076yq",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXXV"
        }
      ]
    },
    {
      "question": "What was the last championship won by the team owned by James D. Stern?",
      "qid": "WebQTrn-1220_e8b7b55c54a4b3523a2a3036bd255b1a_cwq",
      "source": "cwq",
      "entities": {
        "James D. Stern": "m.0ggb8tz"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.0ggb8tz)) time.event.start_date)",
      "actions": [
        "get_relations(m.0ggb8tz)",
        "get_neighbors(m.0ggb8tz,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04zt01",
          "answer_type": "Entity",
          "entity_name": "1998 NBA Finals"
        }
      ]
    },
    {
      "question": "what kind of content do the producer of weekend edition sunday and wpr produce?",
      "qid": "4300832002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Weekend Edition Sunday": "m.0t4t10s",
        "wpr": "m.01_8ym"
      },
      "s_expression": "(AND broadcast.content (AND (JOIN broadcast.content.producer (JOIN broadcast.producer.produces m.0t4t10s)) (JOIN broadcast.content.producer m.01_8ym)))",
      "actions": [
        "get_relations(m.0t4t10s)",
        "get_neighbors(m.0t4t10s,broadcast.content.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,broadcast.producer.produces)",
        "get_relations(m.01_8ym)",
        "get_neighbors(m.01_8ym,broadcast.producer.produces)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03fx9_c",
          "entity_name": "To the Best of Our Knowledge"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03d7ss0",
          "entity_name": "PRI: Whad'Ya Know? - All the News that Isn't"
        }
      ]
    },
    {
      "question": "Who are the children of Ike and the composer of Sweet Rhode Island Red?",
      "qid": "WebQTest-1655_477d34f3e6ba390fa40e05943f90fa51_cwq",
      "source": "cwq",
      "entities": {
        "ike": "m.0dbzg",
        "Sweet Rhode Island Red": "m.0zl81ml"
      },
      "s_expression": "(AND (JOIN (R people.person.children) (JOIN music.composer.compositions m.0zl81ml)) (JOIN people.person.parents m.0dbzg))",
      "actions": [
        "get_relations(m.0zl81ml)",
        "get_neighbors(m.0zl81ml,music.composition.composer)",
        "get_relations(#0)",
        "get_neighbors(#0,people.person.children)",
        "get_relations(m.0dbzg)",
        "get_neighbors(m.0dbzg,people.person.children)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0ggl36p",
          "answer_type": "Entity",
          "entity_name": "Ronnie Turner"
        },
        {
          "answer_argument": "m.0j5dh53",
          "answer_type": "Entity",
          "entity_name": "Raymond Craig Turner"
        }
      ]
    },
    {
      "question": "what is the total number of infectious diseases that can be transmitted by a white faced monkey?",
      "qid": "4303160013000_grailqa",
      "source": "grailqa",
      "entities": {
        "white faced monkey": "m.02h411"
      },
      "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.02h411)))))",
      "actions": [
        "get_relations(m.02h411)",
        "get_neighbors(m.02h411,medicine.vector_of_disease.disease)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
        "get_relations(#1)",
        "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "30"
        }
      ]
    },
    {
      "question": "what other rocket did the manufacturer of vanguard and titan iiib create?",
      "qid": "4300129002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Vanguard": "m.03l2zj",
        "Titan IIIB": "m.03g6ts"
      },
      "s_expression": "(AND spaceflight.rocket (JOIN spaceflight.rocket.manufacturer (AND (JOIN (R spaceflight.rocket.manufacturer) m.03l2zj) (JOIN spaceflight.rocket_manufacturer.rockets_manufactured m.03g6ts))))",
      "actions": [
        "get_relations(m.03l2zj)",
        "get_neighbors(m.03l2zj,spaceflight.rocket.manufacturer)",
        "get_relations(m.03g6ts)",
        "get_neighbors(m.03g6ts,spaceflight.rocket.manufacturer)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,spaceflight.rocket_manufacturer.rockets_manufactured)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03g3wf",
          "entity_name": "LGM-25C Titan II"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03g8vl",
          "entity_name": "Titan IIIC"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01bbqh",
          "entity_name": "HGM-25A Titan I"
        }
      ]
    },
    {
      "question": "what storage type is supported by sony dsc-p72 and those with color filter array of bayer?",
      "qid": "4302099012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Sony DSC-P72": "m.03q2qsb",
        "bayer": "m.02r8js"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN digicams.camera_storage_type.compatible_cameras m.03q2qsb) (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.color_filter_array_type m.02r8js))))",
      "actions": [
        "get_relations(m.03q2qsb)",
        "get_neighbors(m.03q2qsb,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.02r8js)",
        "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.supported_storage_types)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01730t",
          "entity_name": "Memory Stick"
        }
      ]
    },
    {
      "question": "otcl and o'haskell have how many programming language paradigms?",
      "qid": "3205793015000_grailqa",
      "source": "grailqa",
      "entities": {
        "OTcl": "m.02pp7t7",
        "O'Haskell": "m.03t8dz"
      },
      "s_expression": "(COUNT (AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.02pp7t7) (JOIN computer.programming_language_paradigm.languages m.03t8dz))))",
      "actions": [
        "get_relations(m.02pp7t7)",
        "get_neighbors(m.02pp7t7,computer.programming_language.language_paradigms)",
        "get_relations(m.03t8dz)",
        "get_neighbors(m.03t8dz,computer.programming_language.language_paradigms)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "which martial art has the same category as kuk sool won and has grappling?",
      "qid": "4301064007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Kuk Sool Won": "m.055rn5",
        "Grappling": "m.039cp"
      },
      "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.055rn5)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.039cp)))",
      "actions": [
        "get_relations(m.055rn5)",
        "get_neighbors(m.055rn5,martial_arts.martial_art.category)",
        "get_relations(#0)",
        "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
        "get_relations(m.039cp)",
        "get_neighbors(m.039cp,martial_arts.martial_art_category.martial_arts)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tm7f",
          "entity_name": "Kajukenbo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03bs3p",
          "entity_name": "Sanshou"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.041d65",
          "entity_name": "Vovinam"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07k4r",
          "entity_name": "Tai chi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01vqp5",
          "entity_name": "Systema"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09h901",
          "entity_name": "Shidōkan Karate"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hbj9",
          "entity_name": "Hapkido"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01qcyb",
          "entity_name": "Kalaripayattu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02618d8",
          "entity_name": "Russian All-Round Fighting"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.048yh",
          "entity_name": "Krav Maga"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b65c",
          "entity_name": "Hwa Rang Do"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.061px",
          "entity_name": "Pankration"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06jm_r",
          "entity_name": "Bartitsu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06k44z",
          "entity_name": "Modern Arnis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0n18n",
          "entity_name": "Daitō-ryū Aiki-jūjutsu"
        }
      ]
    },
    {
      "question": "wii ware, which is developed by telltale games, was released where?",
      "qid": "4301141005000_grailqa",
      "source": "grailqa",
      "entities": {
        "wii ware": "m.03hfyj6",
        "Telltale Games": "m.05qshs"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.03hfyj6) (JOIN (R cvg.cvg_developer.game_versions_developed) m.05qshs))))",
      "actions": [
        "get_relations(m.03hfyj6)",
        "get_neighbors(m.03hfyj6,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.05qshs)",
        "get_neighbors(m.05qshs,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.075g54v",
          "entity_name": "Wii/DS NA"
        }
      ]
    },
    {
      "question": "What cancer killed the artist with Burnin' Tour?",
      "qid": "WebQTrn-3531_1bd7e130356a6296e636dd4781948162_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "Burnin' Tour": "m.0fds4p"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.artist.concert_tours m.0fds4p)) (JOIN people.cause_of_death.parent_cause_of_death m.0qcr0))",
      "actions": [
        "get_relations(m.0fds4p)",
        "get_neighbors(m.0fds4p,music.concert_tour.artist)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,people.cause_of_death.includes_causes_of_death)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.046wcr",
          "answer_type": "Entity",
          "entity_name": "Acral lentiginous melanoma"
        },
        {
          "answer_argument": "m.04kndz2",
          "answer_type": "Entity",
          "entity_name": "Metastatic Melanoma"
        }
      ]
    },
    {
      "question": "geert hammink, author of it's just something to have on my resume for when i go back into reality. someday i might have to put down a basketball and have a regular 9-to-5 like everybody else., was known for playing what basketball position?",
      "qid": "4300563013000_grailqa",
      "source": "grailqa",
      "entities": {
        "It's just something to have on my resume for when I go back into reality. Someday I might have to put down a basketball and have a regular 9-to-5 like everybody else.": "m.04g5jj5",
        "Geert Hammink": "m.0dvv54"
      },
      "s_expression": "(AND basketball.basketball_position (AND (JOIN basketball.basketball_position.players (JOIN (R media_common.quotation.author) m.04g5jj5)) (JOIN basketball.basketball_position.players m.0dvv54)))",
      "actions": [
        "get_relations(m.04g5jj5)",
        "get_neighbors(m.04g5jj5,media_common.quotation.author)",
        "get_relations(#0)",
        "get_neighbors(#0,basketball.basketball_player.position_s)",
        "get_relations(m.0dvv54)",
        "get_neighbors(m.0dvv54,basketball.basketball_player.position_s)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02_ssl",
          "entity_name": "Center"
        }
      ]
    },
    {
      "question": "physical media, which is developed by lass, was released where?",
      "qid": "4301141024000_grailqa",
      "source": "grailqa",
      "entities": {
        "Physical media": "m.0663y78",
        "Lass": "m.07ydjg7"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.0663y78) (JOIN (R cvg.cvg_developer.game_versions_developed) m.07ydjg7))))",
      "actions": [
        "get_relations(m.0663y78)",
        "get_neighbors(m.0663y78,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.07ydjg7)",
        "get_neighbors(m.07ydjg7,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_3d",
          "entity_name": "Japan"
        }
      ]
    },
    {
      "question": "how many automotive classes are there for ford falcon (xy) and the fpv f6?",
      "qid": "3206121013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Ford Falcon (XY)": "m.02rstw2",
        "FPV F6": "m.0dr0bd"
      },
      "s_expression": "(COUNT (AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples m.02rstw2) (JOIN automotive.automotive_class.examples m.0dr0bd))))",
      "actions": [
        "get_relations(m.02rstw2)",
        "get_neighbors(m.02rstw2,automotive.model.automotive_class)",
        "get_relations(m.0dr0bd)",
        "get_neighbors(m.0dr0bd,automotive.model.automotive_class)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what is the website that belongs to the category of canvas networks and has a web api of mql?",
      "qid": "4300801004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Canvas Networks": "m.0gj9clv",
        "MQL": "m.02ht17t"
      },
      "s_expression": "(AND internet.website (AND (JOIN (R internet.website_category.sites) (JOIN (R internet.website.category) m.0gj9clv)) (JOIN internet.website.api m.02ht17t)))",
      "actions": [
        "get_relations(m.0gj9clv)",
        "get_neighbors(m.0gj9clv,internet.website.category)",
        "get_relations(#0)",
        "get_neighbors(#0,internet.website_category.sites)",
        "get_relations(m.02ht17t)",
        "get_neighbors(m.02ht17t,internet.api.site)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.021ympy",
          "entity_name": "Freebase"
        }
      ]
    },
    {
      "question": "what is a common russian food dish that contains egg white?",
      "qid": "4301356001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Egg white": "m.01zvtl",
        "Russian food": "m.02z_6v"
      },
      "s_expression": "(AND food.type_of_dish (JOIN food.type_of_dish.dishes (AND (JOIN food.dish.ingredients m.01zvtl) (JOIN (R dining.cuisine.dishes) m.02z_6v))))",
      "actions": [
        "get_relations(m.01zvtl)",
        "get_neighbors(m.01zvtl,food.ingredient.dishes)",
        "get_relations(m.02z_6v)",
        "get_neighbors(m.02z_6v,dining.cuisine.dishes)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,food.dish.type_of_dish1)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "g.11b6r7rvym",
          "entity_name": "Confectionery"
        }
      ]
    },
    {
      "question": "Where does the champion of the 2012 World Series play baseball home games?",
      "qid": "WebQTrn-1326_87afbf2481df60df8476b920f00c4247_cwq",
      "source": "cwq",
      "entities": {
        "2012 World Series": "m.0ds8qct"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.championships m.0ds8qct)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.0ds8qct)",
        "get_neighbors(m.0ds8qct,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.01_gsg",
          "answer_type": "Entity",
          "entity_name": "AT&T Park"
        }
      ]
    },
    {
      "question": "what is the number of infectious diseases that are transmitted by the aedes aegypti?",
      "qid": "4303160004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Aedes aegypti": "m.06y6_w"
      },
      "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.06y6_w)))))",
      "actions": [
        "get_relations(m.06y6_w)",
        "get_neighbors(m.06y6_w,medicine.vector_of_disease.disease)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
        "get_relations(#1)",
        "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "79"
        }
      ]
    },
    {
      "question": "When was the last time the champion of the 2014 Stanley Cup Finals win a playoff series?",
      "qid": "WebQTest-1711_1fd347fd5826d3b5ddf343900f672d16_cwq",
      "source": "cwq",
      "entities": {
        "2014 Stanley Cup Finals": "m.010fdzhp"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.010fdzhp)) time.event.end_date)",
      "actions": [
        "get_relations(m.010fdzhp)",
        "get_neighbors(m.010fdzhp,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.010fdzhp",
          "answer_type": "Entity",
          "entity_name": "2014 Stanley Cup Finals"
        }
      ]
    },
    {
      "question": "in which natural sciences discipline does richard dedekind conduct research?",
      "qid": "4302233005000_grailqa",
      "source": "grailqa",
      "entities": {
        "natural sciences": "m.09pz7",
        "Richard Dedekind": "m.0ccwd"
      },
      "s_expression": "(AND education.field_of_study (AND (JOIN (R education.field_of_study.subdisciplines) m.09pz7) (JOIN (R education.field_of_study.subdiscipline_of) (JOIN (R education.academic.research_areas) m.0ccwd))))",
      "actions": [
        "get_relations(m.09pz7)",
        "get_neighbors(m.09pz7,education.field_of_study.subdisciplines)",
        "get_relations(m.0ccwd)",
        "get_neighbors(m.0ccwd,education.academic.research_areas)",
        "get_relations(#1)",
        "get_neighbors(#1,education.field_of_study.subdiscipline_of)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04rjg",
          "entity_name": "Mathematics"
        }
      ]
    },
    {
      "question": "how many different dog breeds from bosnia and herzegovina have the same temperament as the xoloitzcuintle?",
      "qid": "4303460001000_grailqa",
      "source": "grailqa",
      "entities": {
        "xoloitzcuintle": "m.01k9j2",
        "Bosnia and Herzegovina": "m.0166b"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.0166b)) (JOIN (R biology.animal_breed.temperament) m.01k9j2))))",
      "actions": [
        "get_relations(m.0166b)",
        "get_neighbors(m.0166b,biology.breed_origin.breeds_originating_here)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.01k9j2)",
        "get_neighbors(m.01k9j2,biology.animal_breed.temperament)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "What is the last year in which the Baltimore Ravens won the Superbowl?",
      "qid": "WebQTest-837_cf1f9b4b5505a6adf62a65bbef29170a_cwq",
      "source": "cwq",
      "entities": {
        "Baltimore Ravens": "m.01ct6",
        "Superbowl": "m.06x5s"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) m.01ct6) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.01ct6)",
        "get_neighbors(m.01ct6,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#0,#1)",
        "get_attributes(#2)",
        "argmax(#2,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0642vqv"
        }
      ]
    },
    {
      "question": "which version released in japan supports xbox360?",
      "qid": "4301746000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Japan": "m.03_3d",
        "xbox360": "m.02plp2"
      },
      "s_expression": "(AND cvg.game_version (AND (JOIN (R cvg.computer_game_region.versions_released_in_this_region) m.03_3d) (JOIN (R computer.computer_peripheral.supporting_game_versions) (JOIN (R business.brand.products) m.02plp2))))",
      "actions": [
        "get_relations(m.03_3d)",
        "get_neighbors(m.03_3d,cvg.computer_game_region.versions_released_in_this_region)",
        "get_relations(m.02plp2)",
        "get_neighbors(m.02plp2,business.brand.products)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.computer_peripheral.supporting_game_versions)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cn1dzn",
          "entity_name": "Sonic Free Riders"
        }
      ]
    },
    {
      "question": "what is the camera storage type utilized by konica minolta dimage g600 and the digital camera with iso setting of 64?",
      "qid": "4302372006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Konica Minolta DiMAGE G600": "m.03q2r5h",
        "64": "m.04l497_"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.04l497_)) (JOIN (R digicams.digital_camera.supported_storage_types) m.03q2r5h)))",
      "actions": [
        "get_relations(m.04l497_)",
        "get_neighbors(m.04l497_,digicams.camera_iso.cameras)",
        "get_relations(#0)",
        "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.03q2r5h)",
        "get_neighbors(m.03q2r5h,digicams.digital_camera.supported_storage_types)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tthm",
          "entity_name": "Secure Digital"
        }
      ]
    },
    {
      "question": "what song is the longest track on the beatles' enemy of the enemy?",
      "qid": "4301467003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Enemy of the Enemy": "m.01hqlys"
      },
      "s_expression": "(ARGMAX (AND music.recording (JOIN (R music.release.track) (JOIN (R music.album.releases) m.01hqlys))) music.recording.length)",
      "actions": [
        "get_relations(m.01hqlys)",
        "get_neighbors(m.01hqlys,music.album.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.track)",
        "get_attributes(#1)",
        "argmax(#1,music.recording.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0ptq_5",
          "entity_name": "Enemy of the Enemy"
        }
      ]
    },
    {
      "question": "Government of Baldur von Schirach's birthplace and also the type found in Australia.?",
      "qid": "WebQTrn-3497_3f76d491e90682cc29e3de2546e1f9c5_cwq",
      "source": "cwq",
      "entities": {
        "Australia": "m.0chghy",
        "Baldur von Schirach": "m.0143sn"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0chghy) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.0143sn)))",
      "actions": [
        "get_relations(m.0chghy)",
        "get_neighbors(m.0chghy,location.country.form_of_government)",
        "get_relations(m.0143sn)",
        "get_neighbors(m.0143sn,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "what places made up the western roman empire and locations near Lyon–Saint-Exupéry Airport?",
      "qid": "WebQTrn-1291_954cefa79c7c375f90c888f5eebf1cc9_cwq",
      "source": "cwq",
      "entities": {
        "Western Roman Empire": "m.02jbz2",
        "Lyon–Saint-Exupéry Airport": "m.01nkmw"
      },
      "s_expression": "(AND (JOIN (R location.location.containedby) m.02jbz2) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.01nkmw)))",
      "actions": [
        "get_relations(m.02jbz2)",
        "get_neighbors(m.02jbz2,location.location.containedby)",
        "get_relations(m.01nkmw)",
        "get_neighbors(m.01nkmw,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0852h",
          "answer_type": "Entity",
          "entity_name": "Western Europe"
        }
      ]
    },
    {
      "question": "Team owner Jim Irsay last won which Super Bowl?",
      "qid": "WebQTrn-1771_af2b17d82c312c155dde75a5ce24621d_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "Jim Irsay": "m.0ff334"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.0ff334)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.0ff334)",
        "get_neighbors(m.0ff334,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04k5qm",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLI"
        }
      ]
    },
    {
      "question": "what museums share their type with the loyola university museum of art and kimbell art museum?",
      "qid": "5400031001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Loyola University Museum of Art": "m.03b7cd",
        "Kimbell Art Museum": "m.03f_l8"
      },
      "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.03b7cd) (JOIN architecture.type_of_museum.museums m.03f_l8)))))",
      "actions": [
        "get_relations(m.03b7cd)",
        "get_neighbors(m.03b7cd,architecture.museum.type_of_museum)",
        "get_relations(m.03f_l8)",
        "get_neighbors(m.03f_l8,architecture.museum.type_of_museum)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,architecture.type_of_museum.museums)",
        "get_relations(#3)",
        "get_neighbors(#3,architecture.museum.type_of_museum)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gz",
          "entity_name": "Modern art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c9td2",
          "entity_name": "National museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9jkk",
          "entity_name": "Architecture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgh_k",
          "entity_name": "History museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgjgh",
          "entity_name": "Natural history museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0jvjpx6",
          "entity_name": "Antiquities museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026w5hv",
          "entity_name": "Contemporary art gallery"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pn3n6",
          "entity_name": "Historic house museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0528d17",
          "entity_name": "Photography Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kt8qr",
          "entity_name": "Culture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gt",
          "entity_name": "Archaeology museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059x_pp",
          "entity_name": "Archaeological Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wvyw7",
          "entity_name": "Design museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027v0wz",
          "entity_name": "University museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059vqps",
          "entity_name": "Ancient Art Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9gbh",
          "entity_name": "Jewish museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j58y",
          "entity_name": "Science museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0w_y7rb",
          "entity_name": "Asian art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99t0",
          "entity_name": "Decorative art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0djx8f",
          "entity_name": "Children's museum"
        }
      ]
    },
    {
      "question": "besides classical painting, which visual art form did charles g. shaw make?",
      "qid": "4302283001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Charles G. Shaw": "m.0cj2mx",
        "classical painting": "m.05qdh"
      },
      "s_expression": "(AND visual_art.visual_art_form (JOIN (R visual_art.artwork.art_form) (AND (JOIN visual_art.artwork.artist m.0cj2mx) (JOIN visual_art.artwork.art_form m.05qdh))))",
      "actions": [
        "get_relations(m.0cj2mx)",
        "get_neighbors(m.0cj2mx,visual_art.visual_artist.artworks)",
        "get_relations(m.05qdh)",
        "get_neighbors(m.05qdh,visual_art.visual_art_form.artworks)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,visual_art.artwork.art_form)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02nnps",
          "entity_name": "Relief"
        }
      ]
    },
    {
      "question": "name all the military units that took part in the gettysburg battle and were from the same place as 1st louisiana native guard.",
      "qid": "250000201_graphquestions",
      "source": "graphquestions",
      "entities": {
        "gettysburg battle": "m.01jnm",
        "1st Louisiana Native Guard": "m.0hr6dl9"
      },
      "s_expression": "(AND base.americancivilwar.military_unit (AND (JOIN military.military_unit.place_of_origin (JOIN (R military.military_unit.place_of_origin) m.0hr6dl9)) (JOIN base.americancivilwar.military_unit.conflicts_participated_in m.01jnm)))",
      "actions": [
        "get_relations(m.0hr6dl9)",
        "get_neighbors(m.0hr6dl9,military.military_unit.place_of_origin)",
        "get_relations(#0)",
        "get_neighbors(#0,military.military_unit_place_of_origin.military_units)",
        "get_relations(m.01jnm)",
        "get_neighbors(m.01jnm,base.americancivilwar.battle.military_units_involved_in_this_conflict)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04gjww9",
          "entity_name": "10th Louisiana Infantry"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l684",
          "entity_name": "15th Louisiana Infantry Regiment"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l66_",
          "entity_name": "14th Louisiana Infantry Regiment"
        }
      ]
    },
    {
      "question": "When is the last time the sports team that plays in the stadium Sports Authority Field at Mile High won the Super Bowl?",
      "qid": "WebQTest-969_5ceec784a68a7d54ead4e89ec49aa0e4_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "Sports Authority Field at Mile High": "m.02hxv8"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.02hxv8)) (JOIN time.event.instance_of_recurring_event m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.02hxv8)",
        "get_neighbors(m.02hxv8,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,time.recurring_event.instances)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.076y0",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXXIII"
        }
      ]
    },
    {
      "question": "what track released and written by soktim is the longest?",
      "qid": "4300020004000_grailqa",
      "source": "grailqa",
      "entities": {
        "SOKTIM": "m.012yb94y"
      },
      "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.012yb94y))) music.release_track.length)",
      "actions": [
        "get_relations(m.012yb94y)",
        "get_neighbors(m.012yb94y,music.engineer.tracks_engineered)",
        "get_relations(#0)",
        "get_neighbors(#0,music.recording.tracks)",
        "get_attributes(#1)",
        "argmax(#1,music.release_track.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0130c9mj",
          "entity_name": "Ends"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0130p55q",
          "entity_name": "Ends"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0130p52v",
          "entity_name": "Ends"
        }
      ]
    },
    {
      "question": "what is the number of active websites owned by aberystwyth university?",
      "qid": "3206340013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Active": "m.02hsn4g",
        "Aberystwyth University": "m.01v2xl"
      },
      "s_expression": "(COUNT (AND internet.website (AND (JOIN internet.website.status m.02hsn4g) (JOIN (R internet.website_owner.websites_owned) m.01v2xl))))",
      "actions": [
        "get_relations(m.02hsn4g)",
        "get_neighbors(m.02hsn4g,internet.website_status.sites)",
        "get_relations(m.01v2xl)",
        "get_neighbors(m.01v2xl,internet.website_owner.websites_owned)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "What is the most recent superbowl the Baltimore Ravens won?",
      "qid": "WebQTrn-2136_cf1f9b4b5505a6adf62a65bbef29170a_cwq",
      "source": "cwq",
      "entities": {
        "Baltimore Ravens": "m.01ct6",
        "Superbowl": "m.06x5s"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) m.01ct6) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.01ct6)",
        "get_neighbors(m.01ct6,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#0,#1)",
        "get_attributes(#2)",
        "argmax(#2,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0642vqv",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLVII"
        }
      ]
    },
    {
      "question": "discovery as well as another multi-part musical release labelled jet records were produced by whom?",
      "qid": "4301847000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Discovery": "m.0340nsb",
        "Jet Records": "m.04hynj"
      },
      "s_expression": "(AND music.producer (AND (JOIN (R music.release.producers) (JOIN music.release.label m.04hynj)) (JOIN (R music.release.producers) m.0340nsb)))",
      "actions": [
        "get_relations(m.04hynj)",
        "get_neighbors(m.04hynj,music.record_label.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.producers)",
        "get_relations(m.0340nsb)",
        "get_neighbors(m.0340nsb,music.release.producers)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0473q",
          "entity_name": "Jeff Lynne"
        }
      ]
    },
    {
      "question": "what religion is part of the restoration and has same practices with sunni islam?",
      "qid": "4300140014000_grailqa",
      "source": "grailqa",
      "entities": {
        "The Restoration": "m.0dl7db1",
        "Sunni Islam": "m.078tg"
      },
      "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.078tg)) (JOIN religion.religion.is_part_of m.0dl7db1)))",
      "actions": [
        "get_relations(m.078tg)",
        "get_neighbors(m.078tg,religion.religion.practices)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religious_practice.practice_of)",
        "get_relations(m.0dl7db1)",
        "get_neighbors(m.0dl7db1,religion.religion.includes)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.058x5",
          "entity_name": "Mormonism"
        }
      ]
    },
    {
      "question": "which cheese made from milk of cows has the same texture as affidelice au chablis does?",
      "qid": "4302129008000_grailqa",
      "source": "grailqa",
      "entities": {
        "cows": "m.01xq0k1",
        "Affidelice au Chablis": "m.04p55hr"
      },
      "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.01xq0k1) (JOIN (R food.cheese_texture.cheeses) (JOIN food.cheese_texture.cheeses m.04p55hr))))",
      "actions": [
        "get_relations(m.01xq0k1)",
        "get_neighbors(m.01xq0k1,food.cheese_milk_source.cheeses)",
        "get_relations(m.04p55hr)",
        "get_neighbors(m.04p55hr,food.cheese.texture)",
        "get_relations(#1)",
        "get_neighbors(#1,food.cheese_texture.cheeses)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.016kgn",
          "entity_name": "Halloumi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02h812v",
          "entity_name": "St Pat"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02h8c2n",
          "entity_name": "Blanca Bianca"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.034n3h",
          "entity_name": "Ricotta"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04p560y",
          "entity_name": "Aveyronnais"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04x0pp",
          "entity_name": "Saint-André cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0805x3",
          "entity_name": "Pont-l'Évêque cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09mbl6",
          "entity_name": "Saint-Marcellin"
        }
      ]
    },
    {
      "question": "What kind of cancer did the person who wrote \"Natural Mystic\" die from?",
      "qid": "WebQTrn-3531_81f6beacf579fd75e683b1268abd2520_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "Natural Mystic": "m.0zh1gnt"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.lyricist.lyrics_written m.0zh1gnt)) (JOIN people.cause_of_death.parent_cause_of_death m.0qcr0))",
      "actions": [
        "get_relations(m.0zh1gnt)",
        "get_neighbors(m.0zh1gnt,music.composition.lyricist)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,people.cause_of_death.includes_causes_of_death)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.046wcr",
          "answer_type": "Entity",
          "entity_name": "Acral lentiginous melanoma"
        },
        {
          "answer_argument": "m.04kndz2",
          "answer_type": "Entity",
          "entity_name": "Metastatic Melanoma"
        }
      ]
    },
    {
      "question": "judaism has what number of religious texts of holy week?",
      "qid": "4303883009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Judaism": "m.03_gx",
        "Holy Week": "m.01bhms"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of (JOIN (R time.holiday.featured_in_religions) m.01bhms)) (JOIN (R religion.religion.texts) m.03_gx))))",
      "actions": [
        "get_relations(m.01bhms)",
        "get_neighbors(m.01bhms,time.holiday.featured_in_religions)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religion.texts)",
        "get_relations(m.03_gx)",
        "get_neighbors(m.03_gx,religion.religion.texts)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "which core text of eastern christians do sunday-school practitioners honor?",
      "qid": "4300898009000_grailqa",
      "source": "grailqa",
      "entities": {
        "eastern christians": "m.0blk0",
        "sunday-school": "m.02__63"
      },
      "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.0blk0) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.02__63))))",
      "actions": [
        "get_relations(m.0blk0)",
        "get_neighbors(m.0blk0,religion.religion.texts)",
        "get_relations(m.02__63)",
        "get_neighbors(m.02__63,religion.religious_practice.practice_of)",
        "get_relations(#1)",
        "get_neighbors(#1,religion.religion.texts)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.015j7",
          "entity_name": "The Bible"
        }
      ]
    },
    {
      "question": "what do the breeds of ace the wonder dog and border terrier share in terms of temperament?",
      "qid": "4300459005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Ace the Wonder Dog": "m.02qnlng",
        "Border Terrier": "m.0353h4"
      },
      "s_expression": "(AND biology.breed_temperament (AND (JOIN (R biology.animal_breed.temperament) (JOIN (R biology.pedigreed_animal.breed) m.02qnlng)) (JOIN (R biology.animal_breed.temperament) m.0353h4)))",
      "actions": [
        "get_relations(m.02qnlng)",
        "get_neighbors(m.02qnlng,biology.pedigreed_animal.breed)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.0353h4)",
        "get_neighbors(m.0353h4,biology.animal_breed.temperament)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kqpjd",
          "entity_name": "Obedient"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kqp3l",
          "entity_name": "Alert"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kpkld",
          "entity_name": "Intelligent"
        }
      ]
    },
    {
      "question": "how many religious texts are there that has both lutheran church and church of god texts?",
      "qid": "3206221007000_grailqa",
      "source": "grailqa",
      "entities": {
        "church of god": "m.02q21kx",
        "lutheran church": "m.04pk9"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of m.02q21kx) (JOIN (R religion.religion.texts) m.04pk9))))",
      "actions": [
        "get_relations(m.02q21kx)",
        "get_neighbors(m.02q21kx,religion.religion.texts)",
        "get_relations(m.04pk9)",
        "get_neighbors(m.04pk9,religion.religion.texts)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "Who is known as Facebook's creator and also as a student of Bill Gates?",
      "qid": "WebQTrn-1071_ab73a95a9fdda4b0144e9cc7949e13b1_cwq",
      "source": "cwq",
      "entities": {
        "facebook": "m.0hmyfsv",
        "Bill Gates": "m.017nt"
      },
      "s_expression": "(AND (JOIN (R organization.organization.founders) m.0hmyfsv) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.017nt)))",
      "actions": [
        "get_relations(m.0hmyfsv)",
        "get_neighbors(m.0hmyfsv,organization.organization.founders)",
        "get_relations(m.017nt)",
        "get_neighbors(m.017nt,influence.influence_node.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.086dny",
          "answer_type": "Entity",
          "entity_name": "Mark Zuckerberg"
        }
      ]
    },
    {
      "question": "where did the florida marlins and location where a footbal player in a Quarterback position was born?",
      "qid": "WebQTrn-3221_bde2399cf93e02fd80aebf3094be5ea3_cwq",
      "source": "cwq",
      "entities": {
        "florida marlins": "m.02__x",
        "Quarterback": "m.06b1q"
      },
      "s_expression": "(AND (JOIN (R sports.sports_team.location) m.02__x) (JOIN location.location.people_born_here (JOIN american_football.football_player.position_s m.06b1q)))",
      "actions": [
        "get_relations(m.02__x)",
        "get_neighbors(m.02__x,sports.sports_team.location)",
        "get_relations(m.06b1q)",
        "get_neighbors(m.06b1q,american_football.football_position.players)",
        "get_relations(#1)",
        "get_neighbors(#1,people.person.place_of_birth)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0f2v0",
          "answer_type": "Entity",
          "entity_name": "Miami"
        }
      ]
    },
    {
      "question": "what is total amount of spacecraft's that agency and finmeccanica manufacture?",
      "qid": "3201449016000_grailqa",
      "source": "grailqa",
      "entities": {
        "agency": "m.02t63",
        "Finmeccanica": "m.02r3h1"
      },
      "s_expression": "(COUNT (AND spaceflight.spacecraft (AND (JOIN spaceflight.spacecraft.manufacturer m.02t63) (JOIN spaceflight.spacecraft.manufacturer m.02r3h1))))",
      "actions": [
        "get_relations(m.02t63)",
        "get_neighbors(m.02t63,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "get_relations(m.02r3h1)",
        "get_neighbors(m.02r3h1,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "where is the version developed by namco bandai games and distributed through physical media released?",
      "qid": "4301141026000_grailqa",
      "source": "grailqa",
      "entities": {
        "Physical media": "m.0663y78",
        "namco bandai games": "m.02pfymy"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.0663y78) (JOIN (R cvg.cvg_developer.game_versions_developed) m.02pfymy))))",
      "actions": [
        "get_relations(m.0663y78)",
        "get_neighbors(m.0663y78,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.02pfymy)",
        "get_neighbors(m.02pfymy,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.075g54v",
          "entity_name": "Wii/DS NA"
        }
      ]
    },
    {
      "question": "what website has a web api of audioscrobbler and belongs to the category of myfreeimplants?",
      "qid": "4300801006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Myfreeimplants": "m.026d9d_",
        "Audioscrobbler": "m.02kl8st"
      },
      "s_expression": "(AND internet.website (AND (JOIN (R internet.website_category.sites) (JOIN (R internet.website.category) m.026d9d_)) (JOIN internet.website.api m.02kl8st)))",
      "actions": [
        "get_relations(m.026d9d_)",
        "get_neighbors(m.026d9d_,internet.website.category)",
        "get_relations(#0)",
        "get_neighbors(#0,internet.website_category.sites)",
        "get_relations(m.02kl8st)",
        "get_neighbors(m.02kl8st,internet.api.site)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cqpw",
          "entity_name": "Jamendo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02whbn",
          "entity_name": "Last.fm"
        }
      ]
    },
    {
      "question": "the subject of the quote, \"be ready always to give an answer to every man that asketh you a reason of the hope that is in you. -- peter 3:15 \" spoken by the angel of remembrance, is what?",
      "qid": "4300443012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Be ready always to give an answer to every man that asketh you a reason of the hope that is in you. -- Peter 3:15": "m.048fjp5",
        "Angel of Remembrance": "m.0h3grm9"
      },
      "s_expression": "(AND media_common.quotation_subject (AND (JOIN (R media_common.quotation.subjects) (JOIN media_common.quotation.spoken_by_character m.0h3grm9)) (JOIN (R media_common.quotation.subjects) m.048fjp5)))",
      "actions": [
        "get_relations(m.0h3grm9)",
        "get_neighbors(m.0h3grm9,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.subjects)",
        "get_relations(m.048fjp5)",
        "get_neighbors(m.048fjp5,media_common.quotation.subjects)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02zq2",
          "entity_name": "Faith"
        }
      ]
    },
    {
      "question": "Which Superbowl was won by the 2001 AFC champions?",
      "qid": "WebQTest-837_8c90d5499a627a3478313407b1404ecf_cwq",
      "source": "cwq",
      "entities": {
        "Superbowl": "m.06x5s",
        "2001 afc champions": "m.0_gt_qt"
      },
      "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.0_gt_qt)) (JOIN sports.sports_championship_event.championship m.06x5s))",
      "actions": [
        "get_relations(m.0_gt_qt)",
        "get_neighbors(m.0_gt_qt,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0642vqv"
        },
        {
          "answer_argument": "m.076yq"
        }
      ]
    },
    {
      "question": "what is the religion that is part of the restoration and has the same practices as sunni islam?",
      "qid": "4300140003000_grailqa",
      "source": "grailqa",
      "entities": {
        "The Restoration": "m.0dl7db1",
        "Sunni Islam": "m.078tg"
      },
      "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.078tg)) (JOIN religion.religion.is_part_of m.0dl7db1)))",
      "actions": [
        "get_relations(m.078tg)",
        "get_neighbors(m.078tg,religion.religion.practices)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religious_practice.practice_of)",
        "get_relations(m.0dl7db1)",
        "get_neighbors(m.0dl7db1,religion.religion.includes)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.058x5",
          "entity_name": "Mormonism"
        }
      ]
    },
    {
      "question": "what is the name of the religion that is part of abrahamic faiths and has same practices with protestantism?",
      "qid": "4300140008000_grailqa",
      "source": "grailqa",
      "entities": {
        "abrahamic faiths": "m.0f_h6",
        "Protestantism": "m.05sfs"
      },
      "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.05sfs)) (JOIN religion.religion.is_part_of m.0f_h6)))",
      "actions": [
        "get_relations(m.05sfs)",
        "get_neighbors(m.05sfs,religion.religion.practices)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religious_practice.practice_of)",
        "get_relations(m.0f_h6)",
        "get_neighbors(m.0f_h6,religion.religion.includes)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01lp8",
          "entity_name": "Christianity"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_gx",
          "entity_name": "Judaism"
        }
      ]
    },
    {
      "question": "what quintet is the most recently performed?",
      "qid": "4303240006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Quintet": "m.02k7q_"
      },
      "s_expression": "(ARGMAX (AND music.composition (JOIN music.composition.form (JOIN music.compositional_form.superforms m.02k7q_))) music.composition.date_of_first_performance)",
      "actions": [
        "get_relations(m.02k7q_)",
        "get_neighbors(m.02k7q_,music.compositional_form.subforms)",
        "get_relations(#0)",
        "get_neighbors(#0,music.compositional_form.compositions)",
        "get_attributes(#1)",
        "argmax(#1,music.composition.date_of_first_performance)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pwy3z",
          "entity_name": "Piano Quintet No. 2"
        }
      ]
    },
    {
      "question": "how many elements about cinema are made by the producer of npr all things considered?",
      "qid": "4303008008000_grailqa",
      "source": "grailqa",
      "entities": {
        "cinema": "m.02vxn",
        "npr all things considered": "m.01ysm8"
      },
      "s_expression": "(COUNT (AND broadcast.content (AND (JOIN (R broadcast.genre.content) m.02vxn) (JOIN (R broadcast.producer.produces) (JOIN broadcast.producer.produces m.01ysm8)))))",
      "actions": [
        "get_relations(m.02vxn)",
        "get_neighbors(m.02vxn,broadcast.genre.content)",
        "get_relations(m.01ysm8)",
        "get_neighbors(m.01ysm8,broadcast.content.producer)",
        "get_relations(#1)",
        "get_neighbors(#1,broadcast.producer.produces)",
        "intersection(#0,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "5"
        }
      ]
    },
    {
      "question": "what artwork on wood was created in the era of giuseppe melani?",
      "qid": "4301655001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Giuseppe Melani": "m.02qkcct",
        "Wood": "m.083vt"
      },
      "s_expression": "(AND visual_art.artwork (AND (JOIN visual_art.artwork.period_or_movement (JOIN visual_art.art_period_movement.associated_artists m.02qkcct)) (JOIN visual_art.artwork.support m.083vt)))",
      "actions": [
        "get_relations(m.02qkcct)",
        "get_neighbors(m.02qkcct,visual_art.visual_artist.associated_periods_or_movements)",
        "get_relations(#0)",
        "get_neighbors(#0,visual_art.art_period_movement.associated_artworks)",
        "get_relations(m.083vt)",
        "get_neighbors(m.083vt,visual_art.visual_art_support.artworks)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bfng5d",
          "entity_name": "The Flayed Ox"
        }
      ]
    },
    {
      "question": "what type of storage is supported by pentax optio m50 with bayer color filter array?",
      "qid": "4302099008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Pentax Optio M50": "m.03q2lyk",
        "bayer": "m.02r8js"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN digicams.camera_storage_type.compatible_cameras m.03q2lyk) (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.color_filter_array_type m.02r8js))))",
      "actions": [
        "get_relations(m.03q2lyk)",
        "get_neighbors(m.03q2lyk,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.02r8js)",
        "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.supported_storage_types)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tthm",
          "entity_name": "Secure Digital"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0220vm1",
          "entity_name": "SDHC Card"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01z76m",
          "entity_name": "MultiMediaCard"
        }
      ]
    },
    {
      "question": "face the music and jet records were produced by who?",
      "qid": "4301847008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Face the Music": "m.031hssh",
        "Jet Records": "m.04hynj"
      },
      "s_expression": "(AND music.producer (AND (JOIN (R music.release.producers) (JOIN music.release.label m.04hynj)) (JOIN (R music.release.producers) m.031hssh)))",
      "actions": [
        "get_relations(m.04hynj)",
        "get_neighbors(m.04hynj,music.record_label.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.producers)",
        "get_relations(m.031hssh)",
        "get_neighbors(m.031hssh,music.release.producers)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0473q",
          "entity_name": "Jeff Lynne"
        }
      ]
    },
    {
      "question": "what is the total number of spacecrafts manufactured by international telephone & telegraph and boeing company?",
      "qid": "3201449013000_grailqa",
      "source": "grailqa",
      "entities": {
        "boeing company": "m.0178g",
        "international telephone & telegraph": "m.0hh4g"
      },
      "s_expression": "(COUNT (AND spaceflight.spacecraft (AND (JOIN spaceflight.spacecraft.manufacturer m.0178g) (JOIN spaceflight.spacecraft.manufacturer m.0hh4g))))",
      "actions": [
        "get_relations(m.0178g)",
        "get_neighbors(m.0178g,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "get_relations(m.0hh4g)",
        "get_neighbors(m.0hh4g,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "which most recently formed cyclone was of the same category as typhoon sanba?",
      "qid": "4303808014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Typhoon Sanba": "m.0n49xww"
      },
      "s_expression": "(ARGMAX (AND meteorology.tropical_cyclone (JOIN meteorology.tropical_cyclone.category (JOIN (R meteorology.tropical_cyclone.category) m.0n49xww))) meteorology.tropical_cyclone.formed)",
      "actions": [
        "get_relations(m.0n49xww)",
        "get_neighbors(m.0n49xww,meteorology.tropical_cyclone.category)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
        "get_attributes(#1)",
        "argmax(#1,meteorology.tropical_cyclone.formed)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0z2p66v",
          "entity_name": "Typhoon Haiyan"
        }
      ]
    },
    {
      "question": "in what countries is the version developed by sonicteam and distributed through sonic cafe released?",
      "qid": "4301141022000_grailqa",
      "source": "grailqa",
      "entities": {
        "Sonic Cafe": "m.0d009p9",
        "sonicteam": "m.06nfl"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.0d009p9) (JOIN (R cvg.cvg_developer.game_versions_developed) m.06nfl))))",
      "actions": [
        "get_relations(m.0d009p9)",
        "get_neighbors(m.0d009p9,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.06nfl)",
        "get_neighbors(m.06nfl,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_3d",
          "entity_name": "Japan"
        }
      ]
    },
    {
      "question": "Where does the team play with the Seattle Seahawks Blitz mascot?",
      "qid": "WebQTest-784_9495f0be10a5bc18b35d47a78603f464_cwq",
      "source": "cwq",
      "entities": {
        "Seattle Seahawks Blitz": "m.067ggw"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.team_mascot m.067ggw)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.067ggw)",
        "get_neighbors(m.067ggw,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.01db_j",
          "answer_type": "Entity",
          "entity_name": "CenturyLink Field"
        }
      ]
    },
    {
      "question": "What is the location where the publisher of the book A Defense of Ardor was born and Euro 2012 was held?",
      "qid": "WebQTrn-1206_1bd3c1ec69ef5e068b5972d4598c2a2c_cwq",
      "source": "cwq",
      "entities": {
        "euro 2012": "m.06t1s0",
        "A Defense of Ardor": "m.04xq3p4"
      },
      "s_expression": "(AND (JOIN (R time.event.locations) m.06t1s0) (JOIN location.location.people_born_here (JOIN book.author.book_editions_published m.04xq3p4)))",
      "actions": [
        "get_relations(m.06t1s0)",
        "get_neighbors(m.06t1s0,time.event.locations)",
        "get_relations(m.04xq3p4)",
        "get_neighbors(m.04xq3p4,book.book_edition.author_editor)",
        "get_relations(#1)",
        "get_neighbors(#1,people.person.place_of_birth)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0d7_n",
          "answer_type": "Entity",
          "entity_name": "Lviv"
        }
      ]
    },
    {
      "question": "what character who has the ability of principles of flight had an item that was eventually destroyed by ron weasley?",
      "qid": "4302209003000_grailqa",
      "source": "grailqa",
      "entities": {
        "ron weasley": "m.0c8jw",
        "principles of flight": "m.01515d"
      },
      "s_expression": "(AND fictional_universe.fictional_character (AND (JOIN fictional_universe.fictional_character.has_possessed (JOIN fictional_universe.fictional_object.destroyer m.0c8jw)) (JOIN fictional_universe.fictional_character.powers_or_abilities m.01515d)))",
      "actions": [
        "get_relations(m.0c8jw)",
        "get_neighbors(m.0c8jw,fictional_universe.fictional_object_destroyer.fictional_objects_destroyed)",
        "get_relations(#0)",
        "get_neighbors(#0,fictional_universe.fictional_object.owner)",
        "get_relations(m.01515d)",
        "get_neighbors(m.01515d,fictional_universe.character_powers.characters_with_this_ability)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c8lv",
          "entity_name": "Lord Voldemort"
        }
      ]
    },
    {
      "question": "what is the programming language influenced by another language developed by lex spoon that was introduced first?",
      "qid": "4303199015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Lex Spoon": "m.05kh70y"
      },
      "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.05kh70y))) computer.programming_language.introduced)",
      "actions": [
        "get_relations(m.05kh70y)",
        "get_neighbors(m.05kh70y,computer.programming_language_developer.programming_languages_developed)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.influenced)",
        "get_attributes(#1)",
        "argmin(#1,computer.programming_language.introduced)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01jt82",
          "entity_name": "F#"
        }
      ]
    },
    {
      "question": "which visual art form is made by andy goldsworthy besides outdoor sculpture?",
      "qid": "4302283008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Andy Goldsworthy": "m.027rbq",
        "outdoor sculpture": "m.06msq"
      },
      "s_expression": "(AND visual_art.visual_art_form (JOIN (R visual_art.artwork.art_form) (AND (JOIN visual_art.artwork.artist m.027rbq) (JOIN visual_art.artwork.art_form m.06msq))))",
      "actions": [
        "get_relations(m.027rbq)",
        "get_neighbors(m.027rbq,visual_art.visual_artist.artworks)",
        "get_relations(m.06msq)",
        "get_neighbors(m.06msq,visual_art.visual_art_form.artworks)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,visual_art.artwork.art_form)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0426yt",
          "entity_name": "Concept art"
        }
      ]
    },
    {
      "question": "what is the musical recording with maximum length that is a track of musical release component released by white album?",
      "qid": "4301467004000_grailqa",
      "source": "grailqa",
      "entities": {
        "white album": "m.01hg4bh"
      },
      "s_expression": "(ARGMAX (AND music.recording (JOIN (R music.release.track) (JOIN (R music.album.releases) m.01hg4bh))) music.recording.length)",
      "actions": [
        "get_relations(m.01hg4bh)",
        "get_neighbors(m.01hg4bh,music.album.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.track)",
        "get_attributes(#1)",
        "argmax(#1,music.recording.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0lgyjk",
          "entity_name": "Revolution 9"
        }
      ]
    },
    {
      "question": "where is the version developed by insomniac games and distributed through physical media released?",
      "qid": "4301141015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Physical media": "m.0663y78",
        "Insomniac Games": "m.033b85"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.0663y78) (JOIN (R cvg.cvg_developer.game_versions_developed) m.033b85))))",
      "actions": [
        "get_relations(m.0663y78)",
        "get_neighbors(m.0663y78,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.033b85)",
        "get_neighbors(m.033b85,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_6lc",
          "entity_name": "PAL region"
        }
      ]
    },
    {
      "question": "What form of government did both Sparta and the country with Anglo Portuguese Forces have?",
      "qid": "WebQTrn-73_b4c60b12ec6afdfbfe919e251ae53d02_cwq",
      "source": "cwq",
      "entities": {
        "Sparta": "m.09472",
        "Anglo Portuguese Forces": "m.0631lxh"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.09472) (JOIN government.form_of_government.countries (JOIN military.military_combatant.belongs_to_combatant_group m.0631lxh)))",
      "actions": [
        "get_relations(m.09472)",
        "get_neighbors(m.09472,location.country.form_of_government)",
        "get_relations(m.0631lxh)",
        "get_neighbors(m.0631lxh,military.military_combatant.includes_allies)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.04szc",
          "answer_type": "Entity",
          "entity_name": "Monarchy"
        }
      ]
    },
    {
      "question": "what dug dosage form exist for drugs formulated from lytta vesicatoria/chimaphila umbellata/echinacea angustifolia/chondrodendron tomentosum root/pulsatilla vulgaris/saw palmetto/claviceps purpurea sclerotium homeopathic preparation and has active ingredient pork brain?",
      "qid": "5400022000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Lytta vesicatoria/Chimaphila umbellata/Echinacea angustifolia/Chondrodendron tomentosum root/Pulsatilla vulgaris/Saw palmetto/Claviceps purpurea sclerotium homeopathic preparation": "m.0jxrph1",
        "Pork brain": "m.0hqvh9m"
      },
      "s_expression": "(AND medicine.drug_dosage_form (AND (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.formulation_of m.0jxrph1)) (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.active_ingredient_moieties m.0hqvh9m))))",
      "actions": [
        "get_relations(m.0jxrph1)",
        "get_neighbors(m.0jxrph1,medicine.drug.marketed_formulations)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.drug_formulation.dosage_form)",
        "get_relations(m.0hqvh9m)",
        "get_neighbors(m.0hqvh9m,medicine.drug_ingredient.active_moiety_of_formulation)",
        "get_relations(#2)",
        "get_neighbors(#2,medicine.drug_formulation.dosage_form)",
        "intersection(#1,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04k94",
          "entity_name": "Liquid"
        }
      ]
    },
    {
      "question": "Who was the person who wrote the lyrics for \"Hot for Teacher\" first album?",
      "qid": "WebQTest-944_f10a2e53ec0fa4e5c8bd46a25c398fa6_cwq",
      "source": "cwq",
      "entities": {
        "Hot for Teacher": "m.08s9j1"
      },
      "s_expression": "(ARGMIN (JOIN (R music.artist.album) (JOIN music.lyricist.lyrics_written m.08s9j1)) music.album.release_date)",
      "actions": [
        "get_relations(m.08s9j1)",
        "get_neighbors(m.08s9j1,music.composition.lyricist)",
        "get_relations(#0)",
        "get_neighbors(#0,music.artist.album)",
        "get_attributes(#1)",
        "argmin(#1,music.album.release_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0vs85p3",
          "answer_type": "Entity",
          "entity_name": "Ain't Talkin' 'Bout Love"
        }
      ]
    },
    {
      "question": "what dug dosage form exist for drugs formulated from bryonia alba root/calcium cation/clematis recta flowering top/graphite/lycopodium clavatum spore/sodium cation homeopathic preparation and has active ingredient cetraria islandica subsp. islandica?\n: liquid",
      "qid": "5400022009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Bryonia alba root/Calcium cation/Clematis recta flowering top/Graphite/Lycopodium clavatum spore/Sodium cation homeopathic preparation": "m.0jxrnwg",
        "Cetraria islandica subsp. islandica": "m.0hqwm_8"
      },
      "s_expression": "(AND medicine.drug_dosage_form (AND (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.formulation_of m.0jxrnwg)) (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.active_ingredient_moieties m.0hqwm_8))))",
      "actions": [
        "get_relations(m.0jxrnwg)",
        "get_neighbors(m.0jxrnwg,medicine.drug.marketed_formulations)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.drug_formulation.dosage_form)",
        "get_relations(m.0hqwm_8)",
        "get_neighbors(m.0hqwm_8,medicine.drug_ingredient.active_moiety_of_formulation)",
        "get_relations(#2)",
        "get_neighbors(#2,medicine.drug_formulation.dosage_form)",
        "intersection(#1,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04k94",
          "entity_name": "Liquid"
        }
      ]
    },
    {
      "question": "of the texts on oriental orthodox, how many are there which are religious texts of good friday (eastern)?",
      "qid": "4303883007000_grailqa",
      "source": "grailqa",
      "entities": {
        "oriental orthodox": "m.05pbd",
        "Good Friday (Eastern)": "m.0k5y336"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of (JOIN (R time.holiday.featured_in_religions) m.0k5y336)) (JOIN (R religion.religion.texts) m.05pbd))))",
      "actions": [
        "get_relations(m.0k5y336)",
        "get_neighbors(m.0k5y336,time.holiday.featured_in_religions)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religion.texts)",
        "get_relations(m.05pbd)",
        "get_neighbors(m.05pbd,religion.religion.texts)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "3"
        }
      ]
    },
    {
      "question": "find which artwork on copper sheet was created in the era of david bailly.",
      "qid": "4301655010000_grailqa",
      "source": "grailqa",
      "entities": {
        "David Bailly": "m.04n6j1p",
        "copper sheet": "m.025rsfk"
      },
      "s_expression": "(AND visual_art.artwork (AND (JOIN visual_art.artwork.period_or_movement (JOIN visual_art.art_period_movement.associated_artists m.04n6j1p)) (JOIN visual_art.artwork.support m.025rsfk)))",
      "actions": [
        "get_relations(m.04n6j1p)",
        "get_neighbors(m.04n6j1p,visual_art.visual_artist.associated_periods_or_movements)",
        "get_relations(#0)",
        "get_neighbors(#0,visual_art.art_period_movement.associated_artworks)",
        "get_relations(m.025rsfk)",
        "get_neighbors(m.025rsfk,visual_art.visual_art_support.artworks)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bhw9m",
          "entity_name": "Bouquet of Flowers in a Vase"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06_k9fy",
          "entity_name": "Allegory of War"
        }
      ]
    },
    {
      "question": "what type of hypertriglyceridemia treatments have b symptoms side effects?",
      "qid": "4301182015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Hypertriglyceridemia": "m.02_sbz",
        "B symptoms": "m.08z394"
      },
      "s_expression": "(AND medicine.medical_treatment (AND (JOIN medicine.medical_treatment.side_effects (JOIN medicine.symptom.parent_symptom m.08z394)) (JOIN medicine.medical_treatment.used_to_treat m.02_sbz)))",
      "actions": [
        "get_relations(m.08z394)",
        "get_neighbors(m.08z394,medicine.symptom.includes_symptoms)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.symptom.side_effect_of)",
        "get_relations(m.02_sbz)",
        "get_neighbors(m.02_sbz,medicine.disease.treatments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02y_rs",
          "entity_name": "Atorvastatin"
        }
      ]
    },
    {
      "question": "how many models of macintosh se computers used motorola 68030 processors?",
      "qid": "3205922010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Macintosh SE": "m.023tnt",
        "Motorola 68030": "m.0538r"
      },
      "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.023tnt) (JOIN computer.computer.processor m.0538r))))",
      "actions": [
        "get_relations(m.023tnt)",
        "get_neighbors(m.023tnt,computer.computer.includes_models)",
        "get_relations(m.0538r)",
        "get_neighbors(m.0538r,computer.computer_processor.used_in_computers)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "of the cheeses source from cows and goat which ones have semi-firm texture?",
      "qid": "4301155009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Goat": "m.03fwl",
        "cows": "m.01xq0k1",
        "semi-firm": "m.02h82t0"
      },
      "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.03fwl) (AND (JOIN food.cheese.source_of_milk m.01xq0k1) (JOIN food.cheese.texture m.02h82t0))))",
      "actions": [
        "get_relations(m.03fwl)",
        "get_neighbors(m.03fwl,food.cheese_milk_source.cheeses)",
        "get_relations(m.01xq0k1)",
        "get_neighbors(m.01xq0k1,food.cheese_milk_source.cheeses)",
        "get_relations(m.02h82t0)",
        "get_neighbors(m.02h82t0,food.cheese_texture.cheeses)",
        "intersection(#1,#2)",
        "intersection(#0,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02h8b9t",
          "entity_name": "Benedictine"
        }
      ]
    },
    {
      "question": "which is the musical recording with maximum length that is a track of musical release component released by suomipoppia 4?",
      "qid": "4301467010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Suomipoppia 4": "m.01gcjq6"
      },
      "s_expression": "(ARGMAX (AND music.recording (JOIN (R music.release.track) (JOIN (R music.album.releases) m.01gcjq6))) music.recording.length)",
      "actions": [
        "get_relations(m.01gcjq6)",
        "get_neighbors(m.01gcjq6,music.album.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.track)",
        "get_attributes(#1)",
        "argmax(#1,music.recording.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.014gcsn",
          "entity_name": "Laulu petetyille"
        }
      ]
    },
    {
      "question": "tell me the subject of the following quote gracefulness is to the body what understanding is to the mind. which was quoted by angel of remembrance",
      "qid": "4300443003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Gracefulness is to the body what understanding is to the mind.": "m.048gk7g",
        "Angel of Remembrance": "m.0h3grm9"
      },
      "s_expression": "(AND media_common.quotation_subject (AND (JOIN (R media_common.quotation.subjects) (JOIN media_common.quotation.spoken_by_character m.0h3grm9)) (JOIN (R media_common.quotation.subjects) m.048gk7g)))",
      "actions": [
        "get_relations(m.0h3grm9)",
        "get_neighbors(m.0h3grm9,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.subjects)",
        "get_relations(m.048gk7g)",
        "get_neighbors(m.048gk7g,media_common.quotation.subjects)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.048kqhn",
          "entity_name": "Grace"
        }
      ]
    },
    {
      "question": "what is the name of the symphonies that was most recently performed?",
      "qid": "4303240001000_grailqa",
      "source": "grailqa",
      "entities": {
        "symphonies": "m.0c0xr"
      },
      "s_expression": "(ARGMAX (AND music.composition (JOIN music.composition.form (JOIN music.compositional_form.superforms m.0c0xr))) music.composition.date_of_first_performance)",
      "actions": [
        "get_relations(m.0c0xr)",
        "get_neighbors(m.0c0xr,music.compositional_form.subforms)",
        "get_relations(#0)",
        "get_neighbors(#0,music.compositional_form.compositions)",
        "get_attributes(#1)",
        "argmax(#1,music.composition.date_of_first_performance)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.065z0wk",
          "entity_name": "Symphony No. 7"
        }
      ]
    },
    {
      "question": "Which founder of Google was influenced by A.R. Rahman?",
      "qid": "WebQTrn-2393_317b5229df19343c80e3582ccafa8e2e_cwq",
      "source": "cwq",
      "entities": {
        "google": "m.0387r",
        "a.r. rahman": "m.01gg59"
      },
      "s_expression": "(AND (JOIN (R law.invention.inventor) m.0387r) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.01gg59)))",
      "actions": [
        "get_relations(m.0387r)",
        "get_neighbors(m.0387r,law.invention.inventor)",
        "get_relations(m.01gg59)",
        "get_neighbors(m.01gg59,influence.influence_node.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0gjpq",
          "answer_type": "Entity",
          "entity_name": "Larry Page"
        }
      ]
    },
    {
      "question": "When was the last the Dallas Cowboys Helmet won the super bowl?",
      "qid": "WebQTrn-387_bdbc185da17de73f091825d3799ef8b1_cwq",
      "source": "cwq",
      "entities": {
        "Dallas Cowboys Helmet": "m.02kzx1t"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (AND (JOIN (R sports.sports_championship_event.champion) common.topic) (JOIN common.topic.image m.02kzx1t))) time.event.end_date)",
      "actions": [
        "get_relations(common.topic)",
        "get_neighbors(common.topic,sports.sports_championship_event.champion)",
        "get_relations(m.02kzx1t)",
        "get_neighbors(m.02kzx1t,common.image.appears_in_topic_gallery)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,sports.sports_team.championships)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.076wz",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXX"
        }
      ]
    },
    {
      "question": "When did a sports team, which played in AT&T Stadium, last win the Superbowl?",
      "qid": "WebQTest-994_88f3f649eed28a53b8a5479dc2c98cb1_cwq",
      "source": "cwq",
      "entities": {
        "superbowl": "m.06x5s",
        "AT&T Stadium": "m.0g9v1q"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.0g9v1q)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.0g9v1q)",
        "get_neighbors(m.0g9v1q,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.076wz",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXX"
        }
      ]
    },
    {
      "question": "which religion is part of christian faith and has same practices with judaism?",
      "qid": "4300140004000_grailqa",
      "source": "grailqa",
      "entities": {
        "christian faith": "m.01lp8",
        "Judaism": "m.03_gx"
      },
      "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.03_gx)) (JOIN religion.religion.is_part_of m.01lp8)))",
      "actions": [
        "get_relations(m.03_gx)",
        "get_neighbors(m.03_gx,religion.religion.practices)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religious_practice.practice_of)",
        "get_relations(m.01lp8)",
        "get_neighbors(m.01lp8,religion.religion.includes)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dtdq",
          "entity_name": "Jehovah's Witnesses"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05sfs",
          "entity_name": "Protestantism"
        }
      ]
    },
    {
      "question": "at university of toronto, what department does alan turing work in?",
      "qid": "4301362007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Alan Turing": "m.0n00",
        "University of Toronto": "m.07wjk"
      },
      "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.0n00)) (JOIN (R education.university.departments) m.07wjk)))",
      "actions": [
        "get_relations(m.0n00)",
        "get_neighbors(m.0n00,education.academic.research_areas)",
        "get_relations(#0)",
        "get_neighbors(#0,education.field_of_study.academic_departments)",
        "get_relations(m.07wjk)",
        "get_neighbors(m.07wjk,education.university.departments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.09v4k6y",
          "entity_name": "University of Toronto Department of Mathematics"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gg7clr",
          "entity_name": "University of Toronto Department of Computer Science"
        }
      ]
    },
    {
      "question": "What is the location of the airline hub where the film \"Bus Stop\" occurs?",
      "qid": "WebQTrn-1650_8212b80a96dbc83e3d417a11fd06ab86_cwq",
      "source": "cwq",
      "entities": {
        "Southwest Airlines": "m.0gztl",
        "Bus Stop": "m.02q6z1"
      },
      "s_expression": "(AND (JOIN (R location.location.nearby_airports) (JOIN film.film_location.featured_in_films m.02q6z1)) (JOIN aviation.airport.focus_city_for m.0gztl))",
      "actions": [
        "get_relations(m.02q6z1)",
        "get_neighbors(m.02q6z1,film.film.featured_film_locations)",
        "get_relations(#0)",
        "get_neighbors(#0,location.location.nearby_airports)",
        "get_relations(m.0gztl)",
        "get_neighbors(m.0gztl,aviation.airline.focus_cities)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0syvm",
          "answer_type": "Entity",
          "entity_name": "Phoenix Sky Harbor International Airport"
        }
      ]
    },
    {
      "question": "what number of temperments do dogo canario and english foxhound breeds have in common?",
      "qid": "3205485015000_grailqa",
      "source": "grailqa",
      "entities": {
        "dogo canario": "m.035w0_",
        "English Foxhound": "m.06w066"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds m.035w0_) (JOIN (R biology.animal_breed.temperament) m.06w066))))",
      "actions": [
        "get_relations(m.035w0_)",
        "get_neighbors(m.035w0_,biology.animal_breed.temperament)",
        "get_relations(m.06w066)",
        "get_neighbors(m.06w066,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "What is the most recent Super Bowl won by the football club that claimed victory in the Super Bowl XXXIX?",
      "qid": "WebQTrn-1930_66a78abdbf51f9348ef71bed2e082832_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "Super Bowl XXXIX": "m.032tkh"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.032tkh)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.032tkh)",
        "get_neighbors(m.032tkh,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.032tkh",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXXIX"
        }
      ]
    },
    {
      "question": "what are quotations from tempus that are addressed the same as go carefully, child of maat, where no mercy can be had, and let your faith lead you on.\"?",
      "qid": "4302343000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Tempus": "m.0bxj80p",
        "Go carefully, child of maat, where no mercy can be had, and let your faith lead you on.\"": "m.0gwhj68"
      },
      "s_expression": "(AND media_common.quotation_addressee (AND (JOIN media_common.quotation_addressee.quotations (JOIN (R fictional_universe.fictional_character.quotations) m.0bxj80p)) (JOIN media_common.quotation_addressee.quotations m.0gwhj68)))",
      "actions": [
        "get_relations(m.0bxj80p)",
        "get_neighbors(m.0bxj80p,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.addressee)",
        "get_relations(m.0gwhj68)",
        "get_neighbors(m.0gwhj68,media_common.quotation.addressee)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cpg05_",
          "entity_name": "Niko"
        }
      ]
    },
    {
      "question": "What country is the home of V Bird airline and speaks german?",
      "qid": "WebQTrn-1784_e0133b074487245b89f042f1b8e39568_cwq",
      "source": "cwq",
      "entities": {
        "German": "m.04306rv",
        "V Bird": "m.05zbq0"
      },
      "s_expression": "(AND (JOIN (R language.human_language.countries_spoken_in) m.04306rv) (JOIN location.location.contains (JOIN aviation.airport.hub_for m.05zbq0)))",
      "actions": [
        "get_relations(m.04306rv)",
        "get_neighbors(m.04306rv,language.human_language.countries_spoken_in)",
        "get_relations(m.05zbq0)",
        "get_neighbors(m.05zbq0,aviation.airline.hubs)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.containedby)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0345h",
          "answer_type": "Entity",
          "entity_name": "Germany"
        }
      ]
    },
    {
      "question": "renault gs in the model of 2014 ford focus is contained in which of the automotive classes?",
      "qid": "4300308003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Renault GS": "m.04mwzjs",
        "2014 Ford Focus": "m.0_v8m4q"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN (R automotive.model.automotive_class) m.04mwzjs) (JOIN automotive.automotive_class.examples (JOIN automotive.model.model_years m.0_v8m4q))))",
      "actions": [
        "get_relations(m.04mwzjs)",
        "get_neighbors(m.04mwzjs,automotive.model.automotive_class)",
        "get_relations(m.0_v8m4q)",
        "get_neighbors(m.0_v8m4q,automotive.model_year.model)",
        "get_relations(#1)",
        "get_neighbors(#1,automotive.model.automotive_class)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.021mp2",
          "entity_name": "Sedan"
        }
      ]
    },
    {
      "question": "what type of dish contains lime leaf and is common in manado cuisine?\nentr√©e",
      "qid": "4301356007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Lime Leaf": "m.0gwrlm9",
        "Manado cuisine": "m.0102k5v9"
      },
      "s_expression": "(AND food.type_of_dish (JOIN food.type_of_dish.dishes (AND (JOIN food.dish.ingredients m.0gwrlm9) (JOIN (R dining.cuisine.dishes) m.0102k5v9))))",
      "actions": [
        "get_relations(m.0gwrlm9)",
        "get_neighbors(m.0gwrlm9,food.ingredient.dishes)",
        "get_relations(m.0102k5v9)",
        "get_neighbors(m.0102k5v9,dining.cuisine.dishes)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,food.dish.type_of_dish1)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0318f4",
          "entity_name": "Main course"
        }
      ]
    },
    {
      "question": "when last did the team won the 1988–89 La Ligachampionship win the champions league?",
      "qid": "WebQTrn-1606_2b69867d20eb04d681ef59d301e784fb_cwq",
      "source": "cwq",
      "entities": {
        "UEFA Champions League Final": "m.05nblxt",
        "1988–89 La Liga": "m.02vq209"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.02vq209)) (JOIN sports.sports_championship_event.championship m.05nblxt)) time.event.end_date)",
      "actions": [
        "get_relations(m.02vq209)",
        "get_neighbors(m.02vq209,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.05nblxt)",
        "get_neighbors(m.05nblxt,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0gytd9j",
          "answer_type": "Entity",
          "entity_name": "2014 UEFA Champions League Final"
        }
      ]
    },
    {
      "question": "what are quotations from tempus that are addressed the same as \"be careful what you pray for.\"?",
      "qid": "4302343005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Tempus": "m.0bxj80p",
        "\"Be careful what you pray for.\"": "m.0ghs0cy"
      },
      "s_expression": "(AND media_common.quotation_addressee (AND (JOIN media_common.quotation_addressee.quotations (JOIN (R fictional_universe.fictional_character.quotations) m.0bxj80p)) (JOIN media_common.quotation_addressee.quotations m.0ghs0cy)))",
      "actions": [
        "get_relations(m.0bxj80p)",
        "get_neighbors(m.0bxj80p,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.addressee)",
        "get_relations(m.0ghs0cy)",
        "get_neighbors(m.0ghs0cy,media_common.quotation.addressee)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cpg05_",
          "entity_name": "Niko"
        }
      ]
    },
    {
      "question": "name all types of museums that are of the same type as vatican museums and royal museum of fine arts antwerp.",
      "qid": "5400031006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Vatican Museums": "m.01hfkb",
        "Royal Museum of Fine Arts Antwerp": "m.0fl75s"
      },
      "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.01hfkb) (JOIN architecture.type_of_museum.museums m.0fl75s)))))",
      "actions": [
        "get_relations(m.01hfkb)",
        "get_neighbors(m.01hfkb,architecture.museum.type_of_museum)",
        "get_relations(m.0fl75s)",
        "get_neighbors(m.0fl75s,architecture.museum.type_of_museum)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,architecture.type_of_museum.museums)",
        "get_relations(#3)",
        "get_neighbors(#3,architecture.museum.type_of_museum)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gz",
          "entity_name": "Modern art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c9td2",
          "entity_name": "National museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9jkk",
          "entity_name": "Architecture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgh_k",
          "entity_name": "History museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgjgh",
          "entity_name": "Natural history museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0jvjpx6",
          "entity_name": "Antiquities museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026w5hv",
          "entity_name": "Contemporary art gallery"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pn3n6",
          "entity_name": "Historic house museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0528d17",
          "entity_name": "Photography Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kt8qr",
          "entity_name": "Culture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gt",
          "entity_name": "Archaeology museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059x_pp",
          "entity_name": "Archaeological Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wvyw7",
          "entity_name": "Design museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027v0wz",
          "entity_name": "University museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059vqps",
          "entity_name": "Ancient Art Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9gbh",
          "entity_name": "Jewish museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j58y",
          "entity_name": "Science museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0w_y7rb",
          "entity_name": "Asian art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99t0",
          "entity_name": "Decorative art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0djx8f",
          "entity_name": "Children's museum"
        }
      ]
    },
    {
      "question": "dsiware, which is developed by nintendo co. ltd., was released where?",
      "qid": "4301141019000_grailqa",
      "source": "grailqa",
      "entities": {
        "DSiWare": "m.04q2vsk",
        "nintendo co. ltd.": "m.059wk"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.04q2vsk) (JOIN (R cvg.cvg_developer.game_versions_developed) m.059wk))))",
      "actions": [
        "get_relations(m.04q2vsk)",
        "get_neighbors(m.04q2vsk,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.059wk)",
        "get_neighbors(m.059wk,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.075g54v",
          "entity_name": "Wii/DS NA"
        }
      ]
    },
    {
      "question": "what content does nikki silva and the producer of weekend edition sunday produce?",
      "qid": "4300832013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Weekend Edition Sunday": "m.0t4t10s",
        "Nikki Silva": "m.03m68xy"
      },
      "s_expression": "(AND broadcast.content (AND (JOIN broadcast.content.producer (JOIN broadcast.producer.produces m.0t4t10s)) (JOIN broadcast.content.producer m.03m68xy)))",
      "actions": [
        "get_relations(m.0t4t10s)",
        "get_neighbors(m.0t4t10s,broadcast.content.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,broadcast.producer.produces)",
        "get_relations(m.03m68xy)",
        "get_neighbors(m.03m68xy,broadcast.producer.produces)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05v8dc3",
          "entity_name": "The Sonic Memorial Project"
        }
      ]
    },
    {
      "question": "The Roger Dean Stadium is located where?",
      "qid": "WebQTrn-2444_caf61694eb0aa691d73505cb284110b5_cwq",
      "source": "cwq",
      "entities": {
        "Roger Dean Stadium": "m.066c2h"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.arena_stadium m.066c2h)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.066c2h)",
        "get_neighbors(m.066c2h,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.06k1v5"
        }
      ]
    },
    {
      "question": "When was the last time the champion of the Superbowl VI win the Superbowl?",
      "qid": "WebQTrn-387_139cc3d497bad703a6253a51b39f0edc_cwq",
      "source": "cwq",
      "entities": {
        "superbowl vi": "m.076n1"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (AND (JOIN (R sports.sports_championship_event.champion) common.topic) (JOIN sports.sports_team.championships m.076n1))) time.event.end_date)",
      "actions": [
        "get_relations(common.topic)",
        "get_neighbors(common.topic,sports.sports_championship_event.champion)",
        "get_relations(m.076n1)",
        "get_neighbors(m.076n1,sports.sports_championship_event.champion)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,sports.sports_team.championships)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.076wz",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXX"
        }
      ]
    },
    {
      "question": "what is the common parent industry of state commercial banks and the industry in which financial sector union of sweden operates?",
      "qid": "4301917002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Financial Sector Union of Sweden": "m.0dl786",
        "State Commercial Banks": "m.03qth0q"
      },
      "s_expression": "(AND business.industry (AND (JOIN (R business.industry.child_industry) (JOIN business.industry.trade_unions m.0dl786)) (JOIN (R business.industry.child_industry) m.03qth0q)))",
      "actions": [
        "get_relations(m.0dl786)",
        "get_neighbors(m.0dl786,business.trade_union.industry)",
        "get_relations(#0)",
        "get_neighbors(#0,business.industry.child_industry)",
        "get_relations(m.03qth0q)",
        "get_neighbors(m.03qth0q,business.industry.child_industry)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qvw4k",
          "entity_name": "State Commercial Banks (commercial banking)"
        }
      ]
    },
    {
      "question": "what is the attitude of the stanley and the komondor?",
      "qid": "4300459003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Stanley": "m.0gv291b",
        "Komondor": "m.04dm6"
      },
      "s_expression": "(AND biology.breed_temperament (AND (JOIN (R biology.animal_breed.temperament) (JOIN (R biology.pedigreed_animal.breed) m.0gv291b)) (JOIN (R biology.animal_breed.temperament) m.04dm6)))",
      "actions": [
        "get_relations(m.0gv291b)",
        "get_neighbors(m.0gv291b,biology.pedigreed_animal.breed)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.04dm6)",
        "get_neighbors(m.04dm6,biology.animal_breed.temperament)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kt3yb",
          "entity_name": "Calm"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kt3z7",
          "entity_name": "Fearless"
        }
      ]
    },
    {
      "question": "identify the tropical cyclones that are in the same category with cyclone hellen and also affected arkansas.",
      "qid": "4300198011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Cyclone Hellen": "m.0102gy7g",
        "Arkansas": "m.0vbk"
      },
      "s_expression": "(AND meteorology.tropical_cyclone (AND (JOIN (R meteorology.tropical_cyclone_category.tropical_cyclones) (JOIN (R meteorology.tropical_cyclone.category) m.0102gy7g)) (JOIN meteorology.tropical_cyclone.affected_areas m.0vbk)))",
      "actions": [
        "get_relations(m.0102gy7g)",
        "get_neighbors(m.0102gy7g,meteorology.tropical_cyclone.category)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
        "get_relations(m.0vbk)",
        "get_neighbors(m.0vbk,meteorology.cyclone_affected_area.cyclones)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04y5svm",
          "entity_name": "Hurricane Gustav"
        }
      ]
    },
    {
      "question": "what automobile class is shared by both the triumph roadster and the model whose predecessor was the mg d-type midget?",
      "qid": "4301079002000_grailqa",
      "source": "grailqa",
      "entities": {
        "MG D-type Midget": "m.0bmg1_",
        "Triumph Roadster": "m.0g2rqf"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples (JOIN (R automotive.model.predecessor) m.0bmg1_)) (JOIN automotive.automotive_class.examples m.0g2rqf)))",
      "actions": [
        "get_relations(m.0bmg1_)",
        "get_neighbors(m.0bmg1_,automotive.model.predecessor)",
        "get_relations(#0)",
        "get_neighbors(#0,automotive.model.automotive_class)",
        "get_relations(m.0g2rqf)",
        "get_neighbors(m.0g2rqf,automotive.model.automotive_class)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.012mq4",
          "entity_name": "Sports car"
        }
      ]
    },
    {
      "question": "What type of political system is used in Central Europe and in England?",
      "qid": "WebQTrn-2257_76a252330256b16c01d97d47ba4bdf95_cwq",
      "source": "cwq",
      "entities": {
        "England": "m.02jx1",
        "Central Europe": "m.01lkr"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.02jx1) (JOIN government.form_of_government.countries (JOIN location.location.containedby m.01lkr)))",
      "actions": [
        "get_relations(m.02jx1)",
        "get_neighbors(m.02jx1,location.country.form_of_government)",
        "get_relations(m.01lkr)",
        "get_neighbors(m.01lkr,location.location.contains)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "list all quotations from askelon of meridian that are addressed to whom \"learn when to fear, and how to fear, and how much to fear, before you squander all you have left.\" was addressed to.",
      "qid": "4302343015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Askelon of Meridian": "m.0bxtt5p",
        "\"Learn when to fear, and how to fear, and how much to fear, before you squander all you have left.\"": "m.0h8b_md"
      },
      "s_expression": "(AND media_common.quotation_addressee (AND (JOIN media_common.quotation_addressee.quotations (JOIN (R fictional_universe.fictional_character.quotations) m.0bxtt5p)) (JOIN media_common.quotation_addressee.quotations m.0h8b_md)))",
      "actions": [
        "get_relations(m.0bxtt5p)",
        "get_neighbors(m.0bxtt5p,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.addressee)",
        "get_relations(m.0h8b_md)",
        "get_neighbors(m.0h8b_md,media_common.quotation.addressee)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c0bpb_",
          "entity_name": "Shamshi, Stepson"
        }
      ]
    },
    {
      "question": "in which formal science discipline does niels henrik abel conduct research?",
      "qid": "4302233008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Formal science": "m.09vvxv",
        "Niels Henrik Abel": "m.05dvl"
      },
      "s_expression": "(AND education.field_of_study (AND (JOIN (R education.field_of_study.subdisciplines) m.09vvxv) (JOIN (R education.field_of_study.subdiscipline_of) (JOIN (R education.academic.research_areas) m.05dvl))))",
      "actions": [
        "get_relations(m.09vvxv)",
        "get_neighbors(m.09vvxv,education.field_of_study.subdisciplines)",
        "get_relations(m.05dvl)",
        "get_neighbors(m.05dvl,education.academic.research_areas)",
        "get_relations(#1)",
        "get_neighbors(#1,education.field_of_study.subdiscipline_of)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04rjg",
          "entity_name": "Mathematics"
        }
      ]
    },
    {
      "question": "what is the musical release produced by the girl next door and labelled original jazz classics?",
      "qid": "4301990015000_grailqa",
      "source": "grailqa",
      "entities": {
        "The Girl Next Door": "m.0prtj_",
        "Original Jazz Classics": "m.06jxs_"
      },
      "s_expression": "(AND music.release (AND (JOIN music.release.producers (JOIN (R music.recording.producer) m.0prtj_)) (JOIN music.release.label m.06jxs_)))",
      "actions": [
        "get_relations(m.0prtj_)",
        "get_neighbors(m.0prtj_,music.recording.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,music.producer.releases_produced)",
        "get_relations(m.06jxs_)",
        "get_neighbors(m.06jxs_,music.record_label.releases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.09s5vvs",
          "entity_name": "Brilliant Corners"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g0tvbs",
          "entity_name": "Thelonious Monk with John Coltrane"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09s5xvt",
          "entity_name": "Thelonious Himself"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09shthw",
          "entity_name": "Misterioso"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09s5x2l",
          "entity_name": "Monk's Music"
        }
      ]
    },
    {
      "question": "The sports team with the fight song The Baltimore Fight Song last won which Superbowl?",
      "qid": "WebQTest-595_d95da5fb8a16d81fe56cd4ce00843254_cwq",
      "source": "cwq",
      "entities": {
        "Superbowl": "m.06x5s",
        "The Baltimore Fight Song": "m.0hn47qp"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.fight_song m.0hn47qp)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.0hn47qp)",
        "get_neighbors(m.0hn47qp,sports.fight_song.sports_team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0642vqv",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLVII"
        }
      ]
    },
    {
      "question": "in the model 2014 ford focus, what are the automotive classes of subaru vivio?",
      "qid": "4300308015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Subaru Vivio": "m.02bs52",
        "2014 Ford Focus": "m.0_v8m4q"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN (R automotive.model.automotive_class) m.02bs52) (JOIN automotive.automotive_class.examples (JOIN automotive.model.model_years m.0_v8m4q))))",
      "actions": [
        "get_relations(m.02bs52)",
        "get_neighbors(m.02bs52,automotive.model.automotive_class)",
        "get_relations(m.0_v8m4q)",
        "get_neighbors(m.0_v8m4q,automotive.model_year.model)",
        "get_relations(#1)",
        "get_neighbors(#1,automotive.model.automotive_class)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01cmcs",
          "entity_name": "Hatchback"
        }
      ]
    },
    {
      "question": "the chrysler valiant and the model with predecesser mkz is included in what class of automobiles?",
      "qid": "4301079015000_grailqa",
      "source": "grailqa",
      "entities": {
        "mkz": "m.0bbfjb",
        "Chrysler Valiant": "m.03jgjh"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples (JOIN (R automotive.model.predecessor) m.0bbfjb)) (JOIN automotive.automotive_class.examples m.03jgjh)))",
      "actions": [
        "get_relations(m.0bbfjb)",
        "get_neighbors(m.0bbfjb,automotive.model.predecessor)",
        "get_relations(#0)",
        "get_neighbors(#0,automotive.model.automotive_class)",
        "get_relations(m.03jgjh)",
        "get_neighbors(m.03jgjh,automotive.model.automotive_class)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.021mp2",
          "entity_name": "Sedan"
        }
      ]
    },
    {
      "question": "name all types of museums that are of the same type as potteries museum & art gallery and rembrandt house museum.",
      "qid": "5400031010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Potteries Museum & Art Gallery": "m.026zdb6",
        "Rembrandt House Museum": "m.05_9vk"
      },
      "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.026zdb6) (JOIN architecture.type_of_museum.museums m.05_9vk)))))",
      "actions": [
        "get_relations(m.026zdb6)",
        "get_neighbors(m.026zdb6,architecture.museum.type_of_museum)",
        "get_relations(m.05_9vk)",
        "get_neighbors(m.05_9vk,architecture.museum.type_of_museum)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,architecture.type_of_museum.museums)",
        "get_relations(#3)",
        "get_neighbors(#3,architecture.museum.type_of_museum)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gz",
          "entity_name": "Modern art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c9td2",
          "entity_name": "National museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9jkk",
          "entity_name": "Architecture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgh_k",
          "entity_name": "History museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgjgh",
          "entity_name": "Natural history museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0jvjpx6",
          "entity_name": "Antiquities museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026w5hv",
          "entity_name": "Contemporary art gallery"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pn3n6",
          "entity_name": "Historic house museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0528d17",
          "entity_name": "Photography Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kt8qr",
          "entity_name": "Culture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gt",
          "entity_name": "Archaeology museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059x_pp",
          "entity_name": "Archaeological Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wvyw7",
          "entity_name": "Design museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027v0wz",
          "entity_name": "University museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059vqps",
          "entity_name": "Ancient Art Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9gbh",
          "entity_name": "Jewish museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j58y",
          "entity_name": "Science museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0w_y7rb",
          "entity_name": "Asian art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99t0",
          "entity_name": "Decorative art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0djx8f",
          "entity_name": "Children's museum"
        }
      ]
    },
    {
      "question": "Where do most of the people who speak Chechen live?",
      "qid": "WebQTest-1735_7cd339eefa681cdb907de4bdf65f8aae_cwq",
      "source": "cwq",
      "entities": {
        "chechen": "m.0198z0"
      },
      "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN location.country.languages_spoken m.0198z0)) topic_server.population_number)",
      "actions": [
        "get_relations(m.0198z0)",
        "get_neighbors(m.0198z0,language.human_language.countries_spoken_in)",
        "get_relations(#0)",
        "get_neighbors(#0,location.location.contains)",
        "get_attributes(#1)",
        "argmax(#1,topic_server.population_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.02wr92",
          "answer_type": "Entity",
          "entity_name": "Central Federal District"
        }
      ]
    },
    {
      "question": "The artist that had the song \"On How to Be Lovely\" died of what type of cancer?",
      "qid": "WebQTrn-1080_b4bcfd457d885b497eaa10fa8e933906_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "On How to Be Lovely": "m.011cxxky"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.featured_artist.recordings m.011cxxky)) (JOIN people.cause_of_death.parent_cause_of_death m.0qcr0))",
      "actions": [
        "get_relations(m.011cxxky)",
        "get_neighbors(m.011cxxky,music.recording.featured_artists)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,people.cause_of_death.includes_causes_of_death)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0fb2z2",
          "answer_type": "Entity",
          "entity_name": "Appendix cancer"
        }
      ]
    },
    {
      "question": "What well known software engineer created Facebook?",
      "qid": "WebQTrn-1071_5088ffe2fd5995ba40ffe2f755a17b72_cwq",
      "source": "cwq",
      "entities": {
        "facebook": "m.0hmyfsv",
        "Software Engineering": "m.06q83"
      },
      "s_expression": "(AND (JOIN (R organization.organization.founders) m.0hmyfsv) (JOIN influence.influence_node.influenced (JOIN people.person.profession m.06q83)))",
      "actions": [
        "get_relations(m.0hmyfsv)",
        "get_neighbors(m.0hmyfsv,organization.organization.founders)",
        "get_relations(m.06q83)",
        "get_neighbors(m.06q83,people.profession.people_with_this_profession)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.086dny",
          "answer_type": "Entity",
          "entity_name": "Mark Zuckerberg"
        }
      ]
    },
    {
      "question": "What area in the country that makes El Gouna Beverage Co. Sakara Gold beer is the most populated?",
      "qid": "WebQTrn-3037_3a8152d581de19d1b839f3822e9392e3_cwq",
      "source": "cwq",
      "entities": {
        "El Gouna Beverage Co. Sakara Gold": "m.04dqh1z"
      },
      "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN food.beer_country_region.beers_from_here m.04dqh1z)) topic_server.population_number)",
      "actions": [
        "get_relations(m.04dqh1z)",
        "get_neighbors(m.04dqh1z,food.beer.from_region)",
        "get_relations(#0)",
        "get_neighbors(#0,location.location.contains)",
        "get_attributes(#1)",
        "argmax(#1,topic_server.population_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.080msrv",
          "answer_type": "Entity",
          "entity_name": "Greater Cairo"
        }
      ]
    },
    {
      "question": "what type of martial art has internal and the same categories as bokator?",
      "qid": "4301064014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Bokator": "m.0fqkc_",
        "Internal": "m.02_yl6z"
      },
      "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.0fqkc_)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.02_yl6z)))",
      "actions": [
        "get_relations(m.0fqkc_)",
        "get_neighbors(m.0fqkc_,martial_arts.martial_art.category)",
        "get_relations(#0)",
        "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
        "get_relations(m.02_yl6z)",
        "get_neighbors(m.02_yl6z,martial_arts.martial_art_category.martial_arts)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07k4r",
          "entity_name": "Tai chi"
        }
      ]
    },
    {
      "question": "Where do most of the people live in the country where Tsakhur is a spoken language?",
      "qid": "WebQTest-1735_f81b2d3ee250e8503f128923a79d3c5a_cwq",
      "source": "cwq",
      "entities": {
        "tsakhur": "m.027bj_4"
      },
      "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN location.country.languages_spoken m.027bj_4)) topic_server.population_number)",
      "actions": [
        "get_relations(m.027bj_4)",
        "get_neighbors(m.027bj_4,language.human_language.countries_spoken_in)",
        "get_relations(#0)",
        "get_neighbors(#0,location.location.contains)",
        "get_attributes(#1)",
        "argmax(#1,topic_server.population_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.02wr92",
          "answer_type": "Entity",
          "entity_name": "Central Federal District"
        }
      ]
    },
    {
      "question": "hailing from the same place as 1st louisiana native guard, which military units took part in the gettysburg battle?",
      "qid": "250000001_graphquestions",
      "source": "graphquestions",
      "entities": {
        "gettysburg battle": "m.01jnm",
        "1st Louisiana Native Guard": "m.0hr6dl9"
      },
      "s_expression": "(AND base.americancivilwar.military_unit (AND (JOIN military.military_unit.place_of_origin (JOIN (R military.military_unit.place_of_origin) m.0hr6dl9)) (JOIN base.americancivilwar.military_unit.conflicts_participated_in m.01jnm)))",
      "actions": [
        "get_relations(m.0hr6dl9)",
        "get_neighbors(m.0hr6dl9,military.military_unit.place_of_origin)",
        "get_relations(#0)",
        "get_neighbors(#0,military.military_unit_place_of_origin.military_units)",
        "get_relations(m.01jnm)",
        "get_neighbors(m.01jnm,base.americancivilwar.battle.military_units_involved_in_this_conflict)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04gjww9",
          "entity_name": "10th Louisiana Infantry"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l684",
          "entity_name": "15th Louisiana Infantry Regiment"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l66_",
          "entity_name": "14th Louisiana Infantry Regiment"
        }
      ]
    },
    {
      "question": "what is the name of the character that has the ability of create objects of all sorts temporarily had an item that was eventually destroyed by tempus?",
      "qid": "4302209009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Tempus": "m.0bxj80p",
        "create objects of all sorts temporarily": "m.0c1qd9d"
      },
      "s_expression": "(AND fictional_universe.fictional_character (AND (JOIN fictional_universe.fictional_character.has_possessed (JOIN fictional_universe.fictional_object.destroyer m.0bxj80p)) (JOIN fictional_universe.fictional_character.powers_or_abilities m.0c1qd9d)))",
      "actions": [
        "get_relations(m.0bxj80p)",
        "get_neighbors(m.0bxj80p,fictional_universe.fictional_object_destroyer.fictional_objects_destroyed)",
        "get_relations(#0)",
        "get_neighbors(#0,fictional_universe.fictional_object.owner)",
        "get_relations(m.0c1qd9d)",
        "get_neighbors(m.0c1qd9d,fictional_universe.character_powers.characters_with_this_ability)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cpg08q",
          "entity_name": "Randal"
        }
      ]
    },
    {
      "question": "Which business person started Pixar?",
      "qid": "WebQTrn-248_5a090791e4c834e9d4ec6877f1b98ef8_cwq",
      "source": "cwq",
      "entities": {
        "Pixar": "m.0kk9v",
        "": "m.012t_z"
      },
      "s_expression": "(AND (JOIN (R organization.organization.founders) m.0kk9v) (JOIN influence.influence_node.influenced (JOIN people.person.profession m.012t_z)))",
      "actions": [
        "get_relations(m.0kk9v)",
        "get_neighbors(m.0kk9v,organization.organization.founders)",
        "get_relations(m.012t_z)",
        "get_neighbors(m.012t_z,people.profession.people_with_this_profession)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.06y3r",
          "answer_type": "Entity",
          "entity_name": "Steve Jobs"
        }
      ]
    },
    {
      "question": "what number of contents about higher education are produced by the producer of to the best of our knowledge?",
      "qid": "4303008013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Higher Education": "m.03bv2kt",
        "To the Best of Our Knowledge": "m.03fx9_c"
      },
      "s_expression": "(COUNT (AND broadcast.content (AND (JOIN (R broadcast.genre.content) m.03bv2kt) (JOIN (R broadcast.producer.produces) (JOIN broadcast.producer.produces m.03fx9_c)))))",
      "actions": [
        "get_relations(m.03bv2kt)",
        "get_neighbors(m.03bv2kt,broadcast.genre.content)",
        "get_relations(m.03fx9_c)",
        "get_neighbors(m.03fx9_c,broadcast.content.producer)",
        "get_relations(#1)",
        "get_neighbors(#1,broadcast.producer.produces)",
        "intersection(#0,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "What German speaking country that has airport that have flights to Nijmegen?",
      "qid": "WebQTest-1117_dfb6c97ac9bf2f0ac07f27dd80f9edc2_cwq",
      "source": "cwq",
      "entities": {
        "German": "m.04306rv",
        "Nijmegen": "m.05g2b"
      },
      "s_expression": "(AND (JOIN (R language.human_language.countries_spoken_in) m.04306rv) (JOIN location.location.contains (JOIN aviation.airport.serves m.05g2b)))",
      "actions": [
        "get_relations(m.04306rv)",
        "get_neighbors(m.04306rv,language.human_language.countries_spoken_in)",
        "get_relations(m.05g2b)",
        "get_neighbors(m.05g2b,location.location.nearby_airports)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.containedby)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0345h",
          "answer_type": "Entity",
          "entity_name": "Germany"
        }
      ]
    },
    {
      "question": "When did sports team owner Frank McCourt's team last win the Championship?",
      "qid": "WebQTest-1936_e02e76134732e285f2d7641ac41d5a3f_cwq",
      "source": "cwq",
      "entities": {
        "Frank McCourt": "m.05w2rj"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.05w2rj)) time.event.end_date)",
      "actions": [
        "get_relations(m.05w2rj)",
        "get_neighbors(m.05w2rj,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04j7ml",
          "answer_type": "Entity",
          "entity_name": "1988 World Series"
        }
      ]
    },
    {
      "question": "what content does san francisco symphony orchestra and the producer of the splendid table produce?",
      "qid": "4300832000000_grailqa",
      "source": "grailqa",
      "entities": {
        "The Splendid Table": "m.03ctllj",
        "san francisco symphony orchestra": "m.0130g4"
      },
      "s_expression": "(AND broadcast.content (AND (JOIN broadcast.content.producer (JOIN broadcast.producer.produces m.03ctllj)) (JOIN broadcast.content.producer m.0130g4)))",
      "actions": [
        "get_relations(m.03ctllj)",
        "get_neighbors(m.03ctllj,broadcast.content.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,broadcast.producer.produces)",
        "get_relations(m.0130g4)",
        "get_neighbors(m.0130g4,broadcast.producer.produces)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05v8qxc",
          "entity_name": "The MTT Files"
        }
      ]
    },
    {
      "question": "paolo ciuccarelli conducts research in which computer science discipline?",
      "qid": "4302233014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Computer Science": "m.01mkq",
        "Paolo Ciuccarelli": "m.0g4vz73"
      },
      "s_expression": "(AND education.field_of_study (AND (JOIN (R education.field_of_study.subdisciplines) m.01mkq) (JOIN (R education.field_of_study.subdiscipline_of) (JOIN (R education.academic.research_areas) m.0g4vz73))))",
      "actions": [
        "get_relations(m.01mkq)",
        "get_neighbors(m.01mkq,education.field_of_study.subdisciplines)",
        "get_relations(m.0g4vz73)",
        "get_neighbors(m.0g4vz73,education.academic.research_areas)",
        "get_relations(#1)",
        "get_neighbors(#1,education.field_of_study.subdiscipline_of)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.019ds_",
          "entity_name": "Information architecture"
        }
      ]
    },
    {
      "question": "What time zone is shared by Pennsylvania and the area near the Venice Municipal Airport?",
      "qid": "WebQTest-1176_623b8370871966e2e8aeb301482e1558_cwq",
      "source": "cwq",
      "entities": {
        "Pennsylvania": "m.05tbn",
        "Venice Municipal Airport": "m.026w2y7"
      },
      "s_expression": "(AND (JOIN (R location.location.time_zones) m.05tbn) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.026w2y7)))",
      "actions": [
        "get_relations(m.05tbn)",
        "get_neighbors(m.05tbn,location.location.time_zones)",
        "get_relations(m.026w2y7)",
        "get_neighbors(m.026w2y7,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02hcv8",
          "answer_type": "Entity",
          "entity_name": "Eastern Time Zone"
        }
      ]
    },
    {
      "question": "What book on evolution did Charles Darwin wrote that is in the genre of Biography?",
      "qid": "WebQTrn-2225_48006ffcc458af664781bb4ed6bea1c3_cwq",
      "source": "cwq",
      "entities": {
        "Charles Darwin": "m.01lwx",
        "evolution": "m.02j8z",
        "Biography": "m.017fp"
      },
      "s_expression": "(AND book.book (AND (JOIN (R book.author.works_written) m.01lwx) (AND (JOIN book.written_work.subjects m.02j8z) (JOIN book.book.genre m.017fp))))",
      "actions": [
        "get_relations(m.01lwx)",
        "get_neighbors(m.01lwx,book.author.works_written)",
        "get_relations(m.02j8z)",
        "get_neighbors(m.02j8z,book.book_subject.works)",
        "get_relations(m.017fp)",
        "get_neighbors(m.017fp,media_common.literary_genre.books_in_this_genre)",
        "intersection(#1,#2)",
        "intersection(#0,#3)"
      ],
      "answer": [
        {
          "answer_argument": "m.01qq45",
          "answer_type": "Entity",
          "entity_name": "The Voyage of the Beagle"
        },
        {
          "answer_argument": "m.05nhwt",
          "answer_type": "Entity",
          "entity_name": "The Autobiography of Charles Darwin"
        }
      ]
    },
    {
      "question": "how many texts in eastern christians have religious texts of guy fawkes' day?",
      "qid": "4303883013000_grailqa",
      "source": "grailqa",
      "entities": {
        "eastern christians": "m.0blk0",
        "guy fawkes' day": "m.03w6ms"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of (JOIN (R time.holiday.featured_in_religions) m.03w6ms)) (JOIN (R religion.religion.texts) m.0blk0))))",
      "actions": [
        "get_relations(m.03w6ms)",
        "get_neighbors(m.03w6ms,time.holiday.featured_in_religions)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religion.texts)",
        "get_relations(m.0blk0)",
        "get_neighbors(m.0blk0,religion.religion.texts)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "4"
        }
      ]
    },
    {
      "question": "what is the name of the astronomical discovery that is published and discovered in the astronomical observatory of dwarf planet pluto?",
      "qid": "4300765001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Published": "m.03ywyv_",
        "dwarf planet pluto": "m.0c3qy"
      },
      "s_expression": "(AND astronomy.astronomical_discovery (AND (JOIN (R astronomy.astronomical_discovery_status.objects) m.03ywyv_) (JOIN astronomy.astronomical_discovery.discovery_site (JOIN (R astronomy.astronomical_discovery.discovery_site) m.0c3qy))))",
      "actions": [
        "get_relations(m.03ywyv_)",
        "get_neighbors(m.03ywyv_,astronomy.astronomical_discovery_status.objects)",
        "get_relations(m.0c3qy)",
        "get_neighbors(m.0c3qy,astronomy.astronomical_discovery.discovery_site)",
        "get_relations(#1)",
        "get_neighbors(#1,astronomy.astronomical_observatory.discoveries)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.070g26",
          "entity_name": "7166 Kennedy"
        }
      ]
    },
    {
      "question": "Which sports arena does the team that plays in AT&T Park play its home games?",
      "qid": "WebQTrn-52_c1d5c9c777c291a80c29c70ec43c45ad_cwq",
      "source": "cwq",
      "entities": {
        "AT&T Park": "m.01_gsg"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.arena_stadium m.01_gsg)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.01_gsg)",
        "get_neighbors(m.01_gsg,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.01_gsg",
          "answer_type": "Entity",
          "entity_name": "AT&T Park"
        }
      ]
    },
    {
      "question": "what are the total number of programming language paradigms for peoplecode and pl/i?",
      "qid": "3205793001000_grailqa",
      "source": "grailqa",
      "entities": {
        "PL/I": "m.05xjv",
        "PeopleCode": "m.0d5g71"
      },
      "s_expression": "(COUNT (AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.05xjv) (JOIN computer.programming_language_paradigm.languages m.0d5g71))))",
      "actions": [
        "get_relations(m.05xjv)",
        "get_neighbors(m.05xjv,computer.programming_language.language_paradigms)",
        "get_relations(m.0d5g71)",
        "get_neighbors(m.0d5g71,computer.programming_language.language_paradigms)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what was the programming language first introduced by l peter deutsch which was influenced by another language?",
      "qid": "4303199010000_grailqa",
      "source": "grailqa",
      "entities": {
        "L Peter Deutsch": "m.02rt9r"
      },
      "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.02rt9r))) computer.programming_language.introduced)",
      "actions": [
        "get_relations(m.02rt9r)",
        "get_neighbors(m.02rt9r,computer.programming_language_developer.programming_languages_developed)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.influenced)",
        "get_attributes(#1)",
        "argmin(#1,computer.programming_language.introduced)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01zpg",
          "entity_name": "COBOL"
        }
      ]
    },
    {
      "question": "In what year did the basketball team whose head coach is Kevin McHale win their first championship game?",
      "qid": "WebQTest-1734_49842e208a5dd584154dd0a96881bc05_cwq",
      "source": "cwq",
      "entities": {
        "Kevin McHale": "m.04b87b"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN basketball.basketball_team.head_coach m.04b87b)) time.event.start_date)",
      "actions": [
        "get_relations(m.04b87b)",
        "get_neighbors(m.04b87b,basketball.basketball_coach.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.08x9cq",
          "answer_type": "Entity",
          "entity_name": "1994 NBA Finals"
        }
      ]
    },
    {
      "question": "name the camera storage type supported by casio exilim ex-z75 and a digital camera with an iso setting of high iso auto.",
      "qid": "4302372002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Casio Exilim EX-Z75": "m.03q2qv9",
        "High ISO Auto": "m.02nqg65"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.02nqg65)) (JOIN (R digicams.digital_camera.supported_storage_types) m.03q2qv9)))",
      "actions": [
        "get_relations(m.02nqg65)",
        "get_neighbors(m.02nqg65,digicams.camera_iso.cameras)",
        "get_relations(#0)",
        "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.03q2qv9)",
        "get_neighbors(m.03q2qv9,digicams.digital_camera.supported_storage_types)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tthm",
          "entity_name": "Secure Digital"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0220vm1",
          "entity_name": "SDHC Card"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01z76m",
          "entity_name": "MultiMediaCard"
        }
      ]
    },
    {
      "question": "what cheese made from milk of goat has the same texture as azeitao does?",
      "qid": "4302129013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Goat": "m.03fwl",
        "Azeitao": "m.02h89g8"
      },
      "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.03fwl) (JOIN (R food.cheese_texture.cheeses) (JOIN food.cheese_texture.cheeses m.02h89g8))))",
      "actions": [
        "get_relations(m.03fwl)",
        "get_neighbors(m.03fwl,food.cheese_milk_source.cheeses)",
        "get_relations(m.02h89g8)",
        "get_neighbors(m.02h89g8,food.cheese.texture)",
        "get_relations(#1)",
        "get_neighbors(#1,food.cheese_texture.cheeses)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02h8388",
          "entity_name": "Banon de Provence"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02h8bj2",
          "entity_name": "Bermuda Triangle"
        }
      ]
    },
    {
      "question": "what's the quickest amusement ride created by the haunted manison designer?",
      "qid": "482000002_graphquestions",
      "source": "graphquestions",
      "entities": {
        "haunted manison": "m.01p79p"
      },
      "s_expression": "(ARGMAX (AND amusement_parks.ride (JOIN amusement_parks.ride.designer (JOIN amusement_parks.ride_designer.rides m.01p79p))) amusement_parks.ride.max_speed)",
      "actions": [
        "get_relations(m.01p79p)",
        "get_neighbors(m.01p79p,amusement_parks.ride.designer)",
        "get_relations(#0)",
        "get_neighbors(#0,amusement_parks.ride_designer.rides)",
        "get_attributes(#1)",
        "argmax(#1,amusement_parks.ride.max_speed)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.040fq5",
          "entity_name": "California Screamin'"
        }
      ]
    },
    {
      "question": "The team with the mascot Lou Seal plays baseball where?",
      "qid": "WebQTrn-1326_c334509bb5e02cacae1ba2e80c176499_cwq",
      "source": "cwq",
      "entities": {
        "Lou Seal": "m.03_dwn"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.team_mascot m.03_dwn)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.03_dwn)",
        "get_neighbors(m.03_dwn,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.01_gsg",
          "answer_type": "Entity",
          "entity_name": "AT&T Park"
        }
      ]
    },
    {
      "question": "games developed by crafts & meister and distributed through physical media released where?",
      "qid": "4301141014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Physical media": "m.0663y78",
        "Crafts & Meister": "m.0c0wkkl"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.0663y78) (JOIN (R cvg.cvg_developer.game_versions_developed) m.0c0wkkl))))",
      "actions": [
        "get_relations(m.0663y78)",
        "get_neighbors(m.0663y78,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.0c0wkkl)",
        "get_neighbors(m.0c0wkkl,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_3d",
          "entity_name": "Japan"
        }
      ]
    },
    {
      "question": "The artist Pink from the concert tour Meddle had what first album?",
      "qid": "WebQTest-954_cd5ff1ccc2d0b995f85f79941b5b60c0_cwq",
      "source": "cwq",
      "entities": {
        "meddle": "m.09rw600"
      },
      "s_expression": "(ARGMIN (JOIN (R music.artist.album) (JOIN music.artist.concert_tours m.09rw600)) music.album.release_date)",
      "actions": [
        "get_relations(m.09rw600)",
        "get_neighbors(m.09rw600,music.concert_tour.artist)",
        "get_relations(#0)",
        "get_neighbors(#0,music.artist.album)",
        "get_attributes(#1)",
        "argmin(#1,music.album.release_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0h3bhb1",
          "answer_type": "Entity",
          "entity_name": "Psychedelic Session-compilation album"
        }
      ]
    },
    {
      "question": "What was the first World Series won by the team owned by Fred Wilpon?",
      "qid": "WebQTrn-2356_dd3d9d37a08956cba39347a0d259233a_cwq",
      "source": "cwq",
      "entities": {
        "World Series": "m.0fjp3",
        "Fred Wilpon": "m.07v42m"
      },
      "s_expression": "(ARGMIN (AND (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.07v42m)) (JOIN sports.sports_championship_event.championship m.0fjp3)) time.event.start_date)",
      "actions": [
        "get_relations(m.07v42m)",
        "get_neighbors(m.07v42m,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.0fjp3)",
        "get_neighbors(m.0fjp3,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmin(#3,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04jg9_",
          "answer_type": "Entity",
          "entity_name": "1969 World Series"
        }
      ]
    },
    {
      "question": "in dharmic religions, who is the founding figure of songkran festival?",
      "qid": "4302278006000_grailqa",
      "source": "grailqa",
      "entities": {
        "songkran festival": "m.017ycn",
        "Dharmic religions": "m.04bhh1"
      },
      "s_expression": "(AND religion.founding_figure (JOIN (R religion.religion.founding_figures) (AND (JOIN (R time.holiday.featured_in_religions) m.017ycn) (JOIN religion.religion.is_part_of m.04bhh1))))",
      "actions": [
        "get_relations(m.017ycn)",
        "get_neighbors(m.017ycn,time.holiday.featured_in_religions)",
        "get_relations(m.04bhh1)",
        "get_neighbors(m.04bhh1,religion.religion.includes)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,religion.religion.founding_figures)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.015k7",
          "entity_name": "Gautama Buddha"
        }
      ]
    },
    {
      "question": "what number of temperments do croatian sheepdog and staffordshire bull terrier breeds have in common?",
      "qid": "3205485009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Croatian Sheepdog": "m.025_s6d",
        "Staffordshire Bull Terrier": "m.01kv93"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds m.025_s6d) (JOIN (R biology.animal_breed.temperament) m.01kv93))))",
      "actions": [
        "get_relations(m.025_s6d)",
        "get_neighbors(m.025_s6d,biology.animal_breed.temperament)",
        "get_relations(m.01kv93)",
        "get_neighbors(m.01kv93,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what alzheimer's disease treatments has braxton hicks side effects?",
      "qid": "4301182014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Alzheimer's disease": "m.0dcsx",
        "braxton hicks": "m.03_81f"
      },
      "s_expression": "(AND medicine.medical_treatment (AND (JOIN medicine.medical_treatment.side_effects (JOIN medicine.symptom.parent_symptom m.03_81f)) (JOIN medicine.medical_treatment.used_to_treat m.0dcsx)))",
      "actions": [
        "get_relations(m.03_81f)",
        "get_neighbors(m.03_81f,medicine.symptom.includes_symptoms)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.symptom.side_effect_of)",
        "get_relations(m.0dcsx)",
        "get_neighbors(m.0dcsx,medicine.disease.treatments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.036g18",
          "entity_name": "Donepezil"
        }
      ]
    },
    {
      "question": "In what year was the Super Bowl won by a team with a mascot named Seattle Seahawks Blitz?",
      "qid": "WebQTest-163_9495f0be10a5bc18b35d47a78603f464_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "Seattle Seahawks Blitz": "m.067ggw"
      },
      "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.067ggw)) (JOIN time.event.instance_of_recurring_event m.06x5s))",
      "actions": [
        "get_relations(m.067ggw)",
        "get_neighbors(m.067ggw,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,time.recurring_event.instances)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.09k4qg3",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLVIII"
        }
      ]
    },
    {
      "question": "Who influenced Baron De Montesquie and was influenced by Girard Desargues?",
      "qid": "WebQTest-347_fa37e433eaf26b34a57900ac4af9259c_cwq",
      "source": "cwq",
      "entities": {
        "baron de montesquie": "m.0f9wd",
        "Girard Desargues": "m.01_4zq"
      },
      "s_expression": "(AND (JOIN (R influence.influence_node.influenced) m.0f9wd) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.01_4zq)))",
      "actions": [
        "get_relations(m.0f9wd)",
        "get_neighbors(m.0f9wd,influence.influence_node.influenced)",
        "get_relations(m.01_4zq)",
        "get_neighbors(m.01_4zq,influence.influence_node.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.039n1",
          "answer_type": "Entity",
          "entity_name": "Georg Wilhelm Friedrich Hegel"
        }
      ]
    },
    {
      "question": "what are automotive classes of chrysler nassau in the model of 2014 ford focus?",
      "qid": "4300308006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Chrysler Nassau": "m.026q2np",
        "2014 Ford Focus": "m.0_v8m4q"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN (R automotive.model.automotive_class) m.026q2np) (JOIN automotive.automotive_class.examples (JOIN automotive.model.model_years m.0_v8m4q))))",
      "actions": [
        "get_relations(m.026q2np)",
        "get_neighbors(m.026q2np,automotive.model.automotive_class)",
        "get_relations(m.0_v8m4q)",
        "get_neighbors(m.0_v8m4q,automotive.model_year.model)",
        "get_relations(#1)",
        "get_neighbors(#1,automotive.model.automotive_class)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.016gvg",
          "entity_name": "Station Wagon"
        }
      ]
    },
    {
      "question": "samsung l83t camera from matsushita electric industrial supports which iso?",
      "qid": "4304013014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Samsung L83T": "m.03q2ppn",
        "matsushita electric industrial": "m.0nk5b"
      },
      "s_expression": "(AND digicams.camera_iso (AND (JOIN digicams.camera_iso.cameras m.03q2ppn) (JOIN (R digicams.digital_camera.iso_setting) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.0nk5b))))",
      "actions": [
        "get_relations(m.03q2ppn)",
        "get_neighbors(m.03q2ppn,digicams.digital_camera.iso_setting)",
        "get_relations(m.0nk5b)",
        "get_neighbors(m.0nk5b,digicams.camera_sensor_manufacturer.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.iso_setting)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_x",
          "entity_name": "100"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_g",
          "entity_name": "400"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_p",
          "entity_name": "200"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg51",
          "entity_name": "1600"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg58",
          "entity_name": "800"
        }
      ]
    },
    {
      "question": "duberry cheese has the same texture as which goat milk cheese?",
      "qid": "4302129009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Goat": "m.03fwl",
        "Duberry cheese": "m.0b_my9"
      },
      "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.03fwl) (JOIN (R food.cheese_texture.cheeses) (JOIN food.cheese_texture.cheeses m.0b_my9))))",
      "actions": [
        "get_relations(m.03fwl)",
        "get_neighbors(m.03fwl,food.cheese_milk_source.cheeses)",
        "get_relations(m.0b_my9)",
        "get_neighbors(m.0b_my9,food.cheese.texture)",
        "get_relations(#1)",
        "get_neighbors(#1,food.cheese_texture.cheeses)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03cl7d5",
          "entity_name": "Castelmagno cheese"
        }
      ]
    },
    {
      "question": "in what parts of the world can you buy games made by nintendo on virtual console?",
      "qid": "498000000_graphquestions",
      "source": "graphquestions",
      "entities": {
        "Nintendo": "m.059wk",
        "Virtual Console": "m.07sg3j"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.developer m.059wk) (JOIN cvg.game_version.distributed_through m.07sg3j))))",
      "actions": [
        "get_relations(m.059wk)",
        "get_neighbors(m.059wk,cvg.cvg_developer.game_versions_developed)",
        "get_relations(m.07sg3j)",
        "get_neighbors(m.07sg3j,cvg.computer_game_distribution_system.games_distributed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02j9z",
          "entity_name": "Europe"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_3d",
          "entity_name": "Japan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059g4",
          "entity_name": "North America"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0chghy",
          "entity_name": "Australia"
        }
      ]
    },
    {
      "question": "What form of government is used in Australia and where Emanuel Lasker was born in?",
      "qid": "WebQTrn-3497_3ce332b703593e71708a5604865c5758_cwq",
      "source": "cwq",
      "entities": {
        "Australia": "m.0chghy",
        "Emanuel Lasker": "m.01kfm7"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0chghy) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
      "actions": [
        "get_relations(m.0chghy)",
        "get_neighbors(m.0chghy,location.country.form_of_government)",
        "get_relations(m.01kfm7)",
        "get_neighbors(m.01kfm7,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "When is the most recent time the sports team whose fight song is \"Renegade\" won a Super Bowl?",
      "qid": "WebQTest-1523_993bf41507919333b3a87058c5072363_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "Renegade": "m.06c78r"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.fight_song m.06c78r)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.06c78r)",
        "get_neighbors(m.06c78r,sports.fight_song.sports_team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04n7r5",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLIII"
        }
      ]
    },
    {
      "question": "jacques tits conducts research in which formal science discipline?",
      "qid": "4302233002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Formal science": "m.09vvxv",
        "Jacques Tits": "m.01g2yn"
      },
      "s_expression": "(AND education.field_of_study (AND (JOIN (R education.field_of_study.subdisciplines) m.09vvxv) (JOIN (R education.field_of_study.subdiscipline_of) (JOIN (R education.academic.research_areas) m.01g2yn))))",
      "actions": [
        "get_relations(m.09vvxv)",
        "get_neighbors(m.09vvxv,education.field_of_study.subdisciplines)",
        "get_relations(m.01g2yn)",
        "get_neighbors(m.01g2yn,education.academic.research_areas)",
        "get_relations(#1)",
        "get_neighbors(#1,education.field_of_study.subdiscipline_of)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04rjg",
          "entity_name": "Mathematics"
        }
      ]
    },
    {
      "question": "what is the name of the religion that is part of christian faith and has same practices with bahá'í faith?",
      "qid": "4300140002000_grailqa",
      "source": "grailqa",
      "entities": {
        "christian faith": "m.01lp8",
        "Bahá'í Faith": "m.01cjt"
      },
      "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.01cjt)) (JOIN religion.religion.is_part_of m.01lp8)))",
      "actions": [
        "get_relations(m.01cjt)",
        "get_neighbors(m.01cjt,religion.religion.practices)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religious_practice.practice_of)",
        "get_relations(m.01lp8)",
        "get_neighbors(m.01lp8,religion.religion.includes)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dtdq",
          "entity_name": "Jehovah's Witnesses"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05sfs",
          "entity_name": "Protestantism"
        }
      ]
    },
    {
      "question": "what semi-firm textured cheese is made from the products of goat and cows?",
      "qid": "4301155013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Goat": "m.03fwl",
        "cows": "m.01xq0k1",
        "semi-firm": "m.02h82t0"
      },
      "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.03fwl) (AND (JOIN food.cheese.source_of_milk m.01xq0k1) (JOIN food.cheese.texture m.02h82t0))))",
      "actions": [
        "get_relations(m.03fwl)",
        "get_neighbors(m.03fwl,food.cheese_milk_source.cheeses)",
        "get_relations(m.01xq0k1)",
        "get_neighbors(m.01xq0k1,food.cheese_milk_source.cheeses)",
        "get_relations(m.02h82t0)",
        "get_neighbors(m.02h82t0,food.cheese_texture.cheeses)",
        "intersection(#1,#2)",
        "intersection(#0,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02h8b9t",
          "entity_name": "Benedictine"
        }
      ]
    },
    {
      "question": "What is the timezone in Nevada near the San Carlos Airport?",
      "qid": "WebQTrn-2382_1b45dd54d7f220b2c4ce6e4f9874b64a_cwq",
      "source": "cwq",
      "entities": {
        "Nevada": "m.059_c",
        "San Carlos Airport": "m.01ngqj"
      },
      "s_expression": "(AND (JOIN (R location.location.time_zones) m.059_c) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.01ngqj)))",
      "actions": [
        "get_relations(m.059_c)",
        "get_neighbors(m.059_c,location.location.time_zones)",
        "get_relations(m.01ngqj)",
        "get_neighbors(m.01ngqj,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02lcqs",
          "answer_type": "Entity",
          "entity_name": "Pacific Time Zone"
        }
      ]
    },
    {
      "question": "Where do most people live in the place where the fictional character Tutankhamun lived?",
      "qid": "WebQTrn-3037_b183c990916cd703ef71720d378b748e_cwq",
      "source": "cwq",
      "entities": {
        "Tutankhamun": "m.0gy5xdq"
      },
      "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN fictional_universe.fictional_setting.characters_that_have_lived_here m.0gy5xdq)) topic_server.population_number)",
      "actions": [
        "get_relations(m.0gy5xdq)",
        "get_neighbors(m.0gy5xdq,fictional_universe.fictional_character.places_lived)",
        "get_relations(#0)",
        "get_neighbors(#0,location.location.contains)",
        "get_attributes(#1)",
        "argmax(#1,topic_server.population_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.080msrv",
          "answer_type": "Entity",
          "entity_name": "Greater Cairo"
        }
      ]
    },
    {
      "question": "grace murray hopper introduced first which programming language which was influenced by another language ?",
      "qid": "4303199006000_grailqa",
      "source": "grailqa",
      "entities": {
        "grace murray hopper": "m.039ln"
      },
      "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.039ln))) computer.programming_language.introduced)",
      "actions": [
        "get_relations(m.039ln)",
        "get_neighbors(m.039ln,computer.programming_language_developer.programming_languages_developed)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.influenced)",
        "get_attributes(#1)",
        "argmin(#1,computer.programming_language.introduced)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bvh22",
          "entity_name": "COMTRAN"
        }
      ]
    },
    {
      "question": "what is the name of the version released in north american continent that supports microsoft xbox 360?",
      "qid": "4301746004000_grailqa",
      "source": "grailqa",
      "entities": {
        "north american continent": "m.059g4",
        "microsoft xbox 360": "m.02plp2"
      },
      "s_expression": "(AND cvg.game_version (AND (JOIN (R cvg.computer_game_region.versions_released_in_this_region) m.059g4) (JOIN (R computer.computer_peripheral.supporting_game_versions) (JOIN (R business.brand.products) m.02plp2))))",
      "actions": [
        "get_relations(m.059g4)",
        "get_neighbors(m.059g4,cvg.computer_game_region.versions_released_in_this_region)",
        "get_relations(m.02plp2)",
        "get_neighbors(m.02plp2,business.brand.products)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.computer_peripheral.supporting_game_versions)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cmynjz",
          "entity_name": "Sonic & Sega All-Stars Racing with Banjo-Kazooie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cn1dzn",
          "entity_name": "Sonic Free Riders"
        }
      ]
    },
    {
      "question": "drugs formulated from horse chestnut/collinsonia canadensis root/echinacea angustifolia/hamamelis virginiana root bark/stem bark/pulsatilla vulgaris/arnica montana/activated charcoal/graphite/hydrofluoric acid/lycopodium clavatum spore/nitric acid/strychnos nux-vomica seed/paeonia officinalis root/sepia officinalis juice homeopathic preparation and having active ingredient aspartame have what dug dosage form exist?",
      "qid": "5400022005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Horse chestnut/Collinsonia canadensis root/Echinacea angustifolia/Hamamelis virginiana root bark/stem bark/Pulsatilla vulgaris/Arnica montana/Activated charcoal/Graphite/Hydrofluoric acid/Lycopodium clavatum spore/Nitric acid/Strychnos nux-vomica seed/Paeonia officinalis root/Sepia officinalis juice homeopathic preparation": "m.0hqwt6b",
        "Aspartame": "m.010xc"
      },
      "s_expression": "(AND medicine.drug_dosage_form (AND (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.formulation_of m.0hqwt6b)) (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.active_ingredient_moieties m.010xc))))",
      "actions": [
        "get_relations(m.0hqwt6b)",
        "get_neighbors(m.0hqwt6b,medicine.drug.marketed_formulations)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.drug_formulation.dosage_form)",
        "get_relations(m.010xc)",
        "get_neighbors(m.010xc,medicine.drug_ingredient.active_moiety_of_formulation)",
        "get_relations(#2)",
        "get_neighbors(#2,medicine.drug_formulation.dosage_form)",
        "intersection(#1,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04k94",
          "entity_name": "Liquid"
        }
      ]
    },
    {
      "question": "what programming language paradigm do programming laguages such as simula and derivatives of smalltalk follow?",
      "qid": "4300417012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Simula": "m.079l6",
        "Smalltalk": "m.070d2"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.070d2)) (JOIN (R computer.programming_language.language_paradigms) m.079l6)))",
      "actions": [
        "get_relations(m.070d2)",
        "get_neighbors(m.070d2,computer.programming_language.dialects)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.language_paradigms)",
        "get_relations(m.079l6)",
        "get_neighbors(m.079l6,computer.programming_language.language_paradigms)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05prj",
          "entity_name": "Object-oriented programming"
        }
      ]
    },
    {
      "question": "what is another martial art that involves hybrid and is in the same category as northern shaolin?",
      "qid": "4301064015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Northern Shaolin": "m.071nmn",
        "Hybrid": "m.03nzdm_"
      },
      "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.071nmn)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.03nzdm_)))",
      "actions": [
        "get_relations(m.071nmn)",
        "get_neighbors(m.071nmn,martial_arts.martial_art.category)",
        "get_relations(#0)",
        "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
        "get_relations(m.03nzdm_)",
        "get_neighbors(m.03nzdm_,martial_arts.martial_art_category.martial_arts)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0fdb3",
          "entity_name": "Jeet Kune Do"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03bs3p",
          "entity_name": "Sanshou"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02t73g",
          "entity_name": "Taekkyeon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02618d8",
          "entity_name": "Russian All-Round Fighting"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.048yh",
          "entity_name": "Krav Maga"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b65c",
          "entity_name": "Hwa Rang Do"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06jm_r",
          "entity_name": "Bartitsu"
        }
      ]
    },
    {
      "question": "for those casinos owned by the same guy as bellagio hotel, which one has the least rooms?",
      "qid": "496000101_graphquestions",
      "source": "graphquestions",
      "entities": {
        "bellagio hotel": "m.033bxs"
      },
      "s_expression": "(ARGMIN (AND base.casinos.casino (JOIN (R base.casinos.casino_owner.casinos_owned) (JOIN base.casinos.casino_owner.casinos_owned m.033bxs))) base.casinos.casino.rooms)",
      "actions": [
        "get_relations(m.033bxs)",
        "get_neighbors(m.033bxs,base.casinos.casino.owner)",
        "get_relations(#0)",
        "get_neighbors(#0,base.casinos.casino_owner.casinos_owned)",
        "get_attributes(#1)",
        "argmin(#1,base.casinos.casino.rooms)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0937y7",
          "entity_name": "Nevada Landing Hotel and Casino"
        }
      ]
    },
    {
      "question": "where is the version developed by arkedo studio and distributed through xbox indie games released?",
      "qid": "4301141018000_grailqa",
      "source": "grailqa",
      "entities": {
        "xbox indie games": "m.052582h",
        "Arkedo Studio": "m.052psry"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.052582h) (JOIN (R cvg.cvg_developer.game_versions_developed) m.052psry))))",
      "actions": [
        "get_relations(m.052582h)",
        "get_neighbors(m.052582h,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.052psry)",
        "get_neighbors(m.052psry,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.059g4",
          "entity_name": "North America"
        }
      ]
    },
    {
      "question": "What country that has the airline V Bird do Turkish people originate from?",
      "qid": "WebQTest-903_e0133b074487245b89f042f1b8e39568_cwq",
      "source": "cwq",
      "entities": {
        "Turkish people": "m.0hb7h_z",
        "V Bird": "m.05zbq0"
      },
      "s_expression": "(AND (JOIN (R people.ethnicity.geographic_distribution) m.0hb7h_z) (JOIN location.location.contains (JOIN aviation.airport.hub_for m.05zbq0)))",
      "actions": [
        "get_relations(m.0hb7h_z)",
        "get_neighbors(m.0hb7h_z,people.ethnicity.geographic_distribution)",
        "get_relations(m.05zbq0)",
        "get_neighbors(m.05zbq0,aviation.airline.hubs)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.containedby)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0345h",
          "answer_type": "Entity",
          "entity_name": "Germany"
        }
      ]
    },
    {
      "question": "which type of dish common in scottish food contains raspberry?",
      "qid": "4301356009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Raspberry": "m.01pd2g",
        "scottish food": "m.0ftx68"
      },
      "s_expression": "(AND food.type_of_dish (JOIN food.type_of_dish.dishes (AND (JOIN food.dish.ingredients m.01pd2g) (JOIN (R dining.cuisine.dishes) m.0ftx68))))",
      "actions": [
        "get_relations(m.01pd2g)",
        "get_neighbors(m.01pd2g,food.ingredient.dishes)",
        "get_relations(m.0ftx68)",
        "get_neighbors(m.0ftx68,dining.cuisine.dishes)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,food.dish.type_of_dish1)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0270h",
          "entity_name": "Dessert"
        }
      ]
    },
    {
      "question": "what is the number of automotive classes which are examples of vw sharan and fiat?",
      "qid": "3206121010000_grailqa",
      "source": "grailqa",
      "entities": {
        "vw sharan": "m.032x3v",
        "fiat": "m.04_ptv"
      },
      "s_expression": "(COUNT (AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples m.032x3v) (JOIN automotive.automotive_class.examples m.04_ptv))))",
      "actions": [
        "get_relations(m.032x3v)",
        "get_neighbors(m.032x3v,automotive.model.automotive_class)",
        "get_relations(m.04_ptv)",
        "get_neighbors(m.04_ptv,automotive.model.automotive_class)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "the maximum speed can be found in which ride designed by the same designer as haunted mansion?",
      "qid": "482000300_graphquestions",
      "source": "graphquestions",
      "entities": {
        "Haunted Mansion": "m.01p79p"
      },
      "s_expression": "(ARGMAX (AND amusement_parks.ride (JOIN amusement_parks.ride.designer (JOIN amusement_parks.ride_designer.rides m.01p79p))) amusement_parks.ride.max_speed)",
      "actions": [
        "get_relations(m.01p79p)",
        "get_neighbors(m.01p79p,amusement_parks.ride.designer)",
        "get_relations(#0)",
        "get_neighbors(#0,amusement_parks.ride_designer.rides)",
        "get_attributes(#1)",
        "argmax(#1,amusement_parks.ride.max_speed)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.040fq5",
          "entity_name": "California Screamin'"
        }
      ]
    },
    {
      "question": "what is the musical recording with the greatest length that is a track of musical release component released by neurocide?",
      "qid": "4301467015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Neurocide": "m.01rr9dw"
      },
      "s_expression": "(ARGMAX (AND music.recording (JOIN (R music.release.track) (JOIN (R music.album.releases) m.01rr9dw))) music.recording.length)",
      "actions": [
        "get_relations(m.01rr9dw)",
        "get_neighbors(m.01rr9dw,music.album.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.track)",
        "get_attributes(#1)",
        "argmax(#1,music.recording.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01bxq5d",
          "entity_name": "Inward"
        }
      ]
    },
    {
      "question": "Which Super bowl was the last one to be won by the team with Steely McBeam as a mascot?",
      "qid": "WebQTest-1523_abc143e50fcf4915c8267215915795b5_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "Steely McBeam": "m.02x0cyj"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.02x0cyj)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.02x0cyj)",
        "get_neighbors(m.02x0cyj,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04n7r5",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLIII"
        }
      ]
    },
    {
      "question": "In the country where AL Ahram beveages Co. brews Stella beer, what is the primary language used?",
      "qid": "WebQTest-1608_9f924908bb36bf7d331fa1b933af9f58_cwq",
      "source": "cwq",
      "entities": {
        "al ahram beverages co stella beer": "m.04dqn_j"
      },
      "s_expression": "(JOIN (R location.country.languages_spoken) (AND (JOIN (R language.human_language.main_country) common.topic) (JOIN food.beer_country_region.beers_from_here m.04dqn_j)))",
      "actions": [
        "get_relations(common.topic)",
        "get_neighbors(common.topic,language.human_language.main_country)",
        "get_relations(m.04dqn_j)",
        "get_neighbors(m.04dqn_j,food.beer.from_region)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,location.country.languages_spoken)"
      ],
      "answer": [
        {
          "answer_argument": "m.012zfy",
          "answer_type": "Entity",
          "entity_name": "Siwi Language"
        },
        {
          "answer_argument": "m.02hx2cr",
          "answer_type": "Entity",
          "entity_name": "Egyptian Arabic"
        },
        {
          "answer_argument": "m.02hxbhg",
          "answer_type": "Entity",
          "entity_name": "Sa'idi Arabic"
        },
        {
          "answer_argument": "m.03wc2kf",
          "answer_type": "Entity",
          "entity_name": "Bedawi Arabic"
        }
      ]
    },
    {
      "question": "the quote \"honorable battle sustains a sacred band.\", spoken by the angel of remembrance, is on what subject?",
      "qid": "4300443008000_grailqa",
      "source": "grailqa",
      "entities": {
        "\"Honorable battle sustains a Sacred Band.\"": "m.0h8j6v4",
        "Angel of Remembrance": "m.0h3grm9"
      },
      "s_expression": "(AND media_common.quotation_subject (AND (JOIN (R media_common.quotation.subjects) (JOIN media_common.quotation.spoken_by_character m.0h3grm9)) (JOIN (R media_common.quotation.subjects) m.0h8j6v4)))",
      "actions": [
        "get_relations(m.0h3grm9)",
        "get_neighbors(m.0h3grm9,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.subjects)",
        "get_relations(m.0h8j6v4)",
        "get_neighbors(m.0h8j6v4,media_common.quotation.subjects)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02zq2",
          "entity_name": "Faith"
        }
      ]
    },
    {
      "question": "how many texts in abrahamic faiths have religious texts of fast of esther?",
      "qid": "4303883008000_grailqa",
      "source": "grailqa",
      "entities": {
        "abrahamic faiths": "m.0f_h6",
        "Fast of Esther": "m.06y942"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of (JOIN (R time.holiday.featured_in_religions) m.06y942)) (JOIN (R religion.religion.texts) m.0f_h6))))",
      "actions": [
        "get_relations(m.06y942)",
        "get_neighbors(m.06y942,time.holiday.featured_in_religions)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religion.texts)",
        "get_relations(m.0f_h6)",
        "get_neighbors(m.0f_h6,religion.religion.texts)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what kind of content do the producer of the splendid table and san francisco symphony orchestra produce?",
      "qid": "4300832015000_grailqa",
      "source": "grailqa",
      "entities": {
        "The Splendid Table": "m.03ctllj",
        "san francisco symphony orchestra": "m.0130g4"
      },
      "s_expression": "(AND broadcast.content (AND (JOIN broadcast.content.producer (JOIN broadcast.producer.produces m.03ctllj)) (JOIN broadcast.content.producer m.0130g4)))",
      "actions": [
        "get_relations(m.03ctllj)",
        "get_neighbors(m.03ctllj,broadcast.content.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,broadcast.producer.produces)",
        "get_relations(m.0130g4)",
        "get_neighbors(m.0130g4,broadcast.producer.produces)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05v8qxc",
          "entity_name": "The MTT Files"
        }
      ]
    },
    {
      "question": "What movies did Ron Howard direct in the same genre as the flick, \"Lucky\"?",
      "qid": "WebQTest-323_ac79a78bae29339809d3e2304c8fd407_cwq",
      "source": "cwq",
      "entities": {
        "Ron Howard": "m.0g2lq",
        "Lucky": "m.010h5f98"
      },
      "s_expression": "(AND (JOIN (R film.director.film) m.0g2lq) (JOIN film.film.genre (JOIN film.film_genre.films_in_this_genre m.010h5f98)))",
      "actions": [
        "get_relations(m.0g2lq)",
        "get_neighbors(m.0g2lq,film.director.film)",
        "get_relations(m.010h5f98)",
        "get_neighbors(m.010h5f98,film.film.genre)",
        "get_relations(#1)",
        "get_neighbors(#1,film.film_genre.films_in_this_genre)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01hw5kk",
          "answer_type": "Entity",
          "entity_name": "Willow"
        }
      ]
    },
    {
      "question": "What is near the Grand Canyon and is where a Wide Receiver Football player was born?",
      "qid": "WebQTrn-2871_98925752e1e60abb73dc775f15ee38af_cwq",
      "source": "cwq",
      "entities": {
        "Grand Canyon": "m.0cns5",
        "Wide receiver": "m.02g_6x"
      },
      "s_expression": "(AND (JOIN (R travel.tourist_attraction.near_travel_destination) m.0cns5) (JOIN location.location.people_born_here (JOIN american_football.football_player.position_s m.02g_6x)))",
      "actions": [
        "get_relations(m.0cns5)",
        "get_neighbors(m.0cns5,travel.tourist_attraction.near_travel_destination)",
        "get_relations(m.02g_6x)",
        "get_neighbors(m.02g_6x,american_football.football_position.players)",
        "get_relations(#1)",
        "get_neighbors(#1,people.person.place_of_birth)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0d35y"
        }
      ]
    },
    {
      "question": "When was the last time that the sports team from New England won the Super Bowl?",
      "qid": "WebQTrn-1930_8ec864149937ab43435a357e6fffa067_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "New England": "m.029jpy"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.location m.029jpy)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.029jpy)",
        "get_neighbors(m.029jpy,sports.sports_team_location.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.032tkh",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXXIX"
        }
      ]
    },
    {
      "question": "which isos does the camera pentax k100d super support from kodak?",
      "qid": "4304013001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Pentax K100D Super": "m.03q2qkl",
        "kodak": "m.0ftdd"
      },
      "s_expression": "(AND digicams.camera_iso (AND (JOIN digicams.camera_iso.cameras m.03q2qkl) (JOIN (R digicams.digital_camera.iso_setting) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.0ftdd))))",
      "actions": [
        "get_relations(m.03q2qkl)",
        "get_neighbors(m.03q2qkl,digicams.digital_camera.iso_setting)",
        "get_relations(m.0ftdd)",
        "get_neighbors(m.0ftdd,digicams.camera_sensor_manufacturer.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.iso_setting)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_g",
          "entity_name": "400"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_p",
          "entity_name": "200"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg51",
          "entity_name": "1600"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg58",
          "entity_name": "800"
        }
      ]
    },
    {
      "question": "What region includes Belgium as well as the LyonâSaint-ExupÃ©ry Airport?",
      "qid": "WebQTrn-493_954cefa79c7c375f90c888f5eebf1cc9_cwq",
      "source": "cwq",
      "entities": {
        "Belgium": "m.0154j",
        "LyonâSaint-ExupÃ©ry Airport": "m.01nkmw"
      },
      "s_expression": "(AND (JOIN (R location.location.containedby) m.0154j) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.01nkmw)))",
      "actions": [
        "get_relations(m.0154j)",
        "get_neighbors(m.0154j,location.location.containedby)",
        "get_relations(m.01nkmw)",
        "get_neighbors(m.01nkmw,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0852h"
        }
      ]
    },
    {
      "question": "What location is the home of the Florida Marlins and the birthplace of a football player who plays the position of punt returner?",
      "qid": "WebQTrn-2710_9fe4d18cef8b64187a9915228be44cab_cwq",
      "source": "cwq",
      "entities": {
        "florida marlins": "m.02__x",
        "Punt returner": "m.0bgv4g"
      },
      "s_expression": "(AND (JOIN (R sports.sports_team.location) m.02__x) (JOIN location.location.people_born_here (JOIN american_football.football_player.position_s m.0bgv4g)))",
      "actions": [
        "get_relations(m.02__x)",
        "get_neighbors(m.02__x,sports.sports_team.location)",
        "get_relations(m.0bgv4g)",
        "get_neighbors(m.0bgv4g,american_football.football_position.players)",
        "get_relations(#1)",
        "get_neighbors(#1,people.person.place_of_birth)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0f2v0",
          "answer_type": "Entity",
          "entity_name": "Miami"
        }
      ]
    },
    {
      "question": "matias basilico owns how many active websites?",
      "qid": "3206340008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Active": "m.02hsn4g",
        "Matias Basilico": "m.02t4ykq"
      },
      "s_expression": "(COUNT (AND internet.website (AND (JOIN internet.website.status m.02hsn4g) (JOIN (R internet.website_owner.websites_owned) m.02t4ykq))))",
      "actions": [
        "get_relations(m.02hsn4g)",
        "get_neighbors(m.02hsn4g,internet.website_status.sites)",
        "get_relations(m.02t4ykq)",
        "get_neighbors(m.02t4ykq,internet.website_owner.websites_owned)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what is the parent industry to both the state commercial banks and financial sector union of sweden ?",
      "qid": "4301917005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Financial Sector Union of Sweden": "m.0dl786",
        "State Commercial Banks": "m.03qth0q"
      },
      "s_expression": "(AND business.industry (AND (JOIN (R business.industry.child_industry) (JOIN business.industry.trade_unions m.0dl786)) (JOIN (R business.industry.child_industry) m.03qth0q)))",
      "actions": [
        "get_relations(m.0dl786)",
        "get_neighbors(m.0dl786,business.trade_union.industry)",
        "get_relations(#0)",
        "get_neighbors(#0,business.industry.child_industry)",
        "get_relations(m.03qth0q)",
        "get_neighbors(m.03qth0q,business.industry.child_industry)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qvw4k",
          "entity_name": "State Commercial Banks (commercial banking)"
        }
      ]
    },
    {
      "question": "What US Time Zone does the San Carlos Airport located in?",
      "qid": "WebQTrn-193_1b45dd54d7f220b2c4ce6e4f9874b64a_cwq",
      "source": "cwq",
      "entities": {
        "us": "m.09c7w0",
        "San Carlos Airport": "m.01ngqj"
      },
      "s_expression": "(AND (JOIN (R location.location.time_zones) m.09c7w0) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.01ngqj)))",
      "actions": [
        "get_relations(m.09c7w0)",
        "get_neighbors(m.09c7w0,location.location.time_zones)",
        "get_relations(m.01ngqj)",
        "get_neighbors(m.01ngqj,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02lcqs",
          "answer_type": "Entity",
          "entity_name": "Pacific Time Zone"
        }
      ]
    },
    {
      "question": "sml/nj and pcastl have how many programming language paradigms?",
      "qid": "3205793000000_grailqa",
      "source": "grailqa",
      "entities": {
        "sml/nj": "m.0641x3",
        "PCASTL": "m.047r16w"
      },
      "s_expression": "(COUNT (AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.0641x3) (JOIN computer.programming_language_paradigm.languages m.047r16w))))",
      "actions": [
        "get_relations(m.0641x3)",
        "get_neighbors(m.0641x3,computer.programming_language.language_paradigms)",
        "get_relations(m.047r16w)",
        "get_neighbors(m.047r16w,computer.programming_language.language_paradigms)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "abū rayḥān al-bīrūnī works in which department of university?",
      "qid": "4301362013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Abū Rayḥān al-Bīrūnī": "m.01ny93",
        "university": "m.0j_sncb"
      },
      "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.01ny93)) (JOIN (R education.university.departments) m.0j_sncb)))",
      "actions": [
        "get_relations(m.01ny93)",
        "get_neighbors(m.01ny93,education.academic.research_areas)",
        "get_relations(#0)",
        "get_neighbors(#0,education.field_of_study.academic_departments)",
        "get_relations(m.0j_sncb)",
        "get_neighbors(m.0j_sncb,education.university.departments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dl5_c_",
          "entity_name": "University of Florida Department of History"
        }
      ]
    },
    {
      "question": "there exists a cheese made from milk of cows that has the exact same texture as mascarpone cheese, which is it?",
      "qid": "4302129006000_grailqa",
      "source": "grailqa",
      "entities": {
        "cows": "m.01xq0k1",
        "mascarpone cheese": "m.01sy7q"
      },
      "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.01xq0k1) (JOIN (R food.cheese_texture.cheeses) (JOIN food.cheese_texture.cheeses m.01sy7q))))",
      "actions": [
        "get_relations(m.01xq0k1)",
        "get_neighbors(m.01xq0k1,food.cheese_milk_source.cheeses)",
        "get_relations(m.01sy7q)",
        "get_neighbors(m.01sy7q,food.cheese.texture)",
        "get_relations(#1)",
        "get_neighbors(#1,food.cheese_texture.cheeses)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.026zczj",
          "entity_name": "Red Hawk cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02h7yb3",
          "entity_name": "Mt Tam"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c4rn",
          "entity_name": "Brillat-Savarin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0f0p5x",
          "entity_name": "Castello cheeses"
        }
      ]
    },
    {
      "question": "the 1964 olympics and other olympic games in the eternal city contested which event?",
      "qid": "4300161000000_grailqa",
      "source": "grailqa",
      "entities": {
        "the eternal city": "m.06c62",
        "1964 olympics": "m.0lbbj"
      },
      "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.06c62)) (JOIN olympics.olympic_event.olympic_games_contested m.0lbbj)))",
      "actions": [
        "get_relations(m.06c62)",
        "get_neighbors(m.06c62,olympics.olympic_host_city.olympics_hosted)",
        "get_relations(#0)",
        "get_neighbors(#0,olympics.olympic_games.events)",
        "get_relations(m.0lbbj)",
        "get_neighbors(m.0lbbj,olympics.olympic_games.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk384",
          "entity_name": "Women's Long jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3lm",
          "entity_name": "Women's Discus throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk31r",
          "entity_name": "Men's Floor exercises"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk29n",
          "entity_name": "Men's Boxing, Featherweight 54 - 57 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2k4",
          "entity_name": "Women's Uneven bars"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2h8",
          "entity_name": "Women's Floor exercises"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2mh",
          "entity_name": "Women's Balance Beam"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk35h",
          "entity_name": "Men's 50m rifle 3 positions"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qy",
          "entity_name": "Women's Athletics, 800m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gnx9y",
          "entity_name": "Men's 300m Free Rifle, 3 Positions"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07hxhyf",
          "entity_name": "Women's Athletics, 80m Hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk342",
          "entity_name": "Men's 50km walk"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3cx",
          "entity_name": "Men's Épée individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07fp6sy",
          "entity_name": "Men's Weightlifting, Light Heavyweight 75-82.5kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2_w",
          "entity_name": "Men's Track cycling, Sprint individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30n",
          "entity_name": "Men's Road cycling, individual road race"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079rjhk",
          "entity_name": "Track Cycling, Men's 1000m Time Trial"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3cl",
          "entity_name": "Men's Shot put"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2ks",
          "entity_name": "Men's C-1 1000m (canoe single)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk326",
          "entity_name": "Men's 200m breaststroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2pv",
          "entity_name": "Men's Javelin throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2hx",
          "entity_name": "Men's 1500m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2pc",
          "entity_name": "Men's Discus throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2dy",
          "entity_name": "Women's Shot put"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079yv82",
          "entity_name": "Finn Class"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2bx",
          "entity_name": "Men's Weightlifting, Bantamweight  -56kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk368",
          "entity_name": "Women's High jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07hx3ww",
          "entity_name": "Men's Boxing, Welterweight 63.5-67kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9lcn",
          "entity_name": "Women's 3 metre springboard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9ld0",
          "entity_name": "Men's 3 metre springboard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9ld6",
          "entity_name": "Women's 10 metre platform"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk29t",
          "entity_name": "Men's Parallel bars"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2c_",
          "entity_name": "Men's Gymnastics, individual all-round"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2cj",
          "entity_name": "Men's Long jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2dm",
          "entity_name": "Women's Foil individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2f7",
          "entity_name": "Men's 50m pistol"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2gh",
          "entity_name": "Eventing, individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2hl",
          "entity_name": "Men's Athletics, 100m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2jp",
          "entity_name": "Men's Athletics, 5000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2lq",
          "entity_name": "Men's Foil individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2mz",
          "entity_name": "Men's Marathon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qm",
          "entity_name": "Men's Athletics, 400m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qs",
          "entity_name": "Men's 100m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2rd",
          "entity_name": "Men's Pole vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2sn",
          "entity_name": "Women's 100m backstroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2tl",
          "entity_name": "Men's Athletics, 400m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2tx",
          "entity_name": "Women's 400m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2x7",
          "entity_name": "Men's Pommel horse"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2xq",
          "entity_name": "Men's Sabre individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2yb",
          "entity_name": "Jumping, individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2yh",
          "entity_name": "Men's Athletics, 200m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2zl",
          "entity_name": "Men's Horizontal bar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk300",
          "entity_name": "Men's Hammer throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30h",
          "entity_name": "Men's Athletics, 110m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30t",
          "entity_name": "Men's 400m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32_",
          "entity_name": "Men's Triple jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32p",
          "entity_name": "Men's High jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk334",
          "entity_name": "Men's 25m rapid fire pistol"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk33m",
          "entity_name": "Women's 200m breaststroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk35z",
          "entity_name": "Men's Modern pentathlon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39d",
          "entity_name": "Men's Vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39q",
          "entity_name": "Women's 100m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39w",
          "entity_name": "Men's Athletics, 10000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3b5",
          "entity_name": "Men's Athletics, 800m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3bh",
          "entity_name": "Men's 100m backstroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3d6",
          "entity_name": "Men's 50m rifle prone"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3dj",
          "entity_name": "Men's Decathlon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3fm",
          "entity_name": "Men's 3000m steeplechase"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3kp",
          "entity_name": "Men's Rings"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3l9",
          "entity_name": "Men's Single sculls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3n5",
          "entity_name": "Men's Athletics, 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07fp6br",
          "entity_name": "Men's Weightlifting, Middleweight 67.5-75kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07fp6rz",
          "entity_name": "Men's Weightlifting, Lightweight 60-67.5kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b6t4m",
          "entity_name": "Olympic trap"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0k1nqc0",
          "entity_name": "Individual Dressage"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07fp6q_",
          "entity_name": "Men's Weightlifting, Featherweight 56-60kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07jqqdx",
          "entity_name": "Men's Boxing, Middleweight 71-75kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3jx",
          "entity_name": "Women's K-1 500m (kayak single)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2mn",
          "entity_name": "Women's Athletics, 100m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2nx",
          "entity_name": "Men's 200m butterfly"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2b8",
          "entity_name": "Men's Boxing, Bantamweight 51 - 54kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gq20z",
          "entity_name": "Men's Freestyle Wrestling, Bantamweight 52-57 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3h5",
          "entity_name": "Women's Javelin throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07hxjgm",
          "entity_name": "Men's Greco-Roman Wrestling, Bantamweight 52-57kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk371",
          "entity_name": "Men's 20km walk"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3px",
          "entity_name": "Men's Boxing, Lightweight 57 - 60kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07hr9pg",
          "entity_name": "Men's Boxing, Heavyweight +81"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk339",
          "entity_name": "Men's K-1 1000m (kayak single)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07hr9lp",
          "entity_name": "Men's Boxing, Light Welterweight 60-63.5"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2z3",
          "entity_name": "Women's Vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3nb",
          "entity_name": "Women's Gymnastics, individual all-round"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2c6",
          "entity_name": "Men's Boxing, Light Heavyweight 75 - 81kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079rl1l",
          "entity_name": "Men's Weightlifting, Middle Heavyweight 82.5-90 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07hwzbq",
          "entity_name": "Men's Boxing, Flyweight - 51"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079rjst",
          "entity_name": "Men's Greco Roman Wrestling - 52 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3nz",
          "entity_name": "Women's 100m butterfly"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07hrbh0",
          "entity_name": "Men's Freestyle Wrestling,  Flyweight -52kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gq1wj",
          "entity_name": "Men's Weightlifting, Heavyweight +90"
        }
      ]
    },
    {
      "question": "When did team owner James D. Stern's sports team first win their Championship?",
      "qid": "WebQTrn-2261_e8b7b55c54a4b3523a2a3036bd255b1a_cwq",
      "source": "cwq",
      "entities": {
        "James D. Stern": "m.0ggb8tz"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.0ggb8tz)) time.event.start_date)",
      "actions": [
        "get_relations(m.0ggb8tz)",
        "get_neighbors(m.0ggb8tz,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.08x9qv",
          "answer_type": "Entity",
          "entity_name": "1991 NBA Finals"
        }
      ]
    },
    {
      "question": "what class of automobiles is the cadillac series 65 and the model with predecessor lagonda 3-litre?",
      "qid": "4301079010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Lagonda 3-Litre": "m.0b6dj9",
        "Cadillac Series 65": "m.04f778m"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples (JOIN (R automotive.model.predecessor) m.0b6dj9)) (JOIN automotive.automotive_class.examples m.04f778m)))",
      "actions": [
        "get_relations(m.0b6dj9)",
        "get_neighbors(m.0b6dj9,automotive.model.predecessor)",
        "get_relations(#0)",
        "get_neighbors(#0,automotive.model.automotive_class)",
        "get_relations(m.04f778m)",
        "get_neighbors(m.04f778m,automotive.model.automotive_class)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01lcwm",
          "entity_name": "Luxury vehicle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.019qw9",
          "entity_name": "Convertible"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.021mp2",
          "entity_name": "Sedan"
        }
      ]
    },
    {
      "question": "how many religious texts are there that has both anglicans and church of god texts?",
      "qid": "3206221000000_grailqa",
      "source": "grailqa",
      "entities": {
        "church of god": "m.02q21kx",
        "anglicans": "m.0n2g"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of m.02q21kx) (JOIN (R religion.religion.texts) m.0n2g))))",
      "actions": [
        "get_relations(m.02q21kx)",
        "get_neighbors(m.02q21kx,religion.religion.texts)",
        "get_relations(m.0n2g)",
        "get_neighbors(m.0n2g,religion.religion.texts)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "In which timezone is the state of Texas located, more specifically Strathmore Airport and its environs?",
      "qid": "WebQTrn-1563_cab1228be4e8c16ee35a67b7ac63b264_cwq",
      "source": "cwq",
      "entities": {
        "Texas": "m.07b_l",
        "strathmore airport": "m.09slsk"
      },
      "s_expression": "(AND (JOIN (R location.location.time_zones) m.07b_l) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.09slsk)))",
      "actions": [
        "get_relations(m.07b_l)",
        "get_neighbors(m.07b_l,location.location.time_zones)",
        "get_relations(m.09slsk)",
        "get_neighbors(m.09slsk,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02hczc",
          "answer_type": "Entity",
          "entity_name": "Mountain Time Zone"
        }
      ]
    },
    {
      "question": "how many exhibition subjects are in counterpoint?",
      "qid": "4302933014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Counterpoint": "m.04_ngp3"
      },
      "s_expression": "(COUNT (AND exhibitions.exhibition_subject (JOIN (R exhibitions.exhibition.subjects) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) (JOIN (R exhibitions.exhibition.exhibition_types) m.04_ngp3)))))",
      "actions": [
        "get_relations(m.04_ngp3)",
        "get_neighbors(m.04_ngp3,exhibitions.exhibition.exhibition_types)",
        "get_relations(#0)",
        "get_neighbors(#0,exhibitions.type_of_exhibition.exhibitions_of_this_type)",
        "get_relations(#1)",
        "get_neighbors(#1,exhibitions.exhibition.subjects)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "602"
        }
      ]
    },
    {
      "question": "the rover 800 series and the model with predecesser mg 7 is included in what class of automobiles?",
      "qid": "4301079003000_grailqa",
      "source": "grailqa",
      "entities": {
        "MG 7": "m.02pzzc7",
        "Rover 800 Series": "m.02t3hb"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples (JOIN (R automotive.model.predecessor) m.02pzzc7)) (JOIN automotive.automotive_class.examples m.02t3hb)))",
      "actions": [
        "get_relations(m.02pzzc7)",
        "get_neighbors(m.02pzzc7,automotive.model.predecessor)",
        "get_relations(#0)",
        "get_neighbors(#0,automotive.model.automotive_class)",
        "get_relations(m.02t3hb)",
        "get_neighbors(m.02t3hb,automotive.model.automotive_class)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.021mp2",
          "entity_name": "Sedan"
        }
      ]
    },
    {
      "question": "which songs was the most recently performed?",
      "qid": "4303240011000_grailqa",
      "source": "grailqa",
      "entities": {
        "songs": "m.074ft"
      },
      "s_expression": "(ARGMAX (AND music.composition (JOIN music.composition.form (JOIN music.compositional_form.superforms m.074ft))) music.composition.date_of_first_performance)",
      "actions": [
        "get_relations(m.074ft)",
        "get_neighbors(m.074ft,music.compositional_form.subforms)",
        "get_relations(#0)",
        "get_neighbors(#0,music.compositional_form.compositions)",
        "get_attributes(#1)",
        "argmax(#1,music.composition.date_of_first_performance)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.064xclc",
          "entity_name": "Raspberry Pie"
        }
      ]
    },
    {
      "question": "the rolls-royce and bentley 4 litre are in which class of automobiles?",
      "qid": "4301079012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Bentley 4 Litre": "m.0b2823",
        "rolls-royce": "m.03zlf3"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples (JOIN (R automotive.model.predecessor) m.0b2823)) (JOIN automotive.automotive_class.examples m.03zlf3)))",
      "actions": [
        "get_relations(m.0b2823)",
        "get_neighbors(m.0b2823,automotive.model.predecessor)",
        "get_relations(#0)",
        "get_neighbors(#0,automotive.model.automotive_class)",
        "get_relations(m.03zlf3)",
        "get_neighbors(m.03zlf3,automotive.model.automotive_class)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01lcwm",
          "entity_name": "Luxury vehicle"
        }
      ]
    },
    {
      "question": "When was the last World Series held in the Sloan Park sports arena?",
      "qid": "WebQTrn-682_6d4448f6a30576186670b7bd2be505db_cwq",
      "source": "cwq",
      "entities": {
        "Sloan Park": "m.0h975w3"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.0h975w3)) time.event.start_date)",
      "actions": [
        "get_relations(m.0h975w3)",
        "get_neighbors(m.0h975w3,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04tg8s",
          "answer_type": "Entity",
          "entity_name": "1908 World Series"
        }
      ]
    },
    {
      "question": "What location contains an airport that serves Nijmegen and where Turkish people originated?",
      "qid": "WebQTest-903_dfb6c97ac9bf2f0ac07f27dd80f9edc2_cwq",
      "source": "cwq",
      "entities": {
        "Turkish people": "m.0hb7h_z",
        "Nijmegen": "m.05g2b"
      },
      "s_expression": "(AND (JOIN (R people.ethnicity.geographic_distribution) m.0hb7h_z) (JOIN location.location.contains (JOIN aviation.airport.serves m.05g2b)))",
      "actions": [
        "get_relations(m.0hb7h_z)",
        "get_neighbors(m.0hb7h_z,people.ethnicity.geographic_distribution)",
        "get_relations(m.05g2b)",
        "get_neighbors(m.05g2b,location.location.nearby_airports)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.containedby)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0345h",
          "answer_type": "Entity",
          "entity_name": "Germany"
        }
      ]
    },
    {
      "question": "what breed has the same temperament as halden hound and damchi?",
      "qid": "4300795015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Halden Hound": "m.04swl7y",
        "Damchi": "g.1203ng2yx"
      },
      "s_expression": "(AND biology.animal_breed (JOIN biology.animal_breed.temperament (AND (JOIN (R biology.animal_breed.temperament) m.04swl7y) (JOIN biology.breed_temperament.breeds g.1203ng2yx))))",
      "actions": [
        "get_relations(m.04swl7y)",
        "get_neighbors(m.04swl7y,biology.animal_breed.temperament)",
        "get_relations(g.1203ng2yx)",
        "get_neighbors(g.1203ng2yx,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,biology.breed_temperament.breeds)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01qn1p",
          "entity_name": "English Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01dv7j",
          "entity_name": "Schipperke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06j1z7",
          "entity_name": "Chippiparai"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01s7fj",
          "entity_name": "Shih Tzu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01x5q1",
          "entity_name": "Jämthund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0353qr",
          "entity_name": "Dandie Dinmont Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.039rzl",
          "entity_name": "Irish Setter"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03fyyd",
          "entity_name": "Shar Pei"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04dm6",
          "entity_name": "Komondor"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0778jb",
          "entity_name": "Redbone Coonhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cbgst",
          "entity_name": "Kintamani"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01przn",
          "entity_name": "Mackenzie River husky"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0363rs",
          "entity_name": "Toy Manchester Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03y6bvt",
          "entity_name": "Finnish Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yk8l",
          "entity_name": "Tibetan Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f2yc",
          "entity_name": "Anatolian Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05p5nvc",
          "entity_name": "Petit Bleu de Gascogne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07bln6",
          "entity_name": "Curly Coated Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07t_h2",
          "entity_name": "Africanis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09h20b",
          "entity_name": "Rafeiro do Alentejo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c1zmz",
          "entity_name": "Central Asian Shepherd Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j7vm",
          "entity_name": "Kuvasz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0ysvz",
          "entity_name": "Louisiana Catahoula Leopard Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.011l1",
          "entity_name": "Afghan Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.018ywq",
          "entity_name": "Scottish Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01_gx_",
          "entity_name": "Yorkshire Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p89l",
          "entity_name": "Sarplaninac"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025s7vs",
          "entity_name": "Briquet Griffon Vendéen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.028y5g",
          "entity_name": "Saarloos wolfdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02f1fz",
          "entity_name": "West Highland White Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kn5w",
          "entity_name": "Entlebucher Mountain Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02q6wxt",
          "entity_name": "Karakachan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02rf9c3",
          "entity_name": "Central Anatolian Shepherd Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ryncw",
          "entity_name": "Ariege Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xv1",
          "entity_name": "Lakeland Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.035405",
          "entity_name": "Finnish Spitz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0355ff",
          "entity_name": "Greenland Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03c51t7",
          "entity_name": "Welsh Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03dszr",
          "entity_name": "Akbash dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04371y",
          "entity_name": "Kangal dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045tty",
          "entity_name": "Japanese Chin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052h3c",
          "entity_name": "Karelian Bear Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06m828",
          "entity_name": "Petit Basset Griffon Vendéen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06v_sc",
          "entity_name": "American Foxhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.089vcl",
          "entity_name": "Thai Ridgeback"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c40t",
          "entity_name": "Chow Chow"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03ys4",
          "entity_name": "Ibizan Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0fxnkq",
          "entity_name": "Moscow Watchdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01j0g",
          "entity_name": "Borzoi"
        }
      ]
    },
    {
      "question": "What invasion by Hitler started the war used as the subject of the film Sherlock Holmes and the Voice of Terror?",
      "qid": "WebQTest-1294_99dba9274e8d6c826fdb25827fe613b3_cwq",
      "source": "cwq",
      "entities": {
        "Sherlock Holmes and the Voice of Terror": "m.02r8kxp"
      },
      "s_expression": "(ARGMIN (JOIN (R time.event.includes_event) (JOIN film.film_subject.films m.02r8kxp)) time.event.start_date)",
      "actions": [
        "get_relations(m.02r8kxp)",
        "get_neighbors(m.02r8kxp,film.film.subjects)",
        "get_relations(#0)",
        "get_neighbors(#0,time.event.includes_event)",
        "get_attributes(#1)",
        "argmin(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0gmbk71",
          "answer_type": "Entity",
          "entity_name": "Battle of Falmouth"
        }
      ]
    },
    {
      "question": "which astronomical discovery is published and discovered in the astronomical observatory of dwarf planet pluto?",
      "qid": "4300765000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Published": "m.03ywyv_",
        "dwarf planet pluto": "m.0c3qy"
      },
      "s_expression": "(AND astronomy.astronomical_discovery (AND (JOIN (R astronomy.astronomical_discovery_status.objects) m.03ywyv_) (JOIN astronomy.astronomical_discovery.discovery_site (JOIN (R astronomy.astronomical_discovery.discovery_site) m.0c3qy))))",
      "actions": [
        "get_relations(m.03ywyv_)",
        "get_neighbors(m.03ywyv_,astronomy.astronomical_discovery_status.objects)",
        "get_relations(m.0c3qy)",
        "get_neighbors(m.0c3qy,astronomy.astronomical_discovery.discovery_site)",
        "get_relations(#1)",
        "get_neighbors(#1,astronomy.astronomical_observatory.discoveries)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.070g26",
          "entity_name": "7166 Kennedy"
        }
      ]
    },
    {
      "question": "what other quotations from jihan, froth daughter share the same addressee as \"i want to live like a man.\" ?",
      "qid": "4302343007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Jihan, Froth Daughter": "m.0bxttn0",
        "\"I want to live like a man.\"": "m.0j3x8j6"
      },
      "s_expression": "(AND media_common.quotation_addressee (AND (JOIN media_common.quotation_addressee.quotations (JOIN (R fictional_universe.fictional_character.quotations) m.0bxttn0)) (JOIN media_common.quotation_addressee.quotations m.0j3x8j6)))",
      "actions": [
        "get_relations(m.0bxttn0)",
        "get_neighbors(m.0bxttn0,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.addressee)",
        "get_relations(m.0j3x8j6)",
        "get_neighbors(m.0j3x8j6,media_common.quotation.addressee)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bxj80p",
          "entity_name": "Tempus"
        }
      ]
    },
    {
      "question": "what isos are currently supported by nikon coolpix s700 cameras from nikon corp.?",
      "qid": "4304013000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Nikon Coolpix S700": "m.03q2q_4",
        "nikon corp.": "m.03pmfw"
      },
      "s_expression": "(AND digicams.camera_iso (AND (JOIN digicams.camera_iso.cameras m.03q2q_4) (JOIN (R digicams.digital_camera.iso_setting) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.03pmfw))))",
      "actions": [
        "get_relations(m.03q2q_4)",
        "get_neighbors(m.03q2q_4,digicams.digital_camera.iso_setting)",
        "get_relations(m.03pmfw)",
        "get_neighbors(m.03pmfw,digicams.camera_sensor_manufacturer.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.iso_setting)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04l497s",
          "entity_name": "2000"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04nrl44",
          "entity_name": "160"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04nrl4h",
          "entity_name": "320"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04p7pwg",
          "entity_name": "130"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04pf295",
          "entity_name": "120"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_x",
          "entity_name": "100"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_g",
          "entity_name": "400"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_p",
          "entity_name": "200"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg4v",
          "entity_name": "3200"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg51",
          "entity_name": "1600"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg58",
          "entity_name": "800"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04npjzb",
          "entity_name": "1000"
        }
      ]
    },
    {
      "question": "hermann oberth works in what department of california institute of technology",
      "qid": "4301362000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Hermann Oberth": "m.0lyjt",
        "California Institute of Technology": "m.02sjgpq"
      },
      "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.0lyjt)) (JOIN (R education.university.departments) m.02sjgpq)))",
      "actions": [
        "get_relations(m.0lyjt)",
        "get_neighbors(m.0lyjt,education.academic.research_areas)",
        "get_relations(#0)",
        "get_neighbors(#0,education.field_of_study.academic_departments)",
        "get_relations(m.02sjgpq)",
        "get_neighbors(m.02sjgpq,education.university.departments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g4w6d4",
          "entity_name": "Caltech Department of Physics"
        }
      ]
    },
    {
      "question": "What year was the Superbowl won by the team owned by the Paul G. Allen Family Foundation?",
      "qid": "WebQTest-163_395b21b08e465b8c159e7c913b06be6e_cwq",
      "source": "cwq",
      "entities": {
        "superbowl": "m.06x5s",
        "Paul G. Allen Family Foundation": "m.03bzsxk"
      },
      "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.03bzsxk)) (JOIN time.event.instance_of_recurring_event m.06x5s))",
      "actions": [
        "get_relations(m.03bzsxk)",
        "get_neighbors(m.03bzsxk,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,time.recurring_event.instances)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.09k4qg3",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLVIII"
        }
      ]
    },
    {
      "question": "what dug dosage form exist for drugs formulated from candesartan cilexetil and has active ingredient formic acid?",
      "qid": "5400022006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Candesartan cilexetil": "m.0hqyg48",
        "Formic acid": "m.02kc0zc"
      },
      "s_expression": "(AND medicine.drug_dosage_form (AND (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.formulation_of m.0hqyg48)) (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.active_ingredient_moieties m.02kc0zc))))",
      "actions": [
        "get_relations(m.0hqyg48)",
        "get_neighbors(m.0hqyg48,medicine.drug.marketed_formulations)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.drug_formulation.dosage_form)",
        "get_relations(m.02kc0zc)",
        "get_neighbors(m.02kc0zc,medicine.drug_ingredient.active_moiety_of_formulation)",
        "get_relations(#2)",
        "get_neighbors(#2,medicine.drug_formulation.dosage_form)",
        "intersection(#1,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0kdn9",
          "entity_name": "Tablet"
        }
      ]
    },
    {
      "question": "bindu a. bambah works in which department of kaiserslautern university of technology?",
      "qid": "4301362009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Bindu A. Bambah": "m.0_v65_v",
        "Kaiserslautern University of Technology": "m.0df2pf"
      },
      "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.0_v65_v)) (JOIN (R education.university.departments) m.0df2pf)))",
      "actions": [
        "get_relations(m.0_v65_v)",
        "get_neighbors(m.0_v65_v,education.academic.research_areas)",
        "get_relations(#0)",
        "get_neighbors(#0,education.field_of_study.academic_departments)",
        "get_relations(m.0df2pf)",
        "get_neighbors(m.0df2pf,education.university.departments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0clz9h3",
          "entity_name": "TU Kaiserslautern Department of Physics"
        }
      ]
    },
    {
      "question": "which autoimmune disease treatments come with the side effects of facial redness?",
      "qid": "4301182005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Autoimmune Disease": "m.04dx3qn",
        "Facial Redness": "m.07t7mr3"
      },
      "s_expression": "(AND medicine.medical_treatment (AND (JOIN medicine.medical_treatment.side_effects (JOIN medicine.symptom.parent_symptom m.07t7mr3)) (JOIN medicine.medical_treatment.used_to_treat m.04dx3qn)))",
      "actions": [
        "get_relations(m.07t7mr3)",
        "get_neighbors(m.07t7mr3,medicine.symptom.includes_symptoms)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.symptom.side_effect_of)",
        "get_relations(m.04dx3qn)",
        "get_neighbors(m.04dx3qn,medicine.disease.treatments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02m3m3",
          "entity_name": "Prednisone"
        }
      ]
    },
    {
      "question": "What type of political system is in English and where Emanuel Lasker was born?",
      "qid": "WebQTrn-2257_3ce332b703593e71708a5604865c5758_cwq",
      "source": "cwq",
      "entities": {
        "English": "m.02jx1",
        "Emanuel Lasker": "m.01kfm7"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.02jx1) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
      "actions": [
        "get_relations(m.02jx1)",
        "get_neighbors(m.02jx1,location.country.form_of_government)",
        "get_relations(m.01kfm7)",
        "get_neighbors(m.01kfm7,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "eiffel and dolittle have how many programming language paradigms combined?",
      "qid": "3205793009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Eiffel": "m.02p6w",
        "Dolittle": "m.0x1xg32"
      },
      "s_expression": "(COUNT (AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.02p6w) (JOIN computer.programming_language_paradigm.languages m.0x1xg32))))",
      "actions": [
        "get_relations(m.02p6w)",
        "get_neighbors(m.02p6w,computer.programming_language.language_paradigms)",
        "get_relations(m.0x1xg32)",
        "get_neighbors(m.0x1xg32,computer.programming_language.language_paradigms)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what star cluster is the most distant?",
      "qid": "4303393001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Star cluster": "m.072jr"
      },
      "s_expression": "(ARGMAX (AND astronomy.celestial_object (JOIN (R astronomy.celestial_object_category.objects) (JOIN (R astronomy.celestial_object_category.subcategories) m.072jr))) astronomy.celestial_object.cosmological_distance)",
      "actions": [
        "get_relations(m.072jr)",
        "get_neighbors(m.072jr,astronomy.celestial_object_category.subcategories)",
        "get_relations(#0)",
        "get_neighbors(#0,astronomy.celestial_object_category.objects)",
        "get_attributes(#1)",
        "argmax(#1,astronomy.celestial_object.cosmological_distance)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0fmsd",
          "entity_name": "Pleiades"
        }
      ]
    },
    {
      "question": "what religion shares practices with mormon and is a part of islam?",
      "qid": "4300140007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Islam": "m.0flw86",
        "mormon": "m.058x5"
      },
      "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.058x5)) (JOIN religion.religion.is_part_of m.0flw86)))",
      "actions": [
        "get_relations(m.058x5)",
        "get_neighbors(m.058x5,religion.religion.practices)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religious_practice.practice_of)",
        "get_relations(m.0flw86)",
        "get_neighbors(m.0flw86,religion.religion.includes)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.078tg",
          "entity_name": "Sunni Islam"
        }
      ]
    },
    {
      "question": "what was the first programming language influenced by another parc language?",
      "qid": "4303199003000_grailqa",
      "source": "grailqa",
      "entities": {
        "PARC": "m.0878f"
      },
      "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.0878f))) computer.programming_language.introduced)",
      "actions": [
        "get_relations(m.0878f)",
        "get_neighbors(m.0878f,computer.programming_language_developer.programming_languages_developed)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.influenced)",
        "get_attributes(#1)",
        "argmin(#1,computer.programming_language.introduced)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01zpg",
          "entity_name": "COBOL"
        }
      ]
    },
    {
      "question": "which visual art form is made by charles g. shaw besides classical painting?",
      "qid": "4302283014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Charles G. Shaw": "m.0cj2mx",
        "classical painting": "m.05qdh"
      },
      "s_expression": "(AND visual_art.visual_art_form (JOIN (R visual_art.artwork.art_form) (AND (JOIN visual_art.artwork.artist m.0cj2mx) (JOIN visual_art.artwork.art_form m.05qdh))))",
      "actions": [
        "get_relations(m.0cj2mx)",
        "get_neighbors(m.0cj2mx,visual_art.visual_artist.artworks)",
        "get_relations(m.05qdh)",
        "get_neighbors(m.05qdh,visual_art.visual_art_form.artworks)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,visual_art.artwork.art_form)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02nnps",
          "entity_name": "Relief"
        }
      ]
    },
    {
      "question": "what kind of school is associated with st paul's urdu high school and the cairn magazine's publisher?",
      "qid": "4301751012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Cairn Magazine": "m.010pldkg",
        "St Paul's Urdu High School": "m.0cztjn"
      },
      "s_expression": "(AND education.school_category (AND (JOIN (R education.educational_institution.school_type) (JOIN (R education.school_magazine.school) m.010pldkg)) (JOIN (R education.educational_institution.school_type) m.0cztjn)))",
      "actions": [
        "get_relations(m.010pldkg)",
        "get_neighbors(m.010pldkg,education.school_magazine.school)",
        "get_relations(#0)",
        "get_neighbors(#0,education.educational_institution.school_type)",
        "get_relations(m.0cztjn)",
        "get_neighbors(m.0cztjn,education.educational_institution.school_type)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01rs41",
          "entity_name": "Private school"
        }
      ]
    },
    {
      "question": "what other forms of visual art were made by jean-jacques clérion other than bas-relief?",
      "qid": "4302283011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Jean-Jacques Clérion": "m.03d1zzb",
        "Bas-relief": "m.01pkk0"
      },
      "s_expression": "(AND visual_art.visual_art_form (JOIN (R visual_art.artwork.art_form) (AND (JOIN visual_art.artwork.artist m.03d1zzb) (JOIN visual_art.artwork.art_form m.01pkk0))))",
      "actions": [
        "get_relations(m.03d1zzb)",
        "get_neighbors(m.03d1zzb,visual_art.visual_artist.artworks)",
        "get_relations(m.01pkk0)",
        "get_neighbors(m.01pkk0,visual_art.visual_art_form.artworks)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,visual_art.artwork.art_form)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.06msq",
          "entity_name": "Sculpture"
        }
      ]
    },
    {
      "question": "Which influence of Albert Einstein was influenced by Melanie Klein?",
      "qid": "WebQTest-1781_5dcd3d0995310bd9bcaea14ff53b887e_cwq",
      "source": "cwq",
      "entities": {
        "Albert Einstein": "m.0jcx",
        "Melanie Klein": "m.014shr"
      },
      "s_expression": "(AND (JOIN (R influence.influence_node.influenced_by) m.0jcx) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.014shr)))",
      "actions": [
        "get_relations(m.0jcx)",
        "get_neighbors(m.0jcx,influence.influence_node.influenced_by)",
        "get_relations(m.014shr)",
        "get_neighbors(m.014shr,influence.influence_node.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.015n8",
          "answer_type": "Entity",
          "entity_name": "Baruch Spinoza"
        }
      ]
    },
    {
      "question": "drugs formulated from naloxone and having active ingredient enalaprilat have what dug dosage form exist?",
      "qid": "5400022007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Naloxone": "m.011_yk",
        "Enalaprilat": "m.0gfdnjk"
      },
      "s_expression": "(AND medicine.drug_dosage_form (AND (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.formulation_of m.011_yk)) (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.active_ingredient_moieties m.0gfdnjk))))",
      "actions": [
        "get_relations(m.011_yk)",
        "get_neighbors(m.011_yk,medicine.drug.marketed_formulations)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.drug_formulation.dosage_form)",
        "get_relations(m.0gfdnjk)",
        "get_neighbors(m.0gfdnjk,medicine.drug_ingredient.active_moiety_of_formulation)",
        "get_relations(#2)",
        "get_neighbors(#2,medicine.drug_formulation.dosage_form)",
        "intersection(#1,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hqyxrs",
          "entity_name": "Injectable solution"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kdvcr",
          "entity_name": "Injectable"
        }
      ]
    },
    {
      "question": "what is the number of amusement park areas in florida and disneyland park parks?",
      "qid": "3206299002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Disneyland Park": "m.04cj6k",
        "florida": "m.02mv6p"
      },
      "s_expression": "(COUNT (AND amusement_parks.amusement_park_area (AND (JOIN amusement_parks.amusement_park_area.parks m.04cj6k) (JOIN amusement_parks.amusement_park_area.parks m.02mv6p))))",
      "actions": [
        "get_relations(m.04cj6k)",
        "get_neighbors(m.04cj6k,amusement_parks.park.areas)",
        "get_relations(m.02mv6p)",
        "get_neighbors(m.02mv6p,amusement_parks.park.areas)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "3"
        }
      ]
    },
    {
      "question": "What drugs were in the music producer's system who produced \"Whitney: The Greatest Hits\" when she died?",
      "qid": "WebQTrn-2600_a1deaaa1100a879d4f3316fcb82bbed8_cwq",
      "source": "cwq",
      "entities": {
        "Drug overdose": "m.01tf_6",
        "Whitney: The Greatest Hits": "m.0bflbsy"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.producer.releases_produced m.0bflbsy)) (JOIN people.cause_of_death.parent_cause_of_death m.01tf_6))",
      "actions": [
        "get_relations(m.0bflbsy)",
        "get_neighbors(m.0bflbsy,music.release.producers)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.01tf_6)",
        "get_neighbors(m.01tf_6,people.cause_of_death.includes_causes_of_death)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02nx6jb",
          "answer_type": "Entity",
          "entity_name": "Cocaine overdose"
        }
      ]
    },
    {
      "question": "What kind of government system does Canada, where Emanuel Lasker was born in, have?",
      "qid": "WebQTrn-1541_3ce332b703593e71708a5604865c5758_cwq",
      "source": "cwq",
      "entities": {
        "Canada": "m.0d060g",
        "Emanuel Lasker": "m.01kfm7"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0d060g) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
      "actions": [
        "get_relations(m.0d060g)",
        "get_neighbors(m.0d060g,location.country.form_of_government)",
        "get_relations(m.01kfm7)",
        "get_neighbors(m.01kfm7,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "which breeds are similar in temperament to the japanese tosa and sarplaninac?",
      "qid": "4300795003000_grailqa",
      "source": "grailqa",
      "entities": {
        "japanese tosa": "m.06smkm",
        "Sarplaninac": "m.01p89l"
      },
      "s_expression": "(AND biology.animal_breed (JOIN biology.animal_breed.temperament (AND (JOIN (R biology.animal_breed.temperament) m.06smkm) (JOIN biology.breed_temperament.breeds m.01p89l))))",
      "actions": [
        "get_relations(m.06smkm)",
        "get_neighbors(m.06smkm,biology.animal_breed.temperament)",
        "get_relations(m.01p89l)",
        "get_neighbors(m.01p89l,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,biology.breed_temperament.breeds)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.027dd3t",
          "entity_name": "Black Norwegian Elkhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02r4blp",
          "entity_name": "Braque d'Auvergne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01qn1p",
          "entity_name": "English Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p39m",
          "entity_name": "American Water Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01sc6y",
          "entity_name": "Patterdale Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03htgw",
          "entity_name": "Koolie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03ysz",
          "entity_name": "Italian Greyhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05sfy0",
          "entity_name": "Löwchen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08s0ws",
          "entity_name": "Boykin Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gz2b",
          "entity_name": "Australian Kelpie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0km3f",
          "entity_name": "Labrador Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kwdc",
          "entity_name": "German Wirehaired Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gx1zf",
          "entity_name": "Billy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01t032",
          "entity_name": "Golden Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.020z66",
          "entity_name": "Miniature Schnauzer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0182yx",
          "entity_name": "Shetland Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0km5c",
          "entity_name": "German Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01cx_v",
          "entity_name": "Chesapeake Bay Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01j0x",
          "entity_name": "Basenji"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01kv93",
          "entity_name": "Staffordshire Bull Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p5rd",
          "entity_name": "Bernese Mountain Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01s7fj",
          "entity_name": "Shih Tzu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.020z5t",
          "entity_name": "English Springer Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0271kpq",
          "entity_name": "Spanish Water Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02_73c",
          "entity_name": "Rat Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02cyl6",
          "entity_name": "Maltese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kf24",
          "entity_name": "Australian Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kgrx",
          "entity_name": "Cardigan Welsh Corgi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kw9d",
          "entity_name": "German Shorthaired Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02nscg",
          "entity_name": "Bearded Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02rfz5",
          "entity_name": "Irish Soft-coated Wheaten Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02vjrc",
          "entity_name": "Groenendael"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wbf7",
          "entity_name": "Bedlington Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.031pqh",
          "entity_name": "Peruvian Hairless Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0353h4",
          "entity_name": "Border Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.035xn5",
          "entity_name": "Toy Fox Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_vlr",
          "entity_name": "Smooth Fox Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03d12",
          "entity_name": "Greyhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03jjm4",
          "entity_name": "Norwich Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03ydd_",
          "entity_name": "Havanese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0403wp9",
          "entity_name": "Muggin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0410k_5",
          "entity_name": "Treeing Tennessee Brindle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04jj62w",
          "entity_name": "Llewellyn"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04prkf",
          "entity_name": "Small Münsterländer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04swlxt",
          "entity_name": "Hellenikos Ichnilatis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.057_4d",
          "entity_name": "Canadian Eskimo Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05tbqb",
          "entity_name": "Coton de Tulear"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.074pqh",
          "entity_name": "Spanish Mastiff"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0773fb",
          "entity_name": "Treeing Walker Coonhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07dx0m",
          "entity_name": "Japanese Spitz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08626",
          "entity_name": "Whippet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bllpv",
          "entity_name": "Puggle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dpx6y",
          "entity_name": "German Longhaired Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0fl887",
          "entity_name": "Braque du Bourbonnais"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gvx7",
          "entity_name": "Pharaoh Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04p3f7",
          "entity_name": "Standard Schnauzer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1203ng2yx",
          "entity_name": "Damchi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.017lw7",
          "entity_name": "American Eskimo Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01dj7",
          "entity_name": "Beagle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01llgk",
          "entity_name": "Boxer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p33b",
          "entity_name": "Mudi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p85j",
          "entity_name": "Barbet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pq45",
          "entity_name": "Chinook"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01przn",
          "entity_name": "Mackenzie River husky"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.020dr1",
          "entity_name": "Bluetick coonhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026067b",
          "entity_name": "Guejae Gae"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026qz0j",
          "entity_name": "Polish Hunting Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0285t83",
          "entity_name": "German Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02fvym",
          "entity_name": "Goldendoodle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02fxgn",
          "entity_name": "Cockapoo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kfwr",
          "entity_name": "Poodle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ktbm",
          "entity_name": "Smooth Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kvr1",
          "entity_name": "Puli"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02n_s4",
          "entity_name": "Korean Jindo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pp4mc",
          "entity_name": "Bohemian Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qx4jn",
          "entity_name": "IrishJacks"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02x9dk",
          "entity_name": "Boston Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02xlz3",
          "entity_name": "Bergamasco Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02z2jdn",
          "entity_name": "Beagador"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02z57c",
          "entity_name": "Cairn Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xnp",
          "entity_name": "Welsh Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0363rs",
          "entity_name": "Toy Manchester Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03b6hk",
          "entity_name": "Catalan Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03b8_5",
          "entity_name": "Brittany"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03grqp",
          "entity_name": "Drentse Patrijshond"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03gt33k",
          "entity_name": "Tamaskan Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03h71r",
          "entity_name": "Bouvier des Flandres"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03nrh1z",
          "entity_name": "Canadian Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yk8l",
          "entity_name": "Tibetan Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0408cgh",
          "entity_name": "Stephens Cur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0410kz_",
          "entity_name": "Schapendoes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.044lwh",
          "entity_name": "Irish Water Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f2yc",
          "entity_name": "Anatolian Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04mhks",
          "entity_name": "Jagdterrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04svlc5",
          "entity_name": "Braque du Puy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04sxbdx",
          "entity_name": "Mullins Feist"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04sxbjk",
          "entity_name": "Parnell's Carolina Cur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05z8jf",
          "entity_name": "Shikoku"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.076zg",
          "entity_name": "Saluki"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07bln6",
          "entity_name": "Curly Coated Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07p7st",
          "entity_name": "Portuguese Podengo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07vgwn",
          "entity_name": "Pumi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08pb1g",
          "entity_name": "Australian Stumpy Tail Cattle Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b26w3",
          "entity_name": "Schnoodle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b6c67",
          "entity_name": "German Pinscher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bq2r1",
          "entity_name": "Indian Spitz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c3k58",
          "entity_name": "Pražský Krysařík"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c8gtz",
          "entity_name": "Valley Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cqpth",
          "entity_name": "Hortaya borzaya"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dbk_j",
          "entity_name": "Kai Ken"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0h01s5",
          "entity_name": "Skye Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hkfc",
          "entity_name": "Kooikerhondje"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j7vm",
          "entity_name": "Kuvasz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0ysvz",
          "entity_name": "Louisiana Catahoula Leopard Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0blw4s",
          "entity_name": "Huntaway"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.016wfy",
          "entity_name": "Pomeranian"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.017t3p",
          "entity_name": "Airedale Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01_gx_",
          "entity_name": "Yorkshire Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01fgs3",
          "entity_name": "Boerboel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01j7n4",
          "entity_name": "Swedish Vallhund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01k9j2",
          "entity_name": "Mexican Hairless Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p900",
          "entity_name": "Beauceron"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pkw7",
          "entity_name": "Papillon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025_s6d",
          "entity_name": "Croatian Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025_sbw",
          "entity_name": "French Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026nbpz",
          "entity_name": "Mountain View Cur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.028br6g",
          "entity_name": "French Brittany"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02_70q",
          "entity_name": "Briard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02_jdw",
          "entity_name": "Portuguese Water Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kh72",
          "entity_name": "Parson Russell Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kn5w",
          "entity_name": "Entlebucher Mountain Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02l61f",
          "entity_name": "Rough Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pl0tr",
          "entity_name": "Dorgi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ppbk1",
          "entity_name": "American English Coonhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02q6wxt",
          "entity_name": "Karakachan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02rjc05",
          "entity_name": "Dalmatian"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02xp9c",
          "entity_name": "Miniature Australian Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xlb",
          "entity_name": "Irish Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xv1",
          "entity_name": "Lakeland Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.035405",
          "entity_name": "Finnish Spitz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.038wvd",
          "entity_name": "Toy Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03c51t7",
          "entity_name": "Welsh Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03dszr",
          "entity_name": "Akbash dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03f84m",
          "entity_name": "American Hairless Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03fqgz",
          "entity_name": "Australian Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03g_78s",
          "entity_name": "Gaddi Kutta"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03gymyk",
          "entity_name": "Vikhan Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03j7p3",
          "entity_name": "Old English Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l04k",
          "entity_name": "Nova Scotia Duck Tolling Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03nn344",
          "entity_name": "Catahoula Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03vrbz",
          "entity_name": "Lhasa Apso"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0413r8v",
          "entity_name": "Treeing Cur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045tty",
          "entity_name": "Japanese Chin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04q65n",
          "entity_name": "Giant Schnauzer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04y09b",
          "entity_name": "Landseer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.054kbj",
          "entity_name": "Utonagan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.055br8",
          "entity_name": "Thai Bangkaew Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05qgc4",
          "entity_name": "Polish Lowland Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05y5lx",
          "entity_name": "Maremma Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05z86m",
          "entity_name": "Lancashire Heeler"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06g210",
          "entity_name": "Canaan Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06pq2r",
          "entity_name": "Doberman Pinscher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06v_sc",
          "entity_name": "American Foxhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.071jj",
          "entity_name": "Siberian Husky"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.076_n",
          "entity_name": "Sloughi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.082x3k",
          "entity_name": "Eurasier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.089vcl",
          "entity_name": "Thai Ridgeback"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08kkns",
          "entity_name": "Plott Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08pmt0",
          "entity_name": "Alaskan Klee Kai"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dflqz",
          "entity_name": "Blue Lacy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g0rch",
          "entity_name": "Danish Swedish Farmdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gz1d",
          "entity_name": "English Setter"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0pwdp",
          "entity_name": "Border Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01d7fl",
          "entity_name": "Jack Russell Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02bp0t",
          "entity_name": "Pekingese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kwjt",
          "entity_name": "Weimaraner"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02vjwg",
          "entity_name": "Tervuren"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0353wm",
          "entity_name": "English Toy Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03cr7fw",
          "entity_name": "Morkie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03w0j9",
          "entity_name": "Tibetan Mastiff"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03ys4",
          "entity_name": "Ibizan Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.049jr6",
          "entity_name": "American Pit Bull Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06c5rq",
          "entity_name": "Grand Bleu de Gascogne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c779w",
          "entity_name": "Berger Picard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0fxnkq",
          "entity_name": "Moscow Watchdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01j0g",
          "entity_name": "Borzoi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.018g_l",
          "entity_name": "Rhodesian Ridgeback"
        }
      ]
    },
    {
      "question": "what political ideology do the people's national party and the south australian state election, 2002 follow?",
      "qid": "4302370012000_grailqa",
      "source": "grailqa",
      "entities": {
        "South Australian state election, 2002": "m.0b9lp1",
        "People's National Party": "m.01d5dd"
      },
      "s_expression": "(AND government.political_ideology (AND (JOIN government.political_ideology.political_parties (JOIN (R government.parliamentary_election.government_formed_by) m.0b9lp1)) (JOIN (R government.political_party.ideology) m.01d5dd)))",
      "actions": [
        "get_relations(m.0b9lp1)",
        "get_neighbors(m.0b9lp1,government.parliamentary_election.government_formed_by)",
        "get_relations(#0)",
        "get_neighbors(#0,government.political_party.ideology)",
        "get_relations(m.01d5dd)",
        "get_neighbors(m.01d5dd,government.political_party.ideology)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.06qnz",
          "entity_name": "Social democracy"
        }
      ]
    },
    {
      "question": "what is the name of the most recently formed cyclone in the same category as typhoon haiyan?",
      "qid": "4303808015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Typhoon Haiyan": "m.0z2p66v"
      },
      "s_expression": "(ARGMAX (AND meteorology.tropical_cyclone (JOIN meteorology.tropical_cyclone.category (JOIN (R meteorology.tropical_cyclone.category) m.0z2p66v))) meteorology.tropical_cyclone.formed)",
      "actions": [
        "get_relations(m.0z2p66v)",
        "get_neighbors(m.0z2p66v,meteorology.tropical_cyclone.category)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
        "get_attributes(#1)",
        "argmax(#1,meteorology.tropical_cyclone.formed)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0n49xww",
          "entity_name": "Typhoon Sanba"
        }
      ]
    },
    {
      "question": "tell me the subject of the following quote to believe only possibilities is not faith, but mere philosophy. which was quoted by angel of remembrance",
      "qid": "4300443009000_grailqa",
      "source": "grailqa",
      "entities": {
        "To believe only possibilities is not faith, but mere philosophy.": "m.048c2x2",
        "Angel of Remembrance": "m.0h3grm9"
      },
      "s_expression": "(AND media_common.quotation_subject (AND (JOIN (R media_common.quotation.subjects) (JOIN media_common.quotation.spoken_by_character m.0h3grm9)) (JOIN (R media_common.quotation.subjects) m.048c2x2)))",
      "actions": [
        "get_relations(m.0h3grm9)",
        "get_neighbors(m.0h3grm9,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.subjects)",
        "get_relations(m.048c2x2)",
        "get_neighbors(m.048c2x2,media_common.quotation.subjects)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02zq2",
          "entity_name": "Faith"
        }
      ]
    },
    {
      "question": "what other forms of visual art were made by michele wood other than tapestry?",
      "qid": "4302283006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Michele Wood": "m.05vltvg",
        "Tapestry": "m.0lym8"
      },
      "s_expression": "(AND visual_art.visual_art_form (JOIN (R visual_art.artwork.art_form) (AND (JOIN visual_art.artwork.artist m.05vltvg) (JOIN visual_art.artwork.art_form m.0lym8))))",
      "actions": [
        "get_relations(m.05vltvg)",
        "get_neighbors(m.05vltvg,visual_art.visual_artist.artworks)",
        "get_relations(m.0lym8)",
        "get_neighbors(m.0lym8,visual_art.visual_art_form.artworks)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,visual_art.artwork.art_form)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05qdh",
          "entity_name": "Painting"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06msq",
          "entity_name": "Sculpture"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.012z_m",
          "entity_name": "Installation art"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01zkhz",
          "entity_name": "Mixed media"
        }
      ]
    },
    {
      "question": "Which biological book on evolution did Charles Darwin write?",
      "qid": "WebQTrn-2225_ec33d4411ea5426fdd96b491b887c862_cwq",
      "source": "cwq",
      "entities": {
        "Charles Darwin": "m.01lwx",
        "Evolution": "m.02j8z",
        "biological": "m.01540"
      },
      "s_expression": "(AND book.book (AND (JOIN (R book.author.works_written) m.01lwx) (AND (JOIN book.written_work.subjects m.02j8z) (JOIN book.book.genre m.01540))))",
      "actions": [
        "get_relations(m.01lwx)",
        "get_neighbors(m.01lwx,book.author.works_written)",
        "get_relations(m.02j8z)",
        "get_neighbors(m.02j8z,book.book_subject.works)",
        "get_relations(m.01540)",
        "get_neighbors(m.01540,media_common.literary_genre.books_in_this_genre)",
        "intersection(#1,#2)",
        "intersection(#0,#3)"
      ],
      "answer": [
        {
          "answer_argument": "m.0c1t1n1",
          "answer_type": "Entity",
          "entity_name": "On the origin of species by means of natural selection"
        }
      ]
    },
    {
      "question": "which is the longest release track of recordings written by stan katayama?",
      "qid": "4300020015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Stan Katayama": "m.01vy1y0"
      },
      "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.01vy1y0))) music.release_track.length)",
      "actions": [
        "get_relations(m.01vy1y0)",
        "get_neighbors(m.01vy1y0,music.engineer.tracks_engineered)",
        "get_relations(#0)",
        "get_neighbors(#0,music.recording.tracks)",
        "get_attributes(#1)",
        "argmax(#1,music.release_track.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0rqkz33",
          "entity_name": "Miracle of Life"
        }
      ]
    },
    {
      "question": "how many paradigms are there for the javascripts and php programming programming languages?",
      "qid": "3205793010000_grailqa",
      "source": "grailqa",
      "entities": {
        "javascripts": "m.02p97",
        "php programming": "m.060kv"
      },
      "s_expression": "(COUNT (AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.02p97) (JOIN computer.programming_language_paradigm.languages m.060kv))))",
      "actions": [
        "get_relations(m.02p97)",
        "get_neighbors(m.02p97,computer.programming_language.language_paradigms)",
        "get_relations(m.060kv)",
        "get_neighbors(m.060kv,computer.programming_language.language_paradigms)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "flornell spicy piece of halleston and belgian shepherd dog share what temperament?",
      "qid": "4300459014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Flornell Spicy Piece of Halleston": "m.0p997hh",
        "belgian shepherd dog": "m.02vjst"
      },
      "s_expression": "(AND biology.breed_temperament (AND (JOIN (R biology.animal_breed.temperament) (JOIN (R biology.pedigreed_animal.breed) m.0p997hh)) (JOIN (R biology.animal_breed.temperament) m.02vjst)))",
      "actions": [
        "get_relations(m.0p997hh)",
        "get_neighbors(m.0p997hh,biology.pedigreed_animal.breed)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.02vjst)",
        "get_neighbors(m.02vjst,biology.animal_breed.temperament)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kqp3l",
          "entity_name": "Alert"
        }
      ]
    },
    {
      "question": "which camera storage type is supported by minolta dimage x20 and the digital camera with iso setting of 1250?",
      "qid": "4302372000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Minolta DiMAGE X20": "m.03q2klh",
        "1250": "m.0h27q8s"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.0h27q8s)) (JOIN (R digicams.digital_camera.supported_storage_types) m.03q2klh)))",
      "actions": [
        "get_relations(m.0h27q8s)",
        "get_neighbors(m.0h27q8s,digicams.camera_iso.cameras)",
        "get_relations(#0)",
        "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.03q2klh)",
        "get_neighbors(m.03q2klh,digicams.digital_camera.supported_storage_types)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tthm",
          "entity_name": "Secure Digital"
        }
      ]
    },
    {
      "question": "When did the basketball team whose head coach is Stan Van Gundy most recently win the championship?",
      "qid": "WebQTest-895_f2313ead2f7bbd1954331626395d95af_cwq",
      "source": "cwq",
      "entities": {
        "Stan Van Gundy": "m.0692k9"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN basketball.basketball_team.head_coach m.0692k9)) time.event.start_date)",
      "actions": [
        "get_relations(m.0692k9)",
        "get_neighbors(m.0692k9,basketball.basketball_coach.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.07p0zz",
          "answer_type": "Entity",
          "entity_name": "2004 NBA Finals"
        }
      ]
    },
    {
      "question": "the computer designer for macintosh 512k and next computer was whom?",
      "qid": "4301299003000_grailqa",
      "source": "grailqa",
      "entities": {
        "NeXT Computer": "m.04_1mz4",
        "Macintosh 512K": "m.02nwlp"
      },
      "s_expression": "(AND computer.computer_designer (AND (JOIN computer.computer_designer.computers_designed (JOIN (R computer.computer.parent_model) m.02nwlp)) (JOIN (R computer.computer.key_designers) m.04_1mz4)))",
      "actions": [
        "get_relations(m.02nwlp)",
        "get_neighbors(m.02nwlp,computer.computer.parent_model)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.computer.key_designers)",
        "get_relations(m.04_1mz4)",
        "get_neighbors(m.04_1mz4,computer.computer.key_designers)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.06y3r",
          "entity_name": "Steve Jobs"
        }
      ]
    },
    {
      "question": "when is the last time the denver broncos won the superbowl",
      "qid": "WebQTest-969_webqsp",
      "source": "webqsp",
      "entities": {
        "denver broncos": "m.0289q",
        "superbowl": "m.06x5s"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) m.0289q) (JOIN time.event.instance_of_recurring_event m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.0289q)",
        "get_neighbors(m.0289q,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,time.recurring_event.instances)",
        "intersection(#0,#1)",
        "get_attributes(#2)",
        "argmax(#2,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.076y0",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXXIII"
        }
      ]
    },
    {
      "question": "there are how many exhibition subjects in picasso: the saltimbanques?",
      "qid": "4302933000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Picasso: The Saltimbanques": "m.059_brv"
      },
      "s_expression": "(COUNT (AND exhibitions.exhibition_subject (JOIN (R exhibitions.exhibition.subjects) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) (JOIN (R exhibitions.exhibition.exhibition_types) m.059_brv)))))",
      "actions": [
        "get_relations(m.059_brv)",
        "get_neighbors(m.059_brv,exhibitions.exhibition.exhibition_types)",
        "get_relations(#0)",
        "get_neighbors(#0,exhibitions.type_of_exhibition.exhibitions_of_this_type)",
        "get_relations(#1)",
        "get_neighbors(#1,exhibitions.exhibition.subjects)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "602"
        }
      ]
    },
    {
      "question": "who is the founding figure of the weekend of easter, and also sides with abrahamic faith being their core religion?",
      "qid": "4302278001000_grailqa",
      "source": "grailqa",
      "entities": {
        "The weekend of Easter": "m.0102_1rl",
        "abrahamic faith": "m.0f_h6"
      },
      "s_expression": "(AND religion.founding_figure (JOIN (R religion.religion.founding_figures) (AND (JOIN (R time.holiday.featured_in_religions) m.0102_1rl) (JOIN religion.religion.is_part_of m.0f_h6))))",
      "actions": [
        "get_relations(m.0102_1rl)",
        "get_neighbors(m.0102_1rl,time.holiday.featured_in_religions)",
        "get_relations(m.0f_h6)",
        "get_neighbors(m.0f_h6,religion.religion.includes)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,religion.religion.founding_figures)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.060nc",
          "entity_name": "Paul the Apostle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045m1_",
          "entity_name": "Jesus Christ"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.071wp",
          "entity_name": "Saint Peter"
        }
      ]
    },
    {
      "question": "What city is home to the Euro 2012 Tournament and the publisher of A Defense of Ardor?",
      "qid": "WebQTrn-463_1bd3c1ec69ef5e068b5972d4598c2a2c_cwq",
      "source": "cwq",
      "entities": {
        "euro 2012": "m.06t1s0",
        "A Defense of Ardor": "m.04xq3p4"
      },
      "s_expression": "(AND (JOIN (R time.event.locations) m.06t1s0) (JOIN location.location.people_born_here (JOIN book.author.book_editions_published m.04xq3p4)))",
      "actions": [
        "get_relations(m.06t1s0)",
        "get_neighbors(m.06t1s0,time.event.locations)",
        "get_relations(m.04xq3p4)",
        "get_neighbors(m.04xq3p4,book.book_edition.author_editor)",
        "get_relations(#1)",
        "get_neighbors(#1,people.person.place_of_birth)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0d7_n",
          "answer_type": "Entity",
          "entity_name": "Lviv"
        }
      ]
    },
    {
      "question": "what suite was performed most recently?",
      "qid": "4303240003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Suite": "m.01b0rq"
      },
      "s_expression": "(ARGMAX (AND music.composition (JOIN music.composition.form (JOIN music.compositional_form.superforms m.01b0rq))) music.composition.date_of_first_performance)",
      "actions": [
        "get_relations(m.01b0rq)",
        "get_neighbors(m.01b0rq,music.compositional_form.subforms)",
        "get_relations(#0)",
        "get_neighbors(#0,music.compositional_form.compositions)",
        "get_attributes(#1)",
        "argmax(#1,music.composition.date_of_first_performance)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bb82yd",
          "entity_name": "Championship Suite"
        }
      ]
    },
    {
      "question": "how many different dog breeds from czecho-slovakia have the same temperament as the cairn terriers?",
      "qid": "4303460003000_grailqa",
      "source": "grailqa",
      "entities": {
        "cairn terriers": "m.02z57c",
        "czecho-slovakia": "m.01mk6"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.01mk6)) (JOIN (R biology.animal_breed.temperament) m.02z57c))))",
      "actions": [
        "get_relations(m.01mk6)",
        "get_neighbors(m.01mk6,biology.breed_origin.breeds_originating_here)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.02z57c)",
        "get_neighbors(m.02z57c,biology.animal_breed.temperament)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "When was the most recent World Series win for the team which won the 2010 World Series?",
      "qid": "WebQTest-832_1315945fdcb4fad1310ab7862120be0f_cwq",
      "source": "cwq",
      "entities": {
        "2010 World Series": "m.09gnk2r"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.09gnk2r)) time.event.start_date)",
      "actions": [
        "get_relations(m.09gnk2r)",
        "get_neighbors(m.09gnk2r,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0117q3yz"
        }
      ]
    },
    {
      "question": "what is the version that was released in united states supports x-box 360?",
      "qid": "4301746001000_grailqa",
      "source": "grailqa",
      "entities": {
        "united states": "m.09c7w0",
        "x-box 360": "m.02plp2"
      },
      "s_expression": "(AND cvg.game_version (AND (JOIN (R cvg.computer_game_region.versions_released_in_this_region) m.09c7w0) (JOIN (R computer.computer_peripheral.supporting_game_versions) (JOIN (R business.brand.products) m.02plp2))))",
      "actions": [
        "get_relations(m.09c7w0)",
        "get_neighbors(m.09c7w0,cvg.computer_game_region.versions_released_in_this_region)",
        "get_relations(m.02plp2)",
        "get_neighbors(m.02plp2,business.brand.products)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.computer_peripheral.supporting_game_versions)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gm9fh4",
          "entity_name": "Virtua Tennis 4"
        }
      ]
    },
    {
      "question": "what tropical cyclones share a classification with typhoon phanfone and also affected state of texas?",
      "qid": "4300198007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Typhoon Phanfone": "m.011_zvfg",
        "state of texas": "m.07b_l"
      },
      "s_expression": "(AND meteorology.tropical_cyclone (AND (JOIN (R meteorology.tropical_cyclone_category.tropical_cyclones) (JOIN (R meteorology.tropical_cyclone.category) m.011_zvfg)) (JOIN meteorology.tropical_cyclone.affected_areas m.07b_l)))",
      "actions": [
        "get_relations(m.011_zvfg)",
        "get_neighbors(m.011_zvfg,meteorology.tropical_cyclone.category)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
        "get_relations(m.07b_l)",
        "get_neighbors(m.07b_l,meteorology.cyclone_affected_area.cyclones)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01vnsr",
          "entity_name": "1900 Galveston hurricane"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04jnnpy",
          "entity_name": "Hurricane Ike"
        }
      ]
    },
    {
      "question": "list all types of museums that are of the same type as mexican museum and museu picasso",
      "qid": "5400031007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Mexican Museum": "m.02659c6",
        "Museu Picasso": "m.0bdrf9"
      },
      "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.02659c6) (JOIN architecture.type_of_museum.museums m.0bdrf9)))))",
      "actions": [
        "get_relations(m.02659c6)",
        "get_neighbors(m.02659c6,architecture.museum.type_of_museum)",
        "get_relations(m.0bdrf9)",
        "get_neighbors(m.0bdrf9,architecture.museum.type_of_museum)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,architecture.type_of_museum.museums)",
        "get_relations(#3)",
        "get_neighbors(#3,architecture.museum.type_of_museum)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gz",
          "entity_name": "Modern art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c9td2",
          "entity_name": "National museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9jkk",
          "entity_name": "Architecture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgh_k",
          "entity_name": "History museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgjgh",
          "entity_name": "Natural history museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0jvjpx6",
          "entity_name": "Antiquities museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026w5hv",
          "entity_name": "Contemporary art gallery"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pn3n6",
          "entity_name": "Historic house museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0528d17",
          "entity_name": "Photography Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kt8qr",
          "entity_name": "Culture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gt",
          "entity_name": "Archaeology museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059x_pp",
          "entity_name": "Archaeological Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wvyw7",
          "entity_name": "Design museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027v0wz",
          "entity_name": "University museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059vqps",
          "entity_name": "Ancient Art Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9gbh",
          "entity_name": "Jewish museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j58y",
          "entity_name": "Science museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0w_y7rb",
          "entity_name": "Asian art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99t0",
          "entity_name": "Decorative art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0djx8f",
          "entity_name": "Children's museum"
        }
      ]
    },
    {
      "question": "What instrument is played by the person who composed Gone Sovereign/Absolute Zero?",
      "qid": "WebQTest-1279_9175d83b8ad1b567d1c672fdf2bf8d6d_cwq",
      "source": "cwq",
      "entities": {
        "Guitar": "m.0342h",
        "Gone Sovereign/Absolute Zero": "m.0q41drk"
      },
      "s_expression": "(AND (JOIN (R music.group_member.instruments_played) (JOIN music.lyricist.lyrics_written m.0q41drk)) (JOIN music.instrument.family m.0342h))",
      "actions": [
        "get_relations(m.0q41drk)",
        "get_neighbors(m.0q41drk,music.composition.lyricist)",
        "get_relations(#0)",
        "get_neighbors(#0,music.group_member.instruments_played)",
        "get_relations(m.0342h)",
        "get_neighbors(m.0342h,music.instrument.variation)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.018vs",
          "answer_type": "Entity",
          "entity_name": "Bass guitar"
        }
      ]
    },
    {
      "question": "for the croatian sheepdog and staffordshire bull terrier breeds, how many temperaments do they have in common?",
      "qid": "3205485004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Croatian Sheepdog": "m.025_s6d",
        "Staffordshire Bull Terrier": "m.01kv93"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds m.025_s6d) (JOIN (R biology.animal_breed.temperament) m.01kv93))))",
      "actions": [
        "get_relations(m.025_s6d)",
        "get_neighbors(m.025_s6d,biology.animal_breed.temperament)",
        "get_relations(m.01kv93)",
        "get_neighbors(m.01kv93,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "What year did the champion of the 1995 NBA Finals first won the Championship?",
      "qid": "WebQTrn-1531_c7e1b4c99873c80def2ecc3d7eef27bf_cwq",
      "source": "cwq",
      "entities": {
        "1995 NBA Finals": "m.08x9k6"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.08x9k6)) time.event.start_date)",
      "actions": [
        "get_relations(m.08x9k6)",
        "get_neighbors(m.08x9k6,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.08x9cq",
          "answer_type": "Entity",
          "entity_name": "1994 NBA Finals"
        }
      ]
    },
    {
      "question": "where is the version developed by sega of japan and distributed through virtual console released?",
      "qid": "4301141002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Virtual Console": "m.07sg3j",
        "sega of japan": "m.06p8m"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.07sg3j) (JOIN (R cvg.cvg_developer.game_versions_developed) m.06p8m))))",
      "actions": [
        "get_relations(m.07sg3j)",
        "get_neighbors(m.07sg3j,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.06p8m)",
        "get_neighbors(m.06p8m,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.075g54v",
          "entity_name": "Wii/DS NA"
        }
      ]
    },
    {
      "question": "what is bryan carrigan's longest release track of written recordings?",
      "qid": "4300020011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Bryan Carrigan": "m.01wmns3"
      },
      "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.01wmns3))) music.release_track.length)",
      "actions": [
        "get_relations(m.01wmns3)",
        "get_neighbors(m.01wmns3,music.engineer.tracks_engineered)",
        "get_relations(#0)",
        "get_neighbors(#0,music.recording.tracks)",
        "get_attributes(#1)",
        "argmax(#1,music.release_track.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0lj9mqn",
          "entity_name": "Destination Now"
        }
      ]
    },
    {
      "question": "what is the total number of infectious diseases that can be transmitted by a elephantulus myurus?",
      "qid": "4303160006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Elephantulus myurus": "m.0gf88q1"
      },
      "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.0gf88q1)))))",
      "actions": [
        "get_relations(m.0gf88q1)",
        "get_neighbors(m.0gf88q1,medicine.vector_of_disease.disease)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
        "get_relations(#1)",
        "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "30"
        }
      ]
    },
    {
      "question": "of the cheeses source from cows and ewe which ones have semi-firm texture?",
      "qid": "4301155000000_grailqa",
      "source": "grailqa",
      "entities": {
        "ewe": "m.07bgp",
        "cows": "m.01xq0k1",
        "semi-firm": "m.02h82t0"
      },
      "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.07bgp) (AND (JOIN food.cheese.source_of_milk m.01xq0k1) (JOIN food.cheese.texture m.02h82t0))))",
      "actions": [
        "get_relations(m.07bgp)",
        "get_neighbors(m.07bgp,food.cheese_milk_source.cheeses)",
        "get_relations(m.01xq0k1)",
        "get_neighbors(m.01xq0k1,food.cheese_milk_source.cheeses)",
        "get_relations(m.02h82t0)",
        "get_neighbors(m.02h82t0,food.cheese_texture.cheeses)",
        "intersection(#1,#2)",
        "intersection(#0,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02h8b9t",
          "entity_name": "Benedictine"
        }
      ]
    },
    {
      "question": "list all types of museums that are of the same type as james hall transport museum and larz anderson auto museum",
      "qid": "5400031011000_grailqa",
      "source": "grailqa",
      "entities": {
        "James Hall Transport Museum": "m.09v2424",
        "Larz Anderson Auto Museum": "m.025tn7l"
      },
      "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.09v2424) (JOIN architecture.type_of_museum.museums m.025tn7l)))))",
      "actions": [
        "get_relations(m.09v2424)",
        "get_neighbors(m.09v2424,architecture.museum.type_of_museum)",
        "get_relations(m.025tn7l)",
        "get_neighbors(m.025tn7l,architecture.museum.type_of_museum)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,architecture.type_of_museum.museums)",
        "get_relations(#3)",
        "get_neighbors(#3,architecture.museum.type_of_museum)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.051xr7",
          "entity_name": "Open-air museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0djx8f",
          "entity_name": "Children's museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0fxy91",
          "entity_name": "Aviation museum"
        }
      ]
    },
    {
      "question": "served by sugarloaf and rated by black diamond this ski run is called what?",
      "qid": "4301587000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Black Diamond": "m.04kk2t2",
        "Sugarloaf": "m.04kk200"
      },
      "s_expression": "(AND skiing.ski_run (AND (JOIN skiing.ski_run.rating (JOIN (R skiing.run_rating_symbol.run_rating) m.04kk2t2)) (JOIN skiing.ski_run.served_by m.04kk200)))",
      "actions": [
        "get_relations(m.04kk2t2)",
        "get_neighbors(m.04kk2t2,skiing.run_rating_symbol.run_rating)",
        "get_relations(#0)",
        "get_neighbors(#0,skiing.run_rating.ski_runs)",
        "get_relations(m.04kk200)",
        "get_neighbors(m.04kk200,skiing.ski_lift.runs_served)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kk2pn",
          "entity_name": "Devil's Castle"
        }
      ]
    },
    {
      "question": "Where does the team with mascot named Tommy Hawk play?",
      "qid": "WebQTest-1027_9d64a19aae5f453e4a9b583f7be8745c_cwq",
      "source": "cwq",
      "entities": {
        "Tommy Hawk": "m.0j2bv42"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.team_mascot m.0j2bv42)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.0j2bv42)",
        "get_neighbors(m.0j2bv42,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.02nshs",
          "answer_type": "Entity",
          "entity_name": "United Center"
        }
      ]
    },
    {
      "question": "what is the musical recording with maximum length and is a track included in the college dropout bonus audio cd?",
      "qid": "4301467002000_grailqa",
      "source": "grailqa",
      "entities": {
        "The College Dropout Bonus Audio CD": "m.0zq_1mx"
      },
      "s_expression": "(ARGMAX (AND music.recording (JOIN (R music.release.track) (JOIN (R music.album.releases) m.0zq_1mx))) music.recording.length)",
      "actions": [
        "get_relations(m.0zq_1mx)",
        "get_neighbors(m.0zq_1mx,music.album.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.track)",
        "get_attributes(#1)",
        "argmax(#1,music.recording.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.014fx4l",
          "entity_name": "Never Let Me Down (Cinematic)"
        }
      ]
    },
    {
      "question": "which military groups were from the same place as 1st louisiana native guard and were at the battle of gettysburg?",
      "qid": "250000300_graphquestions",
      "source": "graphquestions",
      "entities": {
        "Battle of Gettysburg": "m.01jnm",
        "1st Louisiana Native Guard": "m.0hr6dl9"
      },
      "s_expression": "(AND base.americancivilwar.military_unit (AND (JOIN military.military_unit.place_of_origin (JOIN (R military.military_unit.place_of_origin) m.0hr6dl9)) (JOIN base.americancivilwar.military_unit.conflicts_participated_in m.01jnm)))",
      "actions": [
        "get_relations(m.0hr6dl9)",
        "get_neighbors(m.0hr6dl9,military.military_unit.place_of_origin)",
        "get_relations(#0)",
        "get_neighbors(#0,military.military_unit_place_of_origin.military_units)",
        "get_relations(m.01jnm)",
        "get_neighbors(m.01jnm,base.americancivilwar.battle.military_units_involved_in_this_conflict)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04gjww9",
          "entity_name": "10th Louisiana Infantry"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l684",
          "entity_name": "15th Louisiana Infantry Regiment"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l66_",
          "entity_name": "14th Louisiana Infantry Regiment"
        }
      ]
    },
    {
      "question": "what other quotations from askelon of meridian share the same addressee as \"sacred bands and elite squadrons aren't what the mercenaries' guild is about. field them at your peril.\" ?",
      "qid": "4302343012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Askelon of Meridian": "m.0bxtt5p",
        "\"Sacred Bands and elite squadrons aren't what the mercenaries' guild is about.  Field them at your peril.\"": "m.0d86438"
      },
      "s_expression": "(AND media_common.quotation_addressee (AND (JOIN media_common.quotation_addressee.quotations (JOIN (R fictional_universe.fictional_character.quotations) m.0bxtt5p)) (JOIN media_common.quotation_addressee.quotations m.0d86438)))",
      "actions": [
        "get_relations(m.0bxtt5p)",
        "get_neighbors(m.0bxtt5p,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.addressee)",
        "get_relations(m.0d86438)",
        "get_neighbors(m.0d86438,media_common.quotation.addressee)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cpg05_",
          "entity_name": "Niko"
        }
      ]
    },
    {
      "question": "how many different camera iso capability is the iso setting used by the sony a100 and olympus stylus 1020?",
      "qid": "3205827003000_grailqa",
      "source": "grailqa",
      "entities": {
        "sony a100": "m.03hfz55",
        "Olympus Stylus 1020": "m.03q2p88"
      },
      "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.03hfz55) (JOIN (R digicams.digital_camera.iso_setting) m.03q2p88))))",
      "actions": [
        "get_relations(m.03hfz55)",
        "get_neighbors(m.03hfz55,digicams.digital_camera.iso_setting)",
        "get_relations(m.03q2p88)",
        "get_neighbors(m.03q2p88,digicams.digital_camera.iso_setting)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "6"
        }
      ]
    },
    {
      "question": "which cheese made from milk of goat has the same texture as são jorge cheese does?",
      "qid": "4302129003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Goat": "m.03fwl",
        "São Jorge cheese": "m.064n52z"
      },
      "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.03fwl) (JOIN (R food.cheese_texture.cheeses) (JOIN food.cheese_texture.cheeses m.064n52z))))",
      "actions": [
        "get_relations(m.03fwl)",
        "get_neighbors(m.03fwl,food.cheese_milk_source.cheeses)",
        "get_relations(m.064n52z)",
        "get_neighbors(m.064n52z,food.cheese.texture)",
        "get_relations(#1)",
        "get_neighbors(#1,food.cheese_texture.cheeses)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01glzg",
          "entity_name": "Cabrales cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01_r_",
          "entity_name": "Cheddar cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02h891x",
          "entity_name": "Alpine Shepherd"
        }
      ]
    },
    {
      "question": "the nissan cefiro and predecessor renault are what class of automobiles?",
      "qid": "4301079013000_grailqa",
      "source": "grailqa",
      "entities": {
        "renault": "m.032b7p",
        "Nissan Cefiro": "m.03vynb"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples (JOIN (R automotive.model.predecessor) m.032b7p)) (JOIN automotive.automotive_class.examples m.03vynb)))",
      "actions": [
        "get_relations(m.032b7p)",
        "get_neighbors(m.032b7p,automotive.model.predecessor)",
        "get_relations(#0)",
        "get_neighbors(#0,automotive.model.automotive_class)",
        "get_relations(m.03vynb)",
        "get_neighbors(m.03vynb,automotive.model.automotive_class)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.016gvg",
          "entity_name": "Station Wagon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.021mp2",
          "entity_name": "Sedan"
        }
      ]
    },
    {
      "question": "of the cheeses source from water buffalo and cows which ones have semi-soft texture?",
      "qid": "4301155012000_grailqa",
      "source": "grailqa",
      "entities": {
        "cows": "m.01xq0k1",
        "Water buffalo": "m.0g0zc",
        "semi-soft": "m.02h83jd"
      },
      "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.01xq0k1) (AND (JOIN food.cheese.source_of_milk m.0g0zc) (JOIN food.cheese.texture m.02h83jd))))",
      "actions": [
        "get_relations(m.01xq0k1)",
        "get_neighbors(m.01xq0k1,food.cheese_milk_source.cheeses)",
        "get_relations(m.0g0zc)",
        "get_neighbors(m.0g0zc,food.cheese_milk_source.cheeses)",
        "get_relations(m.02h83jd)",
        "get_neighbors(m.02h83jd,food.cheese_texture.cheeses)",
        "intersection(#1,#2)",
        "intersection(#0,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.055w7",
          "entity_name": "Mozzarella"
        }
      ]
    },
    {
      "question": "which olympic events were officially contested at the 2002 winter olympics held in sochi?",
      "qid": "4300161004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Sochi": "m.0m465",
        "2002 Winter Olympics": "m.09n48"
      },
      "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.0m465)) (JOIN olympics.olympic_event.olympic_games_contested m.09n48)))",
      "actions": [
        "get_relations(m.0m465)",
        "get_neighbors(m.0m465,olympics.olympic_host_city.olympics_hosted)",
        "get_relations(#0)",
        "get_neighbors(#0,olympics.olympic_games.events)",
        "get_relations(m.09n48)",
        "get_neighbors(m.09n48,olympics.olympic_games.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqfb",
          "entity_name": "Women's Parallel Giant Slalom"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_v0",
          "entity_name": "Women's 1000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqb_",
          "entity_name": "Men's Aerials"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqc2",
          "entity_name": "Men's Moguls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqf4",
          "entity_name": "Men's Individual Normal Hill"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_t4",
          "entity_name": "Women's 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqft",
          "entity_name": "Women's 5000 m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpww",
          "entity_name": "Men's Downhill"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpx1",
          "entity_name": "Women's Slalom"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpxf",
          "entity_name": "Women's Downhill"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpyc",
          "entity_name": "Women's Giant Slalom"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqcn",
          "entity_name": "Women's Singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqdl",
          "entity_name": "Men's 500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqf_",
          "entity_name": "Men's 10000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_xm",
          "entity_name": "Men's 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zhzln",
          "entity_name": "Men's 5000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bj4fg7",
          "entity_name": "Men's singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wq96",
          "entity_name": "Women's 10 km"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wq88",
          "entity_name": "Men's 20 km Individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqd0",
          "entity_name": "Women's 1000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqbt",
          "entity_name": "Women's Moguls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqbq",
          "entity_name": "Women's Aerials"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zj03w",
          "entity_name": "Women's Singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zj032",
          "entity_name": "Men's Singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqfq",
          "entity_name": "Women's 3000 m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqdd",
          "entity_name": "Men's 1000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_rx",
          "entity_name": "Women's 500 m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqd3",
          "entity_name": "Women's 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_x2",
          "entity_name": "Men's 1000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqf7",
          "entity_name": "Women's Halfpipe"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wq8v",
          "entity_name": "Women's 7.5 km Sprint"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9nmy",
          "entity_name": "Men's Halfpipe"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqg5",
          "entity_name": "Men's 500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpx7",
          "entity_name": "Women's Super-G"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqdh",
          "entity_name": "Men's 1500 m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpy5",
          "entity_name": "Men's 10 km Sprint"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wq82",
          "entity_name": "Men's 12.5 km Pursuit"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wq8g",
          "entity_name": "Women's 10 km Pursuit"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wq8n",
          "entity_name": "Women's 15 km Individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpwp",
          "entity_name": "Men's Super-G"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wq9l",
          "entity_name": "Women's Individual Sprint"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqb4",
          "entity_name": "Men's Individual Sprint"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqd9",
          "entity_name": "Women's 500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqds",
          "entity_name": "Men's Skeleton"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqdw",
          "entity_name": "Women's Skeleton"
        }
      ]
    },
    {
      "question": "what breed has the same temperament as serbian tricolour hound and saarloos wolfdog?",
      "qid": "4300795002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Serbian Tricolour Hound": "m.01p2_y",
        "Saarloos wolfdog": "m.028y5g"
      },
      "s_expression": "(AND biology.animal_breed (JOIN biology.animal_breed.temperament (AND (JOIN (R biology.animal_breed.temperament) m.01p2_y) (JOIN biology.breed_temperament.breeds m.028y5g))))",
      "actions": [
        "get_relations(m.01p2_y)",
        "get_neighbors(m.01p2_y,biology.animal_breed.temperament)",
        "get_relations(m.028y5g)",
        "get_neighbors(m.028y5g,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,biology.breed_temperament.breeds)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01f57_",
          "entity_name": "Chinese Crested Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02cj3",
          "entity_name": "Dachshund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0khhs",
          "entity_name": "Chihuahua"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01nw62",
          "entity_name": "Rottweiler"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.074g8y",
          "entity_name": "Manchester Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07dvrh",
          "entity_name": "Dogue de Bordeaux"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0182yx",
          "entity_name": "Shetland Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p3d7",
          "entity_name": "Alaskan Malamute"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01s7fj",
          "entity_name": "Shih Tzu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0266ts8",
          "entity_name": "Basset Bleu de Gascogne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027dtrb",
          "entity_name": "Swedish Lapphund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02_73c",
          "entity_name": "Rat Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02cyl6",
          "entity_name": "Maltese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kgrx",
          "entity_name": "Cardigan Welsh Corgi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02nscg",
          "entity_name": "Bearded Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qx_df",
          "entity_name": "Picardy Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wcn0z",
          "entity_name": "Russian Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.031pqh",
          "entity_name": "Peruvian Hairless Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0353qr",
          "entity_name": "Dandie Dinmont Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0388_c",
          "entity_name": "Japanese Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.038wt3",
          "entity_name": "French Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.039rzl",
          "entity_name": "Irish Setter"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.039s48",
          "entity_name": "Irish Red and White Setter"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03fyyd",
          "entity_name": "Shar Pei"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0403wp9",
          "entity_name": "Muggin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04mgcx",
          "entity_name": "Bench-Legged Feist"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04sxcxt",
          "entity_name": "Posavac Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04t5jl6",
          "entity_name": "American Leopard Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05kz7n",
          "entity_name": "Rajapalayam"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05t252",
          "entity_name": "Volpino Italiano"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05tbqb",
          "entity_name": "Coton de Tulear"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05y236",
          "entity_name": "New Guinea singing dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07blj0",
          "entity_name": "Large Münsterländer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08626",
          "entity_name": "Whippet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bllpv",
          "entity_name": "Puggle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0f339h",
          "entity_name": "Portuguese Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hw_s",
          "entity_name": "Basset Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04p3f7",
          "entity_name": "Standard Schnauzer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01hxnh",
          "entity_name": "Bullmastiff"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01llgk",
          "entity_name": "Boxer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p33b",
          "entity_name": "Mudi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p67j",
          "entity_name": "Serbian Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025tcp1",
          "entity_name": "Russell Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0285t83",
          "entity_name": "German Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02p1d4",
          "entity_name": "St. Bernard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02x9dk",
          "entity_name": "Boston Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03gqk9t",
          "entity_name": "Berger Blanc Suisse"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0410kz_",
          "entity_name": "Schapendoes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04svlc5",
          "entity_name": "Braque du Puy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06k88g",
          "entity_name": "Hovawart"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07bln6",
          "entity_name": "Curly Coated Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07p7st",
          "entity_name": "Portuguese Podengo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07vgwn",
          "entity_name": "Pumi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08pb1g",
          "entity_name": "Australian Stumpy Tail Cattle Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kkkg",
          "entity_name": "Istrian Coarse-haired Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09v1cn",
          "entity_name": "Ratonero Bodeguero Andaluz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b26w3",
          "entity_name": "Schnoodle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b3s8y",
          "entity_name": "Czechoslovakian Wolfdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b6c67",
          "entity_name": "German Pinscher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c3k58",
          "entity_name": "Pražský Krysařík"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0d5yby",
          "entity_name": "Sussex Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0lbw4",
          "entity_name": "Great Dane"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p89l",
          "entity_name": "Sarplaninac"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p8tm",
          "entity_name": "Flat-Coated Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026r9tr",
          "entity_name": "Austrian Pinscher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026s0q_",
          "entity_name": "Bosnian Coarse-haired Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027m5s1",
          "entity_name": "Chilean Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kn5w",
          "entity_name": "Entlebucher Mountain Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02vjst",
          "entity_name": "Laekenois"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xlb",
          "entity_name": "Irish Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.037jtq",
          "entity_name": "Greater Swiss Mountain Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03bt6h",
          "entity_name": "Hamiltonstövare"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03f84m",
          "entity_name": "American Hairless Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03nn344",
          "entity_name": "Catahoula Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03vrbz",
          "entity_name": "Lhasa Apso"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03x_qw",
          "entity_name": "Black Russian Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04m4bq",
          "entity_name": "American Staffordshire Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04sxch4",
          "entity_name": "Pocket Beagle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.053_t0",
          "entity_name": "Stabyhoun"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.055br8",
          "entity_name": "Thai Bangkaew Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bkt9",
          "entity_name": "German Spitz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05c21l",
          "entity_name": "South Russian Ovcharka"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05qgc4",
          "entity_name": "Polish Lowland Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06g210",
          "entity_name": "Canaan Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06m828",
          "entity_name": "Petit Basset Griffon Vendéen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.076tzg6",
          "entity_name": "Berner Niederlaufhund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08mb92",
          "entity_name": "Appenzeller Sennenhund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cshcm",
          "entity_name": "West Siberian Laika"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dflqz",
          "entity_name": "Blue Lacy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g0rch",
          "entity_name": "Danish Swedish Farmdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.017lg8",
          "entity_name": "Samoyed"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03cr7fw",
          "entity_name": "Morkie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c779w",
          "entity_name": "Berger Picard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02rxz2k",
          "entity_name": "Bucovina Shepherd Dog"
        }
      ]
    },
    {
      "question": "what was the programming language first introduced by microsoft corporation which was influenced by another language?",
      "qid": "4303199005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Microsoft Corporation": "m.04sv4"
      },
      "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.04sv4))) computer.programming_language.introduced)",
      "actions": [
        "get_relations(m.04sv4)",
        "get_neighbors(m.04sv4,computer.programming_language_developer.programming_languages_developed)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.influenced)",
        "get_attributes(#1)",
        "argmin(#1,computer.programming_language.introduced)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07sbkfb",
          "entity_name": "Java"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.060kv",
          "entity_name": "PHP"
        }
      ]
    },
    {
      "question": "What is the earliest zoo to be opened in downtown Chicago?",
      "qid": "WebQTrn-825_b66011ec79b0e43b835d443cf660bf1c_cwq",
      "source": "cwq",
      "entities": {
        "Chicago": "m.01_d4"
      },
      "s_expression": "(ARGMIN (AND (JOIN (R travel.travel_destination.tourist_attractions) m.01_d4) (JOIN location.location.containedby m.01_d4)) zoos.zoo.opened)",
      "actions": [
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,travel.travel_destination.tourist_attractions)",
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,location.location.contains)",
        "intersection(#0,#1)",
        "get_attributes(#2)",
        "argmin(#2,zoos.zoo.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.025v4fb",
          "answer_type": "Entity",
          "entity_name": "Lincoln Park Zoo"
        }
      ]
    },
    {
      "question": "What kind of monarchy is practiced in Japan in the birthplace of Baldur von Schirach?",
      "qid": "WebQTest-270_3f76d491e90682cc29e3de2546e1f9c5_cwq",
      "source": "cwq",
      "entities": {
        "Japan": "m.03_3d",
        "Baldur von Schirach": "m.0143sn"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.03_3d) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.0143sn)))",
      "actions": [
        "get_relations(m.03_3d)",
        "get_neighbors(m.03_3d,location.country.form_of_government)",
        "get_relations(m.0143sn)",
        "get_neighbors(m.0143sn,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "When did the champion of the World Series 2012 won the World series again?",
      "qid": "WebQTest-832_87afbf2481df60df8476b920f00c4247_cwq",
      "source": "cwq",
      "entities": {
        "world series": "m.0ds8qct"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.0ds8qct)) time.event.start_date)",
      "actions": [
        "get_relations(m.0ds8qct)",
        "get_neighbors(m.0ds8qct,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0117q3yz"
        }
      ]
    },
    {
      "question": "what automobile class is shared by both the plymouth satellite and the model whose predecessor was the sunbeam?",
      "qid": "4301079007000_grailqa",
      "source": "grailqa",
      "entities": {
        "sunbeam": "m.04d9n9",
        "Plymouth Satellite": "m.077z_8"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples (JOIN (R automotive.model.predecessor) m.04d9n9)) (JOIN automotive.automotive_class.examples m.077z_8)))",
      "actions": [
        "get_relations(m.04d9n9)",
        "get_neighbors(m.04d9n9,automotive.model.predecessor)",
        "get_relations(#0)",
        "get_neighbors(#0,automotive.model.automotive_class)",
        "get_relations(m.077z_8)",
        "get_neighbors(m.077z_8,automotive.model.automotive_class)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.016gvg",
          "entity_name": "Station Wagon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01d1dj",
          "entity_name": "Coupé"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.021mp2",
          "entity_name": "Sedan"
        }
      ]
    },
    {
      "question": "the minature pinscher and maltese dog have how many common temperaments?",
      "qid": "3205485000000_grailqa",
      "source": "grailqa",
      "entities": {
        "minature pinscher": "m.03svl1",
        "maltese dog": "m.02cyl6"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds m.03svl1) (JOIN (R biology.animal_breed.temperament) m.02cyl6))))",
      "actions": [
        "get_relations(m.03svl1)",
        "get_neighbors(m.03svl1,biology.animal_breed.temperament)",
        "get_relations(m.02cyl6)",
        "get_neighbors(m.02cyl6,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "What year did the NBA franchise currently coached by Steve Keer win their first championship?",
      "qid": "WebQTest-911_ce44ee82260833e993c2ae9c2cbdeaa2_cwq",
      "source": "cwq",
      "entities": {
        "steve keer": "m.01gcq3"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN basketball.basketball_team.head_coach m.01gcq3)) time.event.start_date)",
      "actions": [
        "get_relations(m.01gcq3)",
        "get_neighbors(m.01gcq3,basketball.basketball_coach.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0cs1bx",
          "answer_type": "Entity",
          "entity_name": "1975 NBA Finals"
        }
      ]
    },
    {
      "question": "what is the position played by both elton brown and the player who authored it's just something to have on my resume for when i go back into reality. someday i might have to put down a basketball and have a regular 9-to-5 like everybody else.?",
      "qid": "4300563006000_grailqa",
      "source": "grailqa",
      "entities": {
        "It's just something to have on my resume for when I go back into reality. Someday I might have to put down a basketball and have a regular 9-to-5 like everybody else.": "m.04g5jj5",
        "Elton Brown": "m.03c1p16"
      },
      "s_expression": "(AND basketball.basketball_position (AND (JOIN basketball.basketball_position.players (JOIN (R media_common.quotation.author) m.04g5jj5)) (JOIN basketball.basketball_position.players m.03c1p16)))",
      "actions": [
        "get_relations(m.04g5jj5)",
        "get_neighbors(m.04g5jj5,media_common.quotation.author)",
        "get_relations(#0)",
        "get_neighbors(#0,basketball.basketball_player.position_s)",
        "get_relations(m.03c1p16)",
        "get_neighbors(m.03c1p16,basketball.basketball_player.position_s)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02_ssl",
          "entity_name": "Center"
        }
      ]
    },
    {
      "question": "What type of guitar does the artist that recorded If Rap Gets Jealous use?",
      "qid": "WebQTrn-278_4eaa674239f6392e6301da62edb7a8b2_cwq",
      "source": "cwq",
      "entities": {
        "Guitar": "m.0342h",
        "If Rap Gets Jealous": "m.0dsxz_0"
      },
      "s_expression": "(AND (JOIN (R music.group_member.instruments_played) (JOIN music.featured_artist.recordings m.0dsxz_0)) (JOIN music.instrument.family m.0342h))",
      "actions": [
        "get_relations(m.0dsxz_0)",
        "get_neighbors(m.0dsxz_0,music.recording.featured_artists)",
        "get_relations(#0)",
        "get_neighbors(#0,music.group_member.instruments_played)",
        "get_relations(m.0342h)",
        "get_neighbors(m.0342h,music.instrument.variation)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.018vs",
          "answer_type": "Entity",
          "entity_name": "Bass guitar"
        }
      ]
    },
    {
      "question": "What year did the sports team that calls the Bronx home win their first world series?",
      "qid": "WebQTrn-1929_13ceb7fe0367680a06a1c16bd4e3a466_cwq",
      "source": "cwq",
      "entities": {
        "The Bronx": "m.01531"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.location m.01531)) time.event.end_date)",
      "actions": [
        "get_relations(m.01531)",
        "get_neighbors(m.01531,sports.sports_team_location.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04tfv7",
          "answer_type": "Entity",
          "entity_name": "1923 World Series"
        }
      ]
    },
    {
      "question": "which dog breeds have the same temperament as halden hound and damchi?",
      "qid": "4300795001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Halden Hound": "m.04swl7y",
        "Damchi": "g.1203ng2yx"
      },
      "s_expression": "(AND biology.animal_breed (JOIN biology.animal_breed.temperament (AND (JOIN (R biology.animal_breed.temperament) m.04swl7y) (JOIN biology.breed_temperament.breeds g.1203ng2yx))))",
      "actions": [
        "get_relations(m.04swl7y)",
        "get_neighbors(m.04swl7y,biology.animal_breed.temperament)",
        "get_relations(g.1203ng2yx)",
        "get_neighbors(g.1203ng2yx,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,biology.breed_temperament.breeds)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01qn1p",
          "entity_name": "English Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01dv7j",
          "entity_name": "Schipperke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06j1z7",
          "entity_name": "Chippiparai"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01s7fj",
          "entity_name": "Shih Tzu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01x5q1",
          "entity_name": "Jämthund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0353qr",
          "entity_name": "Dandie Dinmont Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.039rzl",
          "entity_name": "Irish Setter"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03fyyd",
          "entity_name": "Shar Pei"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04dm6",
          "entity_name": "Komondor"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0778jb",
          "entity_name": "Redbone Coonhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cbgst",
          "entity_name": "Kintamani"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01przn",
          "entity_name": "Mackenzie River husky"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0363rs",
          "entity_name": "Toy Manchester Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03y6bvt",
          "entity_name": "Finnish Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yk8l",
          "entity_name": "Tibetan Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f2yc",
          "entity_name": "Anatolian Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05p5nvc",
          "entity_name": "Petit Bleu de Gascogne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07bln6",
          "entity_name": "Curly Coated Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07t_h2",
          "entity_name": "Africanis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09h20b",
          "entity_name": "Rafeiro do Alentejo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c1zmz",
          "entity_name": "Central Asian Shepherd Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j7vm",
          "entity_name": "Kuvasz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0ysvz",
          "entity_name": "Louisiana Catahoula Leopard Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.011l1",
          "entity_name": "Afghan Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.018ywq",
          "entity_name": "Scottish Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01_gx_",
          "entity_name": "Yorkshire Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p89l",
          "entity_name": "Sarplaninac"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025s7vs",
          "entity_name": "Briquet Griffon Vendéen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.028y5g",
          "entity_name": "Saarloos wolfdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02f1fz",
          "entity_name": "West Highland White Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kn5w",
          "entity_name": "Entlebucher Mountain Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02q6wxt",
          "entity_name": "Karakachan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02rf9c3",
          "entity_name": "Central Anatolian Shepherd Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ryncw",
          "entity_name": "Ariege Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xv1",
          "entity_name": "Lakeland Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.035405",
          "entity_name": "Finnish Spitz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0355ff",
          "entity_name": "Greenland Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03c51t7",
          "entity_name": "Welsh Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03dszr",
          "entity_name": "Akbash dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04371y",
          "entity_name": "Kangal dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045tty",
          "entity_name": "Japanese Chin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052h3c",
          "entity_name": "Karelian Bear Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06m828",
          "entity_name": "Petit Basset Griffon Vendéen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06v_sc",
          "entity_name": "American Foxhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.089vcl",
          "entity_name": "Thai Ridgeback"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c40t",
          "entity_name": "Chow Chow"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03ys4",
          "entity_name": "Ibizan Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0fxnkq",
          "entity_name": "Moscow Watchdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01j0g",
          "entity_name": "Borzoi"
        }
      ]
    },
    {
      "question": "what rocket engine designer designs a bipropellant rocket engine with unsymmetrical dimethylhydrazine and pressure-fed engine?",
      "qid": "4300753010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Pressure-fed engine": "m.04qqrz",
        "Unsymmetrical dimethylhydrazine": "m.017q1y"
      },
      "s_expression": "(AND spaceflight.rocket_engine_designer (JOIN spaceflight.rocket_engine_designer.rocket_engines (AND (JOIN (R spaceflight.rocket_engine_cycle.rocket_engines) m.04qqrz) (JOIN (R spaceflight.rocket_engine_fuel.rocket_engines) m.017q1y))))",
      "actions": [
        "get_relations(m.04qqrz)",
        "get_neighbors(m.04qqrz,spaceflight.rocket_engine_cycle.rocket_engines)",
        "get_relations(m.017q1y)",
        "get_neighbors(m.017q1y,spaceflight.rocket_engine_fuel.rocket_engines)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,spaceflight.rocket_engine.designed_by)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05_t5k",
          "entity_name": "Aleksei Mihailovich Isaev"
        }
      ]
    },
    {
      "question": "arnett moultrie, author of if ifs were gifts, every day would be christmas., was known for playing what basketball position?",
      "qid": "4300563005000_grailqa",
      "source": "grailqa",
      "entities": {
        "If ifs were gifts, every day would be Christmas.": "m.0jvfpbf",
        "Arnett Moultrie": "m.0k0k4qn"
      },
      "s_expression": "(AND basketball.basketball_position (AND (JOIN basketball.basketball_position.players (JOIN (R media_common.quotation.author) m.0jvfpbf)) (JOIN basketball.basketball_position.players m.0k0k4qn)))",
      "actions": [
        "get_relations(m.0jvfpbf)",
        "get_neighbors(m.0jvfpbf,media_common.quotation.author)",
        "get_relations(#0)",
        "get_neighbors(#0,basketball.basketball_player.position_s)",
        "get_relations(m.0k0k4qn)",
        "get_neighbors(m.0k0k4qn,basketball.basketball_player.position_s)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pv51",
          "entity_name": "Power forward"
        }
      ]
    },
    {
      "question": "Where does the team owned by Paul G. Allen Family Foundation play?",
      "qid": "WebQTest-784_395b21b08e465b8c159e7c913b06be6e_cwq",
      "source": "cwq",
      "entities": {
        "Paul G. Allen Family Foundation": "m.03bzsxk"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.professional_sports_team.owner_s m.03bzsxk)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.03bzsxk)",
        "get_neighbors(m.03bzsxk,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.01db_j",
          "answer_type": "Entity",
          "entity_name": "CenturyLink Field"
        }
      ]
    },
    {
      "question": "When is the last time the team that plays at Three Rivers Stadium won a Super Bowl?",
      "qid": "WebQTest-1523_4420dc6a68ebd6b5cd6330ffface9ebb_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "Three Rivers Stadium": "m.037286"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.037286)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.037286)",
        "get_neighbors(m.037286,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04n7r5",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLIII"
        }
      ]
    },
    {
      "question": "what duet was most recently performed?",
      "qid": "4303240007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Duet": "m.017bqr"
      },
      "s_expression": "(ARGMAX (AND music.composition (JOIN music.composition.form (JOIN music.compositional_form.superforms m.017bqr))) music.composition.date_of_first_performance)",
      "actions": [
        "get_relations(m.017bqr)",
        "get_neighbors(m.017bqr,music.compositional_form.subforms)",
        "get_relations(#0)",
        "get_neighbors(#0,music.compositional_form.compositions)",
        "get_attributes(#1)",
        "argmax(#1,music.composition.date_of_first_performance)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04hwxg",
          "entity_name": "Ma mère l'oie"
        }
      ]
    },
    {
      "question": "what isos from nikkor does d1 support?",
      "qid": "4304013003000_grailqa",
      "source": "grailqa",
      "entities": {
        "d1": "m.07mx9v",
        "Nikkor": "m.030s04"
      },
      "s_expression": "(AND digicams.camera_iso (AND (JOIN digicams.camera_iso.cameras m.07mx9v) (JOIN (R digicams.digital_camera.iso_setting) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.030s04))))",
      "actions": [
        "get_relations(m.07mx9v)",
        "get_neighbors(m.07mx9v,digicams.digital_camera.iso_setting)",
        "get_relations(m.030s04)",
        "get_neighbors(m.030s04,digicams.camera_sensor_manufacturer.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.iso_setting)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg58",
          "entity_name": "800"
        }
      ]
    },
    {
      "question": "what is another martial art that involves strike and is in the same category as kalaripayattu?",
      "qid": "4301064003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Kalaripayattu": "m.01qcyb",
        "Strike": "m.02rj0b"
      },
      "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.01qcyb)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.02rj0b)))",
      "actions": [
        "get_relations(m.01qcyb)",
        "get_neighbors(m.01qcyb,martial_arts.martial_art.category)",
        "get_relations(#0)",
        "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
        "get_relations(m.02rj0b)",
        "get_neighbors(m.02rj0b,martial_arts.martial_art_category.martial_arts)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tm7f",
          "entity_name": "Kajukenbo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03bs3p",
          "entity_name": "Sanshou"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.041d65",
          "entity_name": "Vovinam"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07k4r",
          "entity_name": "Tai chi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01vqp5",
          "entity_name": "Systema"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09h901",
          "entity_name": "Shidōkan Karate"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hbj9",
          "entity_name": "Hapkido"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.055rn5",
          "entity_name": "Kuk Sool Won"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02618d8",
          "entity_name": "Russian All-Round Fighting"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.048yh",
          "entity_name": "Krav Maga"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b65c",
          "entity_name": "Hwa Rang Do"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.061px",
          "entity_name": "Pankration"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06jm_r",
          "entity_name": "Bartitsu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06k44z",
          "entity_name": "Modern Arnis"
        }
      ]
    },
    {
      "question": "which religion is part of east asian religions and has same practices with buddhism?",
      "qid": "4300140015000_grailqa",
      "source": "grailqa",
      "entities": {
        "East Asian religions": "m.028b9mc",
        "Buddhism": "m.092bf5"
      },
      "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.092bf5)) (JOIN religion.religion.is_part_of m.028b9mc)))",
      "actions": [
        "get_relations(m.092bf5)",
        "get_neighbors(m.092bf5,religion.religion.practices)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religious_practice.practice_of)",
        "get_relations(m.028b9mc)",
        "get_neighbors(m.028b9mc,religion.religion.includes)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gvx",
          "entity_name": "Taoism"
        }
      ]
    },
    {
      "question": "Which timezone is in Pennsylvania in close proximity to Venice Municipal Airport?",
      "qid": "WebQTest-1574_623b8370871966e2e8aeb301482e1558_cwq",
      "source": "cwq",
      "entities": {
        "Pennsylvania": "m.05tbn",
        "Venice Municipal Airport": "m.026w2y7"
      },
      "s_expression": "(AND (JOIN (R location.location.time_zones) m.05tbn) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.026w2y7)))",
      "actions": [
        "get_relations(m.05tbn)",
        "get_neighbors(m.05tbn,location.location.time_zones)",
        "get_relations(m.026w2y7)",
        "get_neighbors(m.026w2y7,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02hcv8",
          "answer_type": "Entity",
          "entity_name": "Eastern Time Zone"
        }
      ]
    },
    {
      "question": "What's the most recent event in which the sports team with a mascot whose moniker is Thunder won the Super Bowl?",
      "qid": "WebQTest-969_5136af6b390b0496a438c60c7f206a98_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "Thunder": "m.0_h1qbn"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.0_h1qbn)) (JOIN time.event.instance_of_recurring_event m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.0_h1qbn)",
        "get_neighbors(m.0_h1qbn,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,time.recurring_event.instances)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.076y0",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXXIII"
        }
      ]
    },
    {
      "question": "Which type of breast cancer did the person who wrote \"Anything But Down\" have?",
      "qid": "WebQTest-2014_4c934fc6f393a94ba03d07cbb2707006_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "Anything but Down": "m.0bxy12"
      },
      "s_expression": "(AND (JOIN (R medicine.notable_person_with_medical_condition.condition) (JOIN music.composer.compositions m.0bxy12)) (JOIN medicine.disease.parent_disease m.0qcr0))",
      "actions": [
        "get_relations(m.0bxy12)",
        "get_neighbors(m.0bxy12,music.composition.composer)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.notable_person_with_medical_condition.condition)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,medicine.disease.includes_diseases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.03z_9l",
          "answer_type": "Entity",
          "entity_name": "Meningioma"
        }
      ]
    },
    {
      "question": "what is the name of the most recently formed cyclone in the same category as hurricane katrina?",
      "qid": "4303808005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Hurricane Katrina": "m.07nnlb"
      },
      "s_expression": "(ARGMAX (AND meteorology.tropical_cyclone (JOIN meteorology.tropical_cyclone.category (JOIN (R meteorology.tropical_cyclone.category) m.07nnlb))) meteorology.tropical_cyclone.formed)",
      "actions": [
        "get_relations(m.07nnlb)",
        "get_neighbors(m.07nnlb,meteorology.tropical_cyclone.category)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
        "get_attributes(#1)",
        "argmax(#1,meteorology.tropical_cyclone.formed)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0y52xn7",
          "entity_name": "Cyclone Phailin"
        }
      ]
    },
    {
      "question": "Name the children of the lyricist of \"Nutbush City Limits\" and her former husband Ike.?",
      "qid": "WebQTest-1655_bbaf551573c0730e09d76355849de739_cwq",
      "source": "cwq",
      "entities": {
        "ike": "m.0dbzg",
        "Nutbush City Limits": "m.09l02c"
      },
      "s_expression": "(AND (JOIN (R people.person.children) (JOIN music.lyricist.lyrics_written m.09l02c)) (JOIN people.person.parents m.0dbzg))",
      "actions": [
        "get_relations(m.09l02c)",
        "get_neighbors(m.09l02c,music.composition.lyricist)",
        "get_relations(#0)",
        "get_neighbors(#0,people.person.children)",
        "get_relations(m.0dbzg)",
        "get_neighbors(m.0dbzg,people.person.children)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0ggl36p",
          "answer_type": "Entity",
          "entity_name": "Ronnie Turner"
        },
        {
          "answer_argument": "m.0j5dh53",
          "answer_type": "Entity",
          "entity_name": "Raymond Craig Turner"
        }
      ]
    },
    {
      "question": "When did the champion of the 1999 World Series win their first World Series?",
      "qid": "WebQTrn-1929_de8581ad379fdf8fb0e03c89e19ead1a_cwq",
      "source": "cwq",
      "entities": {
        "1999 World Series": "m.04j7wv"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.04j7wv)) time.event.end_date)",
      "actions": [
        "get_relations(m.04j7wv)",
        "get_neighbors(m.04j7wv,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04tfv7",
          "answer_type": "Entity",
          "entity_name": "1923 World Series"
        }
      ]
    },
    {
      "question": "Sports team owner Fred Wilpon's sports team last won the World Series in what year?",
      "qid": "WebQTest-1556_dd3d9d37a08956cba39347a0d259233a_cwq",
      "source": "cwq",
      "entities": {
        "Fred Wilpon": "m.07v42m"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.07v42m)) time.event.end_date)",
      "actions": [
        "get_relations(m.07v42m)",
        "get_neighbors(m.07v42m,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q9lc",
          "answer_type": "Entity",
          "entity_name": "1986 World Series"
        }
      ]
    },
    {
      "question": "which isos does the camera nikon coolpix s700 support from nikon corp.?",
      "qid": "4304013013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Nikon Coolpix S700": "m.03q2q_4",
        "nikon corp.": "m.03pmfw"
      },
      "s_expression": "(AND digicams.camera_iso (AND (JOIN digicams.camera_iso.cameras m.03q2q_4) (JOIN (R digicams.digital_camera.iso_setting) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.03pmfw))))",
      "actions": [
        "get_relations(m.03q2q_4)",
        "get_neighbors(m.03q2q_4,digicams.digital_camera.iso_setting)",
        "get_relations(m.03pmfw)",
        "get_neighbors(m.03pmfw,digicams.camera_sensor_manufacturer.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.iso_setting)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04l497s",
          "entity_name": "2000"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04nrl44",
          "entity_name": "160"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04nrl4h",
          "entity_name": "320"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04p7pwg",
          "entity_name": "130"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04pf295",
          "entity_name": "120"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_x",
          "entity_name": "100"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_g",
          "entity_name": "400"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_p",
          "entity_name": "200"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg4v",
          "entity_name": "3200"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg51",
          "entity_name": "1600"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg58",
          "entity_name": "800"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04npjzb",
          "entity_name": "1000"
        }
      ]
    },
    {
      "question": "for those casinos owned by the same guy as bellagio, which one has the least rooms?",
      "qid": "496000100_graphquestions",
      "source": "graphquestions",
      "entities": {
        "Bellagio": "m.033bxs"
      },
      "s_expression": "(ARGMIN (AND base.casinos.casino (JOIN (R base.casinos.casino_owner.casinos_owned) (JOIN base.casinos.casino_owner.casinos_owned m.033bxs))) base.casinos.casino.rooms)",
      "actions": [
        "get_relations(m.033bxs)",
        "get_neighbors(m.033bxs,base.casinos.casino.owner)",
        "get_relations(#0)",
        "get_neighbors(#0,base.casinos.casino_owner.casinos_owned)",
        "get_attributes(#1)",
        "argmin(#1,base.casinos.casino.rooms)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0937y7",
          "entity_name": "Nevada Landing Hotel and Casino"
        }
      ]
    },
    {
      "question": "Team owner Leslie Alexander sports team won their first Championship in what year?",
      "qid": "WebQTest-1734_91d303bf23f9a9eeb4e2fb2c28cf04b2_cwq",
      "source": "cwq",
      "entities": {
        "Leslie Alexander": "m.02qpcbt"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.02qpcbt)) time.event.start_date)",
      "actions": [
        "get_relations(m.02qpcbt)",
        "get_neighbors(m.02qpcbt,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.08x9cq",
          "answer_type": "Entity",
          "entity_name": "1994 NBA Finals"
        }
      ]
    },
    {
      "question": "what character who has the ability of create objects of all sorts temporarily had an item that was eventually destroyed by tempus?",
      "qid": "4302209008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Tempus": "m.0bxj80p",
        "create objects of all sorts temporarily": "m.0c1qd9d"
      },
      "s_expression": "(AND fictional_universe.fictional_character (AND (JOIN fictional_universe.fictional_character.has_possessed (JOIN fictional_universe.fictional_object.destroyer m.0bxj80p)) (JOIN fictional_universe.fictional_character.powers_or_abilities m.0c1qd9d)))",
      "actions": [
        "get_relations(m.0bxj80p)",
        "get_neighbors(m.0bxj80p,fictional_universe.fictional_object_destroyer.fictional_objects_destroyed)",
        "get_relations(#0)",
        "get_neighbors(#0,fictional_universe.fictional_object.owner)",
        "get_relations(m.0c1qd9d)",
        "get_neighbors(m.0c1qd9d,fictional_universe.character_powers.characters_with_this_ability)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cpg08q",
          "entity_name": "Randal"
        }
      ]
    },
    {
      "question": "Who was a marketer and also started pixar?",
      "qid": "WebQTrn-248_51c33788bda1a96faa88e76b02bd23eb_cwq",
      "source": "cwq",
      "entities": {
        "Pixar": "m.0kk9v",
        "Marketer": "m.02h6nh1"
      },
      "s_expression": "(AND (JOIN (R organization.organization.founders) m.0kk9v) (JOIN influence.influence_node.influenced (JOIN people.person.profession m.02h6nh1)))",
      "actions": [
        "get_relations(m.0kk9v)",
        "get_neighbors(m.0kk9v,organization.organization.founders)",
        "get_relations(m.02h6nh1)",
        "get_neighbors(m.02h6nh1,people.profession.people_with_this_profession)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.06y3r",
          "answer_type": "Entity",
          "entity_name": "Steve Jobs"
        }
      ]
    },
    {
      "question": "which fictional character lives in planet of trek?",
      "qid": "4300742008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Planet": "m.05qc_",
        "trek": "m.06mv6"
      },
      "s_expression": "(AND fictional_universe.fictional_character (JOIN fictional_universe.fictional_character.places_lived (AND (JOIN fictional_universe.fictional_setting.setting_type m.05qc_) (JOIN (R fictional_universe.fictional_universe.locations) m.06mv6))))",
      "actions": [
        "get_relations(m.05qc_)",
        "get_neighbors(m.05qc_,fictional_universe.type_of_fictional_setting.settings)",
        "get_relations(m.06mv6)",
        "get_neighbors(m.06mv6,fictional_universe.fictional_universe.locations)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,fictional_universe.fictional_setting.characters_that_have_lived_here)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.012gt9",
          "entity_name": "Sarek"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hp0z",
          "entity_name": "Tasha Yar"
        }
      ]
    },
    {
      "question": "what kind of content do the producer of taylor made piano: a jazz history and northwest public radio produce?",
      "qid": "4300832008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Taylor Made Piano: A Jazz History": "m.05v20r_",
        "Northwest Public Radio": "m.03d6t15"
      },
      "s_expression": "(AND broadcast.content (AND (JOIN broadcast.content.producer (JOIN broadcast.producer.produces m.05v20r_)) (JOIN broadcast.content.producer m.03d6t15)))",
      "actions": [
        "get_relations(m.05v20r_)",
        "get_neighbors(m.05v20r_,broadcast.content.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,broadcast.producer.produces)",
        "get_relations(m.03d6t15)",
        "get_neighbors(m.03d6t15,broadcast.producer.produces)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03d6sx9",
          "entity_name": "Northwest Public Radio NPR Podcast"
        }
      ]
    },
    {
      "question": "What year was the winning game of the World Series played in the  sports stadium called AT&T park?",
      "qid": "WebQTrn-810_c1d5c9c777c291a80c29c70ec43c45ad_cwq",
      "source": "cwq",
      "entities": {
        "AT&T Park": "m.01_gsg"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.01_gsg)) time.event.end_date)",
      "actions": [
        "get_relations(m.01_gsg)",
        "get_neighbors(m.01_gsg,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0117q3yz"
        }
      ]
    },
    {
      "question": "What books for kids were written by the author of \"Gregor and the Marks of Secret?\"?",
      "qid": "WebQTrn-3364_1e0ab1f8416d25428da8c1da8b723791_cwq",
      "source": "cwq",
      "entities": {
        "Children's literature": "m.0dwly",
        "Gregor and the Marks of Secret": "m.028y9ks"
      },
      "s_expression": "(AND (JOIN (R book.author.works_written) (JOIN book.author.book_editions_published m.028y9ks)) (JOIN book.book.genre m.0dwly))",
      "actions": [
        "get_relations(m.028y9ks)",
        "get_neighbors(m.028y9ks,book.book_edition.author_editor)",
        "get_relations(#0)",
        "get_neighbors(#0,book.author.works_written)",
        "get_relations(m.0dwly)",
        "get_neighbors(m.0dwly,media_common.literary_genre.books_in_this_genre)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.04t448_",
          "answer_type": "Entity",
          "entity_name": "The Underland Chronicles Book Three"
        },
        {
          "answer_argument": "m.04t448h",
          "answer_type": "Entity",
          "entity_name": "Gregor and the Code of Claw"
        },
        {
          "answer_argument": "m.04t44bh",
          "answer_type": "Entity",
          "entity_name": "FIRE PROOF"
        },
        {
          "answer_argument": "m.0dsx8l",
          "answer_type": "Entity",
          "entity_name": "Gregor and the Prophecy of Bane"
        }
      ]
    },
    {
      "question": "what sort of programming language paradigm is followed by programming languages such as potion and derivatives of c?",
      "qid": "4300417010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Potion": "m.0x21wvz",
        "C": "m.01t6b"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.01t6b)) (JOIN (R computer.programming_language.language_paradigms) m.0x21wvz)))",
      "actions": [
        "get_relations(m.01t6b)",
        "get_neighbors(m.01t6b,computer.programming_language.dialects)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.language_paradigms)",
        "get_relations(m.0x21wvz)",
        "get_neighbors(m.0x21wvz,computer.programming_language.language_paradigms)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ykw",
          "entity_name": "Functional programming"
        }
      ]
    },
    {
      "question": "in what countries is the version developed by nintendo co. ltd. and distributed through virtual console released?",
      "qid": "4301141016000_grailqa",
      "source": "grailqa",
      "entities": {
        "Virtual Console": "m.07sg3j",
        "nintendo co. ltd.": "m.059wk"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.07sg3j) (JOIN (R cvg.cvg_developer.game_versions_developed) m.059wk))))",
      "actions": [
        "get_relations(m.07sg3j)",
        "get_neighbors(m.07sg3j,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.059wk)",
        "get_neighbors(m.059wk,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02j9z",
          "entity_name": "Europe"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_3d",
          "entity_name": "Japan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059g4",
          "entity_name": "North America"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0chghy",
          "entity_name": "Australia"
        }
      ]
    },
    {
      "question": "Where does the sports team owned by Bill Neukom play?",
      "qid": "WebQTrn-1326_a188aff4a054e1ec66fafba1b8021f67_cwq",
      "source": "cwq",
      "entities": {
        "Bill Neukom": "m.03cyzbv"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.professional_sports_team.owner_s m.03cyzbv)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.03cyzbv)",
        "get_neighbors(m.03cyzbv,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.01_gsg",
          "answer_type": "Entity",
          "entity_name": "AT&T Park"
        }
      ]
    },
    {
      "question": "What type of government is in both the birthplace of Emanuel Lasker and Saudi Arabia?",
      "qid": "WebQTrn-474_3ce332b703593e71708a5604865c5758_cwq",
      "source": "cwq",
      "entities": {
        "Saudi Arabia": "m.01z215",
        "Emanuel Lasker": "m.01kfm7"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.01z215) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
      "actions": [
        "get_relations(m.01z215)",
        "get_neighbors(m.01z215,location.country.form_of_government)",
        "get_relations(m.01kfm7)",
        "get_neighbors(m.01kfm7,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0hqc2",
          "answer_type": "Entity",
          "entity_name": "Absolute monarchy"
        }
      ]
    },
    {
      "question": "what kind of content do the producer of wnyc's leonard lopate show and keith talbot produce?",
      "qid": "4300832005000_grailqa",
      "source": "grailqa",
      "entities": {
        "WNYC's Leonard Lopate Show": "m.03d7yxq",
        "Keith Talbot": "m.06gfx3b"
      },
      "s_expression": "(AND broadcast.content (AND (JOIN broadcast.content.producer (JOIN broadcast.producer.produces m.03d7yxq)) (JOIN broadcast.content.producer m.06gfx3b)))",
      "actions": [
        "get_relations(m.03d7yxq)",
        "get_neighbors(m.03d7yxq,broadcast.content.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,broadcast.producer.produces)",
        "get_relations(m.06gfx3b)",
        "get_neighbors(m.06gfx3b,broadcast.producer.produces)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05v2fbl",
          "entity_name": "Small Things Considered"
        }
      ]
    },
    {
      "question": "which tropical cyclones that affected republic of nicaragua are in the same category as cyclone phailin?",
      "qid": "4300198003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Cyclone Phailin": "m.0y52xn7",
        "republic of nicaragua": "m.05c74"
      },
      "s_expression": "(AND meteorology.tropical_cyclone (AND (JOIN (R meteorology.tropical_cyclone_category.tropical_cyclones) (JOIN (R meteorology.tropical_cyclone.category) m.0y52xn7)) (JOIN meteorology.tropical_cyclone.affected_areas m.05c74)))",
      "actions": [
        "get_relations(m.0y52xn7)",
        "get_neighbors(m.0y52xn7,meteorology.tropical_cyclone.category)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
        "get_relations(m.05c74)",
        "get_neighbors(m.05c74,meteorology.cyclone_affected_area.cyclones)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.088nnl",
          "entity_name": "Hurricane Wilma"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01ppzj",
          "entity_name": "Hurricane Mitch"
        }
      ]
    },
    {
      "question": "What is the largest country where Georgia is located?",
      "qid": "WebQTest-523_174a491f694bb264c4ccbe56d70144f1_cwq",
      "source": "cwq",
      "entities": {
        "Georgia": "m.0d0kn"
      },
      "s_expression": "(ARGMAX (JOIN (R base.locations.continents.countries_within) (JOIN location.location.partially_contains m.0d0kn)) topic_server.population_number)",
      "actions": [
        "get_relations(m.0d0kn)",
        "get_neighbors(m.0d0kn,location.location.partially_containedby)",
        "get_relations(#0)",
        "get_neighbors(#0,base.locations.continents.countries_within)",
        "get_attributes(#1)",
        "argmax(#1,topic_server.population_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.06bnz",
          "answer_type": "Entity",
          "entity_name": "Russia"
        }
      ]
    },
    {
      "question": "what position did arnett moultrie, author of if ifs were gifts, every day would be christmas., play?",
      "qid": "4300563009000_grailqa",
      "source": "grailqa",
      "entities": {
        "If ifs were gifts, every day would be Christmas.": "m.0jvfpbf",
        "Arnett Moultrie": "m.0k0k4qn"
      },
      "s_expression": "(AND basketball.basketball_position (AND (JOIN basketball.basketball_position.players (JOIN (R media_common.quotation.author) m.0jvfpbf)) (JOIN basketball.basketball_position.players m.0k0k4qn)))",
      "actions": [
        "get_relations(m.0jvfpbf)",
        "get_neighbors(m.0jvfpbf,media_common.quotation.author)",
        "get_relations(#0)",
        "get_neighbors(#0,basketball.basketball_player.position_s)",
        "get_relations(m.0k0k4qn)",
        "get_neighbors(m.0k0k4qn,basketball.basketball_player.position_s)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pv51",
          "entity_name": "Power forward"
        }
      ]
    },
    {
      "question": "who produced psycho circus and another multi-part musical release labelled beyond music?",
      "qid": "4301847002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Psycho Circus": "m.03_l_bt",
        "Beyond Music": "m.0dnftq_"
      },
      "s_expression": "(AND music.producer (AND (JOIN (R music.release.producers) (JOIN music.release.label m.0dnftq_)) (JOIN (R music.release.producers) m.03_l_bt)))",
      "actions": [
        "get_relations(m.0dnftq_)",
        "get_neighbors(m.0dnftq_,music.record_label.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.producers)",
        "get_relations(m.03_l_bt)",
        "get_neighbors(m.03_l_bt,music.release.producers)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03p43v",
          "entity_name": "Bruce Fairbairn"
        }
      ]
    },
    {
      "question": "Which is the largest nation in the area where the Juliana breed came from?",
      "qid": "WebQTest-523_92dc128ba132d9910b46ff7002918caa_cwq",
      "source": "cwq",
      "entities": {
        "Juliana": "m.010vvg6l"
      },
      "s_expression": "(ARGMAX (JOIN (R base.locations.continents.countries_within) (JOIN biology.breed_origin.breeds_originating_here m.010vvg6l)) topic_server.population_number)",
      "actions": [
        "get_relations(m.010vvg6l)",
        "get_neighbors(m.010vvg6l,biology.animal_breed.place_of_origin)",
        "get_relations(#0)",
        "get_neighbors(#0,base.locations.continents.countries_within)",
        "get_attributes(#1)",
        "argmax(#1,topic_server.population_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.06bnz",
          "answer_type": "Entity",
          "entity_name": "Russia"
        }
      ]
    },
    {
      "question": "what helicobacter infections treatments has sludge syndrome side effects?",
      "qid": "4301182010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Helicobacter Infections": "m.07y4y9n",
        "SLUDGE syndrome": "m.025yc7f"
      },
      "s_expression": "(AND medicine.medical_treatment (AND (JOIN medicine.medical_treatment.side_effects (JOIN medicine.symptom.parent_symptom m.025yc7f)) (JOIN medicine.medical_treatment.used_to_treat m.07y4y9n)))",
      "actions": [
        "get_relations(m.025yc7f)",
        "get_neighbors(m.025yc7f,medicine.symptom.includes_symptoms)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.symptom.side_effect_of)",
        "get_relations(m.07y4y9n)",
        "get_neighbors(m.07y4y9n,medicine.disease.treatments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07jvd",
          "entity_name": "Tetracycline"
        }
      ]
    },
    {
      "question": "What is the location where the film \"The Runaway Troupe of the Cartesian Theater\" takes place?",
      "qid": "WebQTrn-1090_008508d0bbe905ba355ced93a6435841_cwq",
      "source": "cwq",
      "entities": {
        "The Runaway Troupe of the Cartesian Theater": "m.0xn1_v_"
      },
      "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN film.film_location.featured_in_films m.0xn1_v_)) topic_server.population_number)",
      "actions": [
        "get_relations(m.0xn1_v_)",
        "get_neighbors(m.0xn1_v_,film.film.featured_film_locations)",
        "get_relations(#0)",
        "get_neighbors(#0,location.location.contains)",
        "get_attributes(#1)",
        "argmax(#1,topic_server.population_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.011f3wbn",
          "answer_type": "Entity",
          "entity_name": "Jingjinji"
        }
      ]
    },
    {
      "question": "what dug dosage form exist for drugs formulated from naloxone and has active ingredient enalaprilat?",
      "qid": "5400022010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Naloxone": "m.011_yk",
        "Enalaprilat": "m.0gfdnjk"
      },
      "s_expression": "(AND medicine.drug_dosage_form (AND (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.formulation_of m.011_yk)) (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.active_ingredient_moieties m.0gfdnjk))))",
      "actions": [
        "get_relations(m.011_yk)",
        "get_neighbors(m.011_yk,medicine.drug.marketed_formulations)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.drug_formulation.dosage_form)",
        "get_relations(m.0gfdnjk)",
        "get_neighbors(m.0gfdnjk,medicine.drug_ingredient.active_moiety_of_formulation)",
        "get_relations(#2)",
        "get_neighbors(#2,medicine.drug_formulation.dosage_form)",
        "intersection(#1,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hqyxrs",
          "entity_name": "Injectable solution"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kdvcr",
          "entity_name": "Injectable"
        }
      ]
    },
    {
      "question": "which school catagory do karnataka state open university and the publisher of in common alumni magazine fall under?",
      "qid": "4301751007000_grailqa",
      "source": "grailqa",
      "entities": {
        "In Common Alumni Magazine": "m.055ycp4",
        "Karnataka State Open University": "m.02vn9n8"
      },
      "s_expression": "(AND education.school_category (AND (JOIN (R education.educational_institution.school_type) (JOIN (R education.school_magazine.school) m.055ycp4)) (JOIN (R education.educational_institution.school_type) m.02vn9n8)))",
      "actions": [
        "get_relations(m.055ycp4)",
        "get_neighbors(m.055ycp4,education.school_magazine.school)",
        "get_relations(#0)",
        "get_neighbors(#0,education.educational_institution.school_type)",
        "get_relations(m.02vn9n8)",
        "get_neighbors(m.02vn9n8,education.educational_institution.school_type)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05jxkf",
          "entity_name": "Public university"
        }
      ]
    },
    {
      "question": "what number of spacecrafts did italian space agency and finmeccanica manufacture?",
      "qid": "3201449007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Italian Space Agency": "m.035c4c",
        "Finmeccanica": "m.02r3h1"
      },
      "s_expression": "(COUNT (AND spaceflight.spacecraft (AND (JOIN spaceflight.spacecraft.manufacturer m.035c4c) (JOIN spaceflight.spacecraft.manufacturer m.02r3h1))))",
      "actions": [
        "get_relations(m.035c4c)",
        "get_neighbors(m.035c4c,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "get_relations(m.02r3h1)",
        "get_neighbors(m.02r3h1,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "which musical release is produced by sunstroke (disco citizens) and released under the label xtravaganza recordings?",
      "qid": "4301990006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Sunstroke (Disco Citizens)": "m.0dtzgv_",
        "Xtravaganza Recordings": "m.0dq3mxm"
      },
      "s_expression": "(AND music.release (AND (JOIN music.release.producers (JOIN (R music.recording.producer) m.0dtzgv_)) (JOIN music.release.label m.0dq3mxm)))",
      "actions": [
        "get_relations(m.0dtzgv_)",
        "get_neighbors(m.0dtzgv_,music.recording.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,music.producer.releases_produced)",
        "get_relations(m.0dq3mxm)",
        "get_neighbors(m.0dq3mxm,music.record_label.releases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.030c0ww",
          "entity_name": "Behind the Sun"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01hg81q",
          "entity_name": "Behind the Sun"
        }
      ]
    },
    {
      "question": "Who was the Facebook inventor and lives in the Louisville metropolitan area?",
      "qid": "WebQTrn-2245_a9d8d0866a572a7afe22a5cb39d7ee11_cwq",
      "source": "cwq",
      "entities": {
        "facebook": "m.0hmyfsv",
        "Louisville metropolitan area": "m.0f2pf9"
      },
      "s_expression": "(AND (JOIN (R organization.organization.founders) m.0hmyfsv) (JOIN influence.influence_node.influenced (JOIN people.person.place_of_birth m.0f2pf9)))",
      "actions": [
        "get_relations(m.0hmyfsv)",
        "get_neighbors(m.0hmyfsv,organization.organization.founders)",
        "get_relations(m.0f2pf9)",
        "get_neighbors(m.0f2pf9,location.location.people_born_here)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.086dny",
          "answer_type": "Entity",
          "entity_name": "Mark Zuckerberg"
        }
      ]
    },
    {
      "question": "What was the first cartoon called by the owner of the radio station WHKT?",
      "qid": "WebQTrn-1461_b069d4d50cbf83db3626749738b6823e_cwq",
      "source": "cwq",
      "entities": {
        "WHKT": "m.0gpwp7"
      },
      "s_expression": "(ARGMIN (JOIN (R media_common.netflix_genre.titles) (JOIN broadcast.radio_station_owner.radio_stations m.0gpwp7)) tv.tv_program.air_date_of_first_episode)",
      "actions": [
        "get_relations(m.0gpwp7)",
        "get_neighbors(m.0gpwp7,broadcast.radio_station.owner)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.netflix_genre.titles)",
        "get_attributes(#1)",
        "argmin(#1,tv.tv_program.air_date_of_first_episode)"
      ],
      "answer": [
        {
          "answer_argument": "m.01_1p3",
          "answer_type": "Entity",
          "entity_name": "Walt Disney's Wonderful World of Color"
        }
      ]
    },
    {
      "question": "What type of government does Canada, and the birthplace of Emanuel Lasker have?",
      "qid": "WebQTest-1939_3ce332b703593e71708a5604865c5758_cwq",
      "source": "cwq",
      "entities": {
        "Canada": "m.0d060g",
        "Emanuel Lasker": "m.01kfm7"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0d060g) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
      "actions": [
        "get_relations(m.0d060g)",
        "get_neighbors(m.0d060g,location.country.form_of_government)",
        "get_relations(m.01kfm7)",
        "get_neighbors(m.01kfm7,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "When was the last Championship Magic Johnson's team won?",
      "qid": "WebQTest-1936_0c4812773890324eea74aa09e14de1cf_cwq",
      "source": "cwq",
      "entities": {
        "Magic Johnson": "m.095nx"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.095nx)) time.event.end_date)",
      "actions": [
        "get_relations(m.095nx)",
        "get_neighbors(m.095nx,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04j7ml",
          "answer_type": "Entity",
          "entity_name": "1988 World Series"
        }
      ]
    },
    {
      "question": "what breed of dog would have a similar temperament to the lapponian herder and olde english bulldogge?",
      "qid": "4300795004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Lapponian Herder": "m.0h13p6",
        "Olde English Bulldogge": "m.0622q7"
      },
      "s_expression": "(AND biology.animal_breed (JOIN biology.animal_breed.temperament (AND (JOIN (R biology.animal_breed.temperament) m.0h13p6) (JOIN biology.breed_temperament.breeds m.0622q7))))",
      "actions": [
        "get_relations(m.0h13p6)",
        "get_neighbors(m.0h13p6,biology.animal_breed.temperament)",
        "get_relations(m.0622q7)",
        "get_neighbors(m.0622q7,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,biology.breed_temperament.breeds)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p39m",
          "entity_name": "American Water Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01sc6y",
          "entity_name": "Patterdale Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03htgw",
          "entity_name": "Koolie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05sfy0",
          "entity_name": "Löwchen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08s0ws",
          "entity_name": "Boykin Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gz2b",
          "entity_name": "Australian Kelpie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kwdc",
          "entity_name": "German Wirehaired Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01t032",
          "entity_name": "Golden Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.020z66",
          "entity_name": "Miniature Schnauzer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05h0pv",
          "entity_name": "Australian Silky Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p3d7",
          "entity_name": "Alaskan Malamute"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01s7fj",
          "entity_name": "Shih Tzu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025wmcw",
          "entity_name": "Cavapoo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wbgd",
          "entity_name": "English Cocker Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wcn0z",
          "entity_name": "Russian Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.035xn5",
          "entity_name": "Toy Fox Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l5cy",
          "entity_name": "Spinone Italiano"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04svjlt",
          "entity_name": "American Squirrel Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04swlxt",
          "entity_name": "Hellenikos Ichnilatis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06h8yy",
          "entity_name": "Dogo Argentino"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08626",
          "entity_name": "Whippet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bq1jd",
          "entity_name": "Kaikadi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cbgst",
          "entity_name": "Kintamani"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0djh8b",
          "entity_name": "Silken Windhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dpx6y",
          "entity_name": "German Longhaired Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hw_s",
          "entity_name": "Basset Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.017lw7",
          "entity_name": "American Eskimo Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01k3tq",
          "entity_name": "Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01llgk",
          "entity_name": "Boxer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pq45",
          "entity_name": "Chinook"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.020dr1",
          "entity_name": "Bluetick coonhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0285t83",
          "entity_name": "German Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02fvym",
          "entity_name": "Goldendoodle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02p1d4",
          "entity_name": "St. Bernard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qx4jn",
          "entity_name": "IrishJacks"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02x9dk",
          "entity_name": "Boston Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02z2jdn",
          "entity_name": "Beagador"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02z_05",
          "entity_name": "American Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xnp",
          "entity_name": "Welsh Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03606n",
          "entity_name": "Sapsali"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0393qn",
          "entity_name": "Phalène"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_vn4",
          "entity_name": "Wire Hair Fox Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03y6bvt",
          "entity_name": "Finnish Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0410kz_",
          "entity_name": "Schapendoes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kc1b",
          "entity_name": "McNab dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04svmr1",
          "entity_name": "Denmark Feist"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04sxb0m",
          "entity_name": "Kemmer Stock Hybrid Squirrel Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05p5nvc",
          "entity_name": "Petit Bleu de Gascogne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05py4h",
          "entity_name": "Old Danish Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0632tn",
          "entity_name": "Norwegian Buhund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.076_8",
          "entity_name": "Scottish Deerhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07p7st",
          "entity_name": "Portuguese Podengo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07t_h2",
          "entity_name": "Africanis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08c5h8",
          "entity_name": "Brazilian Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cqpth",
          "entity_name": "Hortaya borzaya"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0d5yby",
          "entity_name": "Sussex Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0fsg8",
          "entity_name": "Harrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gh46s",
          "entity_name": "Tahltan Bear Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0h01s5",
          "entity_name": "Skye Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0lbw4",
          "entity_name": "Great Dane"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0blw4s",
          "entity_name": "Huntaway"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.016wfy",
          "entity_name": "Pomeranian"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.017t3p",
          "entity_name": "Airedale Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01j7n4",
          "entity_name": "Swedish Vallhund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p8tm",
          "entity_name": "Flat-Coated Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p900",
          "entity_name": "Beauceron"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pkw7",
          "entity_name": "Papillon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0262799",
          "entity_name": "Renascence Bulldogge"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026r9tr",
          "entity_name": "Austrian Pinscher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02747h5",
          "entity_name": "Basque Shepherd Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02f1fz",
          "entity_name": "West Highland White Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kh2h",
          "entity_name": "Pembroke Welsh Corgi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02l61f",
          "entity_name": "Rough Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qr3y_",
          "entity_name": "Northern Inuit Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02rjc05",
          "entity_name": "Dalmatian"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xq9",
          "entity_name": "Sealyham Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xv1",
          "entity_name": "Lakeland Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0355ff",
          "entity_name": "Greenland Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03bt6h",
          "entity_name": "Hamiltonstövare"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03svl1",
          "entity_name": "Miniature Pinscher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03vrbz",
          "entity_name": "Lhasa Apso"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04m4bq",
          "entity_name": "American Staffordshire Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.053_t0",
          "entity_name": "Stabyhoun"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.054kbj",
          "entity_name": "Utonagan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05y5lx",
          "entity_name": "Maremma Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05z86m",
          "entity_name": "Lancashire Heeler"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06m828",
          "entity_name": "Petit Basset Griffon Vendéen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06w066",
          "entity_name": "English Foxhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.071jj",
          "entity_name": "Siberian Husky"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.074hj8",
          "entity_name": "Dunker"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.076tzg6",
          "entity_name": "Berner Niederlaufhund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08qytw",
          "entity_name": "Finnish Lapphund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0h7_1g",
          "entity_name": "Plummer Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.017lg8",
          "entity_name": "Samoyed"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02vjtz",
          "entity_name": "Malinois"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.049jr6",
          "entity_name": "American Pit Bull Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.081zj5",
          "entity_name": "Welsh Springer Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08z8t9",
          "entity_name": "Miniature Siberian Husky"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cqg0t",
          "entity_name": "Akita"
        }
      ]
    },
    {
      "question": "which breeds have similar temperament as the welsh springer spaniel and the petit basset griffon vendéen?",
      "qid": "4300795006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Welsh Springer Spaniel": "m.081zj5",
        "Petit Basset Griffon Vendéen": "m.06m828"
      },
      "s_expression": "(AND biology.animal_breed (JOIN biology.animal_breed.temperament (AND (JOIN (R biology.animal_breed.temperament) m.081zj5) (JOIN biology.breed_temperament.breeds m.06m828))))",
      "actions": [
        "get_relations(m.081zj5)",
        "get_neighbors(m.081zj5,biology.animal_breed.temperament)",
        "get_relations(m.06m828)",
        "get_neighbors(m.06m828,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,biology.breed_temperament.breeds)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p39m",
          "entity_name": "American Water Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01sc6y",
          "entity_name": "Patterdale Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03htgw",
          "entity_name": "Koolie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05sfy0",
          "entity_name": "Löwchen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08s0ws",
          "entity_name": "Boykin Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gz2b",
          "entity_name": "Australian Kelpie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kwdc",
          "entity_name": "German Wirehaired Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gx1zf",
          "entity_name": "Billy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01t032",
          "entity_name": "Golden Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.020z66",
          "entity_name": "Miniature Schnauzer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05h0pv",
          "entity_name": "Australian Silky Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.074g8y",
          "entity_name": "Manchester Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05h0h0",
          "entity_name": "Bull Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0182yx",
          "entity_name": "Shetland Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.062dgz",
          "entity_name": "Lagotto Romagnolo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p08w",
          "entity_name": "Seppala Siberian Sleddog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p3d7",
          "entity_name": "Alaskan Malamute"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01s7fj",
          "entity_name": "Shih Tzu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01x5q1",
          "entity_name": "Jämthund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.020z5t",
          "entity_name": "English Springer Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025wmcw",
          "entity_name": "Cavapoo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0266ts8",
          "entity_name": "Basset Bleu de Gascogne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02cyl6",
          "entity_name": "Maltese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kf24",
          "entity_name": "Australian Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kgrx",
          "entity_name": "Cardigan Welsh Corgi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02nscg",
          "entity_name": "Bearded Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qx_df",
          "entity_name": "Picardy Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02vjrc",
          "entity_name": "Groenendael"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wbgd",
          "entity_name": "English Cocker Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wcn0z",
          "entity_name": "Russian Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.035xn5",
          "entity_name": "Toy Fox Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0388_c",
          "entity_name": "Japanese Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_7wn",
          "entity_name": "Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_vlr",
          "entity_name": "Smooth Fox Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l5cy",
          "entity_name": "Spinone Italiano"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04mgcx",
          "entity_name": "Bench-Legged Feist"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04svjlt",
          "entity_name": "American Squirrel Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04swlxt",
          "entity_name": "Hellenikos Ichnilatis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05t252",
          "entity_name": "Volpino Italiano"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05y236",
          "entity_name": "New Guinea singing dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06h8yy",
          "entity_name": "Dogo Argentino"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08626",
          "entity_name": "Whippet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bq1jd",
          "entity_name": "Kaikadi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cbgst",
          "entity_name": "Kintamani"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0djh8b",
          "entity_name": "Silken Windhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dpx6y",
          "entity_name": "German Longhaired Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gvx7",
          "entity_name": "Pharaoh Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hw_s",
          "entity_name": "Basset Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.017lw7",
          "entity_name": "American Eskimo Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01k3tq",
          "entity_name": "Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01llgk",
          "entity_name": "Boxer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pq45",
          "entity_name": "Chinook"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.020dr1",
          "entity_name": "Bluetick coonhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025_s2m",
          "entity_name": "Black Mouth Cur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025tcp1",
          "entity_name": "Russell Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0285t83",
          "entity_name": "German Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02fvym",
          "entity_name": "Goldendoodle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02fxgn",
          "entity_name": "Cockapoo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kfwr",
          "entity_name": "Poodle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ktbm",
          "entity_name": "Smooth Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02n_s4",
          "entity_name": "Korean Jindo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02p1d4",
          "entity_name": "St. Bernard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pp4mc",
          "entity_name": "Bohemian Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pxllv",
          "entity_name": "Blue Picardy Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qx4jn",
          "entity_name": "IrishJacks"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02x9dk",
          "entity_name": "Boston Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02z2jdn",
          "entity_name": "Beagador"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02z57c",
          "entity_name": "Cairn Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02z_05",
          "entity_name": "American Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xnp",
          "entity_name": "Welsh Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03606n",
          "entity_name": "Sapsali"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0393qn",
          "entity_name": "Phalène"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_vn4",
          "entity_name": "Wire Hair Fox Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03y6bvt",
          "entity_name": "Finnish Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0410kz_",
          "entity_name": "Schapendoes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.044lwh",
          "entity_name": "Irish Water Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kc1b",
          "entity_name": "McNab dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04svmr1",
          "entity_name": "Denmark Feist"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04sxb0m",
          "entity_name": "Kemmer Stock Hybrid Squirrel Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05p5nvc",
          "entity_name": "Petit Bleu de Gascogne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05py4h",
          "entity_name": "Old Danish Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0632tn",
          "entity_name": "Norwegian Buhund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06k88g",
          "entity_name": "Hovawart"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.076_8",
          "entity_name": "Scottish Deerhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07p7st",
          "entity_name": "Portuguese Podengo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07t_h2",
          "entity_name": "Africanis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07vgwn",
          "entity_name": "Pumi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08c5h8",
          "entity_name": "Brazilian Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09v1cn",
          "entity_name": "Ratonero Bodeguero Andaluz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b26w3",
          "entity_name": "Schnoodle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b3s8y",
          "entity_name": "Czechoslovakian Wolfdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bq2r1",
          "entity_name": "Indian Spitz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c3k58",
          "entity_name": "Pražský Krysařík"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cqpth",
          "entity_name": "Hortaya borzaya"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0d5yby",
          "entity_name": "Sussex Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0fsg8",
          "entity_name": "Harrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gh46s",
          "entity_name": "Tahltan Bear Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0h01s5",
          "entity_name": "Skye Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0h13p6",
          "entity_name": "Lapponian Herder"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hkfc",
          "entity_name": "Kooikerhondje"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0lbw4",
          "entity_name": "Great Dane"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0blw4s",
          "entity_name": "Huntaway"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.016wfy",
          "entity_name": "Pomeranian"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.017t3p",
          "entity_name": "Airedale Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01j7n4",
          "entity_name": "Swedish Vallhund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p8tm",
          "entity_name": "Flat-Coated Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p900",
          "entity_name": "Beauceron"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pkw7",
          "entity_name": "Papillon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0262799",
          "entity_name": "Renascence Bulldogge"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026r9tr",
          "entity_name": "Austrian Pinscher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02747h5",
          "entity_name": "Basque Shepherd Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02f1fz",
          "entity_name": "West Highland White Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kh2h",
          "entity_name": "Pembroke Welsh Corgi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02l61f",
          "entity_name": "Rough Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ppbk1",
          "entity_name": "American English Coonhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qllrh",
          "entity_name": "Porcelaine"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qr3y_",
          "entity_name": "Northern Inuit Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02rf9c3",
          "entity_name": "Central Anatolian Shepherd Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02rjc05",
          "entity_name": "Dalmatian"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02rwwfw",
          "entity_name": "Kyi-Leo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02vjst",
          "entity_name": "Laekenois"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xq9",
          "entity_name": "Sealyham Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xv1",
          "entity_name": "Lakeland Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0355ff",
          "entity_name": "Greenland Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.038wvd",
          "entity_name": "Toy Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03bt6h",
          "entity_name": "Hamiltonstövare"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03grfxm",
          "entity_name": "Taigan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03svl1",
          "entity_name": "Miniature Pinscher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03vrbz",
          "entity_name": "Lhasa Apso"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045lcs",
          "entity_name": "Chien Français Blanc et Noir"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04m4bq",
          "entity_name": "American Staffordshire Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051ppn",
          "entity_name": "Glen of Imaal Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.053_t0",
          "entity_name": "Stabyhoun"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.054kbj",
          "entity_name": "Utonagan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.055br8",
          "entity_name": "Thai Bangkaew Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05c21l",
          "entity_name": "South Russian Ovcharka"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05y5lx",
          "entity_name": "Maremma Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05z86m",
          "entity_name": "Lancashire Heeler"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0622q7",
          "entity_name": "Olde English Bulldogge"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06w066",
          "entity_name": "English Foxhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.071jj",
          "entity_name": "Siberian Husky"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.074hj8",
          "entity_name": "Dunker"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.076tzg6",
          "entity_name": "Berner Niederlaufhund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08c4cj",
          "entity_name": "Irish Bull Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08pmt0",
          "entity_name": "Alaskan Klee Kai"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08qytw",
          "entity_name": "Finnish Lapphund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08r0rx",
          "entity_name": "Norrbottenspets"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dflqz",
          "entity_name": "Blue Lacy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0h7_1g",
          "entity_name": "Plummer Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.017lg8",
          "entity_name": "Samoyed"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p2dp",
          "entity_name": "Affenpinscher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02vjtz",
          "entity_name": "Malinois"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03ys4",
          "entity_name": "Ibizan Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.049jr6",
          "entity_name": "American Pit Bull Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06c5rq",
          "entity_name": "Grand Bleu de Gascogne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08z8t9",
          "entity_name": "Miniature Siberian Husky"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cqg0t",
          "entity_name": "Akita"
        }
      ]
    },
    {
      "question": "what is the exact number of automotive classes which are examples of corvette and mustang?",
      "qid": "3206121005000_grailqa",
      "source": "grailqa",
      "entities": {
        "corvette": "m.01g8dv",
        "mustang": "m.0qk4n"
      },
      "s_expression": "(COUNT (AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples m.01g8dv) (JOIN automotive.automotive_class.examples m.0qk4n))))",
      "actions": [
        "get_relations(m.01g8dv)",
        "get_neighbors(m.01g8dv,automotive.model.automotive_class)",
        "get_relations(m.0qk4n)",
        "get_neighbors(m.0qk4n,automotive.model.automotive_class)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "how many hidden christians of japan texts exist which are religious texts of st. swithun's day?",
      "qid": "4303883012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Hidden Christians of Japan": "m.044f0r",
        "St. Swithun's Day": "m.04d1kfg"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of (JOIN (R time.holiday.featured_in_religions) m.04d1kfg)) (JOIN (R religion.religion.texts) m.044f0r))))",
      "actions": [
        "get_relations(m.04d1kfg)",
        "get_neighbors(m.04d1kfg,time.holiday.featured_in_religions)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religion.texts)",
        "get_relations(m.044f0r)",
        "get_neighbors(m.044f0r,religion.religion.texts)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what category of schools does st. thomas university and the publisher of catalyst fall under?",
      "qid": "4301751009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Catalyst": "m.02x53_0",
        "St. Thomas University": "m.0183m_"
      },
      "s_expression": "(AND education.school_category (AND (JOIN (R education.educational_institution.school_type) (JOIN (R education.school_magazine.school) m.02x53_0)) (JOIN (R education.educational_institution.school_type) m.0183m_)))",
      "actions": [
        "get_relations(m.02x53_0)",
        "get_neighbors(m.02x53_0,education.school_magazine.school)",
        "get_relations(#0)",
        "get_neighbors(#0,education.educational_institution.school_type)",
        "get_relations(m.0183m_)",
        "get_neighbors(m.0183m_,education.educational_institution.school_type)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05jxkf",
          "entity_name": "Public university"
        }
      ]
    },
    {
      "question": "what character who has the ability of god-given speed had an item that was eventually destroyed by jihan, froth daughter?",
      "qid": "4302209011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Jihan, Froth Daughter": "m.0bxttn0",
        "God-given speed": "m.0c1npg3"
      },
      "s_expression": "(AND fictional_universe.fictional_character (AND (JOIN fictional_universe.fictional_character.has_possessed (JOIN fictional_universe.fictional_object.destroyer m.0bxttn0)) (JOIN fictional_universe.fictional_character.powers_or_abilities m.0c1npg3)))",
      "actions": [
        "get_relations(m.0bxttn0)",
        "get_neighbors(m.0bxttn0,fictional_universe.fictional_object_destroyer.fictional_objects_destroyed)",
        "get_relations(#0)",
        "get_neighbors(#0,fictional_universe.fictional_object.owner)",
        "get_relations(m.0c1npg3)",
        "get_neighbors(m.0c1npg3,fictional_universe.character_powers.characters_with_this_ability)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bxj80p",
          "entity_name": "Tempus"
        }
      ]
    },
    {
      "question": "eero simoncelli conducts research in the discipline of which mathematical biology?",
      "qid": "4302233012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Mathematical Biology": "m.0b7ctsw",
        "Eero Simoncelli": "m.0dv73bm"
      },
      "s_expression": "(AND education.field_of_study (AND (JOIN (R education.field_of_study.subdisciplines) m.0b7ctsw) (JOIN (R education.field_of_study.subdiscipline_of) (JOIN (R education.academic.research_areas) m.0dv73bm))))",
      "actions": [
        "get_relations(m.0b7ctsw)",
        "get_neighbors(m.0b7ctsw,education.field_of_study.subdisciplines)",
        "get_relations(m.0dv73bm)",
        "get_neighbors(m.0dv73bm,education.academic.research_areas)",
        "get_relations(#1)",
        "get_neighbors(#1,education.field_of_study.subdiscipline_of)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.026l24y",
          "entity_name": "Computational Science and Engineering"
        }
      ]
    },
    {
      "question": "Who is Facebook's entrepreneurial founder?",
      "qid": "WebQTrn-1071_5047d3d3592520ffa29ef52b3513ed27_cwq",
      "source": "cwq",
      "entities": {
        "facebook": "m.0hmyfsv",
        "Entrepreneur": "m.09x_r"
      },
      "s_expression": "(AND (JOIN (R organization.organization.founders) m.0hmyfsv) (JOIN influence.influence_node.influenced (JOIN people.person.profession m.09x_r)))",
      "actions": [
        "get_relations(m.0hmyfsv)",
        "get_neighbors(m.0hmyfsv,organization.organization.founders)",
        "get_relations(m.09x_r)",
        "get_neighbors(m.09x_r,people.profession.people_with_this_profession)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.086dny",
          "answer_type": "Entity",
          "entity_name": "Mark Zuckerberg"
        }
      ]
    },
    {
      "question": "What person was born in Chennai and started the company Google?",
      "qid": "WebQTrn-2393_2f19aecabdce1c4ac2d49c3f1555adf9_cwq",
      "source": "cwq",
      "entities": {
        "google": "m.0387r",
        "Chennai": "m.0c8tk"
      },
      "s_expression": "(AND (JOIN (R law.invention.inventor) m.0387r) (JOIN influence.influence_node.influenced (JOIN people.person.place_of_birth m.0c8tk)))",
      "actions": [
        "get_relations(m.0387r)",
        "get_neighbors(m.0387r,law.invention.inventor)",
        "get_relations(m.0c8tk)",
        "get_neighbors(m.0c8tk,location.location.people_born_here)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0gjpq",
          "answer_type": "Entity",
          "entity_name": "Larry Page"
        }
      ]
    },
    {
      "question": "there are how many exhibition subjects in provoking magic: lighting of ingo maurer?",
      "qid": "4302933011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Provoking Magic: Lighting of Ingo Maurer": "m.04lbg5q"
      },
      "s_expression": "(COUNT (AND exhibitions.exhibition_subject (JOIN (R exhibitions.exhibition.subjects) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) (JOIN (R exhibitions.exhibition.exhibition_types) m.04lbg5q)))))",
      "actions": [
        "get_relations(m.04lbg5q)",
        "get_neighbors(m.04lbg5q,exhibitions.exhibition.exhibition_types)",
        "get_relations(#0)",
        "get_neighbors(#0,exhibitions.type_of_exhibition.exhibitions_of_this_type)",
        "get_relations(#1)",
        "get_neighbors(#1,exhibitions.exhibition.subjects)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "21"
        }
      ]
    },
    {
      "question": "what is the exact number of automotive classes which are examples of saab 96 and fso polonez?",
      "qid": "3206121001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Saab 96": "m.01x2d0",
        "FSO Polonez": "m.06ks_l"
      },
      "s_expression": "(COUNT (AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples m.01x2d0) (JOIN automotive.automotive_class.examples m.06ks_l))))",
      "actions": [
        "get_relations(m.01x2d0)",
        "get_neighbors(m.01x2d0,automotive.model.automotive_class)",
        "get_relations(m.06ks_l)",
        "get_neighbors(m.06ks_l,automotive.model.automotive_class)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "In what year was the winner of the 2009 NBA Finals' first championship win?",
      "qid": "WebQTrn-2411_2ad6219c3c23110637eefed1b9e1e870_cwq",
      "source": "cwq",
      "entities": {
        "2009 NBA Finals": "m.04gg8b0"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.04gg8b0)) time.event.start_date)",
      "actions": [
        "get_relations(m.04gg8b0)",
        "get_neighbors(m.04gg8b0,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0ct81k",
          "answer_type": "Entity",
          "entity_name": "1949 BAA Finals"
        }
      ]
    },
    {
      "question": "What area in the country that makes Harbin Beer do most people live?",
      "qid": "WebQTrn-1090_ef0862827cfcebdc3733734f32cf5470_cwq",
      "source": "cwq",
      "entities": {
        "Harbin Beer": "m.04dqmxs"
      },
      "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN food.beer_country_region.beers_from_here m.04dqmxs)) topic_server.population_number)",
      "actions": [
        "get_relations(m.04dqmxs)",
        "get_neighbors(m.04dqmxs,food.beer.from_region)",
        "get_relations(#0)",
        "get_neighbors(#0,location.location.contains)",
        "get_attributes(#1)",
        "argmax(#1,topic_server.population_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.011f3wbn",
          "answer_type": "Entity",
          "entity_name": "Jingjinji"
        }
      ]
    },
    {
      "question": "In the nation where El Gouna Beverage Co. Sakara Gold beer is produced, what languages are spoken?",
      "qid": "WebQTest-1608_3a8152d581de19d1b839f3822e9392e3_cwq",
      "source": "cwq",
      "entities": {
        "El Gouna Beverage Co. Sakara Gold": "m.04dqh1z"
      },
      "s_expression": "(JOIN (R location.country.languages_spoken) (AND (JOIN (R language.human_language.main_country) common.topic) (JOIN food.beer_country_region.beers_from_here m.04dqh1z)))",
      "actions": [
        "get_relations(common.topic)",
        "get_neighbors(common.topic,language.human_language.main_country)",
        "get_relations(m.04dqh1z)",
        "get_neighbors(m.04dqh1z,food.beer.from_region)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,location.country.languages_spoken)"
      ],
      "answer": [
        {
          "answer_argument": "m.012zfy",
          "answer_type": "Entity",
          "entity_name": "Siwi Language"
        },
        {
          "answer_argument": "m.02hx2cr",
          "answer_type": "Entity",
          "entity_name": "Egyptian Arabic"
        },
        {
          "answer_argument": "m.02hxbhg",
          "answer_type": "Entity",
          "entity_name": "Sa'idi Arabic"
        },
        {
          "answer_argument": "m.03wc2kf",
          "answer_type": "Entity",
          "entity_name": "Bedawi Arabic"
        }
      ]
    },
    {
      "question": "which music was released under the xtravaganza recordings label by the artist sunstroke (disco citizens)?",
      "qid": "4301990011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Sunstroke (Disco Citizens)": "m.0dtzgv_",
        "Xtravaganza Recordings": "m.0dq3mxm"
      },
      "s_expression": "(AND music.release (AND (JOIN music.release.producers (JOIN (R music.recording.producer) m.0dtzgv_)) (JOIN music.release.label m.0dq3mxm)))",
      "actions": [
        "get_relations(m.0dtzgv_)",
        "get_neighbors(m.0dtzgv_,music.recording.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,music.producer.releases_produced)",
        "get_relations(m.0dq3mxm)",
        "get_neighbors(m.0dq3mxm,music.record_label.releases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.030c0ww",
          "entity_name": "Behind the Sun"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01hg81q",
          "entity_name": "Behind the Sun"
        }
      ]
    },
    {
      "question": "which artwork of the era of bracha ettinger was created on canvases?",
      "qid": "4301655011000_grailqa",
      "source": "grailqa",
      "entities": {
        "bracha ettinger": "m.03c_bkb",
        "canvases": "m.0jmpt"
      },
      "s_expression": "(AND visual_art.artwork (AND (JOIN visual_art.artwork.period_or_movement (JOIN visual_art.art_period_movement.associated_artists m.03c_bkb)) (JOIN visual_art.artwork.support m.0jmpt)))",
      "actions": [
        "get_relations(m.03c_bkb)",
        "get_neighbors(m.03c_bkb,visual_art.visual_artist.associated_periods_or_movements)",
        "get_relations(#0)",
        "get_neighbors(#0,visual_art.art_period_movement.associated_artworks)",
        "get_relations(m.0jmpt)",
        "get_neighbors(m.0jmpt,visual_art.visual_art_support.artworks)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.051stx3",
          "entity_name": "Golden Meadows"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv01",
          "entity_name": "Renewal"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051stx0",
          "entity_name": "Silhouette"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051st_p",
          "entity_name": "Moody Blues"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv8w",
          "entity_name": "Exile"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051stxd",
          "entity_name": "Rapture"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svk0",
          "entity_name": "Tribute to Innes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv07",
          "entity_name": "Deja Blue"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv8s",
          "entity_name": "Too Close For Comfort"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cg_bdg",
          "entity_name": "New York #2"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv94",
          "entity_name": "Elders II"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svjy",
          "entity_name": "Crescendo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svk6",
          "entity_name": "Sultry"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051stwr",
          "entity_name": "Truce"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cg_9z5",
          "entity_name": "New York"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051stwv",
          "entity_name": "Matter of Time"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svkh",
          "entity_name": "Harmony Triptych"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svjr",
          "entity_name": "Horizon VI"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv91",
          "entity_name": "Moment In Time"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051stxh",
          "entity_name": "Between Heaven and Earth"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051stwn",
          "entity_name": "Trinity"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qbcgg",
          "entity_name": "Head (I)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv8p",
          "entity_name": "Amber Fields"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svjv",
          "entity_name": "Tree's IX"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051stx9",
          "entity_name": "Insight"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svk9",
          "entity_name": "Common Ground"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051st_w",
          "entity_name": "Last Stand"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svk3",
          "entity_name": "Tree's Company"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051stx6",
          "entity_name": "White Trees On Blue"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051st_s",
          "entity_name": "Reunion"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv0b",
          "entity_name": "Alchemy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svkd",
          "entity_name": "Sacred Ground"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv97",
          "entity_name": "Tempered Spirits"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv8h",
          "entity_name": "Unity"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv8l",
          "entity_name": "Black Trees on Red"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv8z",
          "entity_name": "Standing Room Only"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv04",
          "entity_name": "Entourage"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sv0f",
          "entity_name": "The Congregation"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051stwy",
          "entity_name": "Second Glance"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051st_z",
          "entity_name": "Six of One"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051sshw",
          "entity_name": "Room With A View"
        }
      ]
    },
    {
      "question": "When did the sports team whose home arena is M&T Bank Stadium win the Super Bowl?",
      "qid": "WebQTest-837_a65373d6ffaa966c347087864c895897_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "M&T Bank Stadium": "m.01yq7r"
      },
      "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.01yq7r)) (JOIN sports.sports_championship_event.championship m.06x5s))",
      "actions": [
        "get_relations(m.01yq7r)",
        "get_neighbors(m.01yq7r,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0642vqv"
        },
        {
          "answer_argument": "m.076yq"
        }
      ]
    },
    {
      "question": "what is the musical release produced by sue (or in a season of crime) and labelled mercury music?",
      "qid": "4301990002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Sue (Or in a Season of Crime)": "m.011tq8ql",
        "mercury music": "m.01w40h"
      },
      "s_expression": "(AND music.release (AND (JOIN music.release.producers (JOIN (R music.recording.producer) m.011tq8ql)) (JOIN music.release.label m.01w40h)))",
      "actions": [
        "get_relations(m.011tq8ql)",
        "get_neighbors(m.011tq8ql,music.recording.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,music.producer.releases_produced)",
        "get_relations(m.01w40h)",
        "get_neighbors(m.01w40h,music.record_label.releases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.035lj8t",
          "entity_name": "The Man Who Sold the World"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.049lkm2",
          "entity_name": "Mondo Bongo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.038snd2",
          "entity_name": "V Deep"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03flbhf",
          "entity_name": "V Deep"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03flbh3",
          "entity_name": "Mondo Bongo"
        }
      ]
    },
    {
      "question": "what almond dish is common in italian food?",
      "qid": "4301356008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Almond": "m.0m4v",
        "Italian food": "m.09y2k2"
      },
      "s_expression": "(AND food.type_of_dish (JOIN food.type_of_dish.dishes (AND (JOIN food.dish.ingredients m.0m4v) (JOIN (R dining.cuisine.dishes) m.09y2k2))))",
      "actions": [
        "get_relations(m.0m4v)",
        "get_neighbors(m.0m4v,food.ingredient.dishes)",
        "get_relations(m.09y2k2)",
        "get_neighbors(m.09y2k2,dining.cuisine.dishes)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,food.dish.type_of_dish1)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "g.11b6r7rvym",
          "entity_name": "Confectionery"
        }
      ]
    },
    {
      "question": "which tropical cyclones are in the same category with cyclone phailin and affected union of myanmar?",
      "qid": "4300198001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Cyclone Phailin": "m.0y52xn7",
        "union of myanmar": "m.04xn_"
      },
      "s_expression": "(AND meteorology.tropical_cyclone (AND (JOIN (R meteorology.tropical_cyclone_category.tropical_cyclones) (JOIN (R meteorology.tropical_cyclone.category) m.0y52xn7)) (JOIN meteorology.tropical_cyclone.affected_areas m.04xn_)))",
      "actions": [
        "get_relations(m.0y52xn7)",
        "get_neighbors(m.0y52xn7,meteorology.tropical_cyclone.category)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
        "get_relations(m.04xn_)",
        "get_neighbors(m.04xn_,meteorology.cyclone_affected_area.cyclones)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.041l08b",
          "entity_name": "Cyclone Nargis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06g61z",
          "entity_name": "1999 Odisha cyclone"
        }
      ]
    },
    {
      "question": "what is the name of the character that has the ability of clairvoyance had an item that was eventually destroyed by jihan, froth daughter?",
      "qid": "4302209014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Jihan, Froth Daughter": "m.0bxttn0",
        "Clairvoyance": "m.025gb"
      },
      "s_expression": "(AND fictional_universe.fictional_character (AND (JOIN fictional_universe.fictional_character.has_possessed (JOIN fictional_universe.fictional_object.destroyer m.0bxttn0)) (JOIN fictional_universe.fictional_character.powers_or_abilities m.025gb)))",
      "actions": [
        "get_relations(m.0bxttn0)",
        "get_neighbors(m.0bxttn0,fictional_universe.fictional_object_destroyer.fictional_objects_destroyed)",
        "get_relations(#0)",
        "get_neighbors(#0,fictional_universe.fictional_object.owner)",
        "get_relations(m.025gb)",
        "get_neighbors(m.025gb,fictional_universe.character_powers.characters_with_this_ability)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bxtyd0",
          "entity_name": "Roxane, Nisibisi witch"
        }
      ]
    },
    {
      "question": "the people's national party and south australian state election, 2002 have what political ideology?",
      "qid": "4302370002000_grailqa",
      "source": "grailqa",
      "entities": {
        "South Australian state election, 2002": "m.0b9lp1",
        "People's National Party": "m.01d5dd"
      },
      "s_expression": "(AND government.political_ideology (AND (JOIN government.political_ideology.political_parties (JOIN (R government.parliamentary_election.government_formed_by) m.0b9lp1)) (JOIN (R government.political_party.ideology) m.01d5dd)))",
      "actions": [
        "get_relations(m.0b9lp1)",
        "get_neighbors(m.0b9lp1,government.parliamentary_election.government_formed_by)",
        "get_relations(#0)",
        "get_neighbors(#0,government.political_party.ideology)",
        "get_relations(m.01d5dd)",
        "get_neighbors(m.01d5dd,government.political_party.ideology)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.06qnz",
          "entity_name": "Social democracy"
        }
      ]
    },
    {
      "question": "what temperament does the breed of chase \"that golden thunder\" and belgian tervuren share?",
      "qid": "4300459013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Chase \"That Golden Thunder\"": "m.0w7k70c",
        "belgian tervuren": "m.02vjwg"
      },
      "s_expression": "(AND biology.breed_temperament (AND (JOIN (R biology.animal_breed.temperament) (JOIN (R biology.pedigreed_animal.breed) m.0w7k70c)) (JOIN (R biology.animal_breed.temperament) m.02vjwg)))",
      "actions": [
        "get_relations(m.0w7k70c)",
        "get_neighbors(m.0w7k70c,biology.pedigreed_animal.breed)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.02vjwg)",
        "get_neighbors(m.02vjwg,biology.animal_breed.temperament)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kpkld",
          "entity_name": "Intelligent"
        }
      ]
    },
    {
      "question": "what breed has the same temperament as basset hounds and guejae gae?",
      "qid": "4300795000000_grailqa",
      "source": "grailqa",
      "entities": {
        "basset hounds": "m.0hw_s",
        "Guejae Gae": "m.026067b"
      },
      "s_expression": "(AND biology.animal_breed (JOIN biology.animal_breed.temperament (AND (JOIN (R biology.animal_breed.temperament) m.0hw_s) (JOIN biology.breed_temperament.breeds m.026067b))))",
      "actions": [
        "get_relations(m.0hw_s)",
        "get_neighbors(m.0hw_s,biology.animal_breed.temperament)",
        "get_relations(m.026067b)",
        "get_neighbors(m.026067b,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,biology.breed_temperament.breeds)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02r4blp",
          "entity_name": "Braque d'Auvergne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0km3f",
          "entity_name": "Labrador Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0182yx",
          "entity_name": "Shetland Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0183xd",
          "entity_name": "Vizsla"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01hzb8",
          "entity_name": "Great Pyrenees"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pm38",
          "entity_name": "Clumber Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01s7fj",
          "entity_name": "Shih Tzu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02cyl6",
          "entity_name": "Maltese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03cq_p",
          "entity_name": "Kerry Blue Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03d12",
          "entity_name": "Greyhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l5cy",
          "entity_name": "Spinone Italiano"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03ydd_",
          "entity_name": "Havanese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04dm6",
          "entity_name": "Komondor"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04nmst",
          "entity_name": "King Charles Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05y236",
          "entity_name": "New Guinea singing dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08626",
          "entity_name": "Whippet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08f_zh",
          "entity_name": "Pont-Audemer Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bjrtp",
          "entity_name": "Cirneco dell'Etna"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bllpv",
          "entity_name": "Puggle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dpx6y",
          "entity_name": "German Longhaired Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gt5n2",
          "entity_name": "Cretan Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0nr94",
          "entity_name": "Bichon Frise"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01d7mc",
          "entity_name": "Black and Tan Coonhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01dj7",
          "entity_name": "Beagle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pyhj",
          "entity_name": "Shiloh Shepherd Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026qz0j",
          "entity_name": "Polish Hunting Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02p1d4",
          "entity_name": "St. Bernard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pxllv",
          "entity_name": "Blue Picardy Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02z2jdn",
          "entity_name": "Beagador"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03606n",
          "entity_name": "Sapsali"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03h71r",
          "entity_name": "Bouvier des Flandres"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06llrr",
          "entity_name": "Carolina Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.076_8",
          "entity_name": "Scottish Deerhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08c5h8",
          "entity_name": "Brazilian Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.093z2k",
          "entity_name": "Carlin Pinscher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kkkg",
          "entity_name": "Istrian Coarse-haired Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c3k58",
          "entity_name": "Pražský Krysařík"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gh46s",
          "entity_name": "Tahltan Bear Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0lbw4",
          "entity_name": "Great Dane"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0m1ct",
          "entity_name": "Wirehaired Pointing Griffon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0ysvz",
          "entity_name": "Louisiana Catahoula Leopard Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01z404",
          "entity_name": "Newfoundland"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02l61f",
          "entity_name": "Rough Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qllrh",
          "entity_name": "Porcelaine"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qr3y_",
          "entity_name": "Northern Inuit Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03g_78s",
          "entity_name": "Gaddi Kutta"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04sxch4",
          "entity_name": "Pocket Beagle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051ppn",
          "entity_name": "Glen of Imaal Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06w066",
          "entity_name": "English Foxhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.071jj",
          "entity_name": "Siberian Husky"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gz1d",
          "entity_name": "English Setter"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.018z4d",
          "entity_name": "Bloodhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03cr7fw",
          "entity_name": "Morkie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05pyhd",
          "entity_name": "Tibetan Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.035w0_",
          "entity_name": "Perro de Presa Canario"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01j0g",
          "entity_name": "Borzoi"
        }
      ]
    },
    {
      "question": "what breed of dog would have a similar temperament to the blue lacy and chinese crested dog?",
      "qid": "4300795008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Blue Lacy": "m.0dflqz",
        "Chinese Crested Dog": "m.01f57_"
      },
      "s_expression": "(AND biology.animal_breed (JOIN biology.animal_breed.temperament (AND (JOIN (R biology.animal_breed.temperament) m.0dflqz) (JOIN biology.breed_temperament.breeds m.01f57_))))",
      "actions": [
        "get_relations(m.0dflqz)",
        "get_neighbors(m.0dflqz,biology.animal_breed.temperament)",
        "get_relations(m.01f57_)",
        "get_neighbors(m.01f57_,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,biology.breed_temperament.breeds)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.027dd3t",
          "entity_name": "Black Norwegian Elkhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gz2b",
          "entity_name": "Australian Kelpie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0khhs",
          "entity_name": "Chihuahua"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.020z66",
          "entity_name": "Miniature Schnauzer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05h0pv",
          "entity_name": "Australian Silky Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01nw62",
          "entity_name": "Rottweiler"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.074g8y",
          "entity_name": "Manchester Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0182yx",
          "entity_name": "Shetland Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0km5c",
          "entity_name": "German Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01j0x",
          "entity_name": "Basenji"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01s7fj",
          "entity_name": "Shih Tzu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.020z5t",
          "entity_name": "English Springer Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027dtrb",
          "entity_name": "Swedish Lapphund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02_73c",
          "entity_name": "Rat Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kgrx",
          "entity_name": "Cardigan Welsh Corgi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02nscg",
          "entity_name": "Bearded Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.031pqh",
          "entity_name": "Peruvian Hairless Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0353h4",
          "entity_name": "Border Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.035xn5",
          "entity_name": "Toy Fox Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.038wt3",
          "entity_name": "French Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_vlr",
          "entity_name": "Smooth Fox Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03cq_p",
          "entity_name": "Kerry Blue Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0403wp9",
          "entity_name": "Muggin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04svjlt",
          "entity_name": "American Squirrel Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04xx17",
          "entity_name": "Griffon Bruxellois"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.057_4d",
          "entity_name": "Canadian Eskimo Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05y236",
          "entity_name": "New Guinea singing dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08gl4z",
          "entity_name": "Dutch Shepherd Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cbgst",
          "entity_name": "Kintamani"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.017lw7",
          "entity_name": "American Eskimo Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01hxnh",
          "entity_name": "Bullmastiff"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p2gv",
          "entity_name": "Aidi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p33b",
          "entity_name": "Mudi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pq45",
          "entity_name": "Chinook"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025tcp1",
          "entity_name": "Russell Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0282d_y",
          "entity_name": "Drever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0286819",
          "entity_name": "Formosan Mountain Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kfwr",
          "entity_name": "Poodle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ktbm",
          "entity_name": "Smooth Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xnp",
          "entity_name": "Welsh Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0363rs",
          "entity_name": "Toy Manchester Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0393qn",
          "entity_name": "Phalène"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_vn4",
          "entity_name": "Wire Hair Fox Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03vgc4",
          "entity_name": "Norwegian Elkhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.044lwh",
          "entity_name": "Irish Water Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04sxb0m",
          "entity_name": "Kemmer Stock Hybrid Squirrel Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04syk4v",
          "entity_name": "Treeing Feist"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08c5h8",
          "entity_name": "Brazilian Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08pb1g",
          "entity_name": "Australian Stumpy Tail Cattle Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b0yt1",
          "entity_name": "Caucasian Shepherd Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bqb_n",
          "entity_name": "Hokkaido"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c3k58",
          "entity_name": "Pražský Krysařík"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dbk_j",
          "entity_name": "Kai Ken"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hkfc",
          "entity_name": "Kooikerhondje"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.012blf",
          "entity_name": "Icelandic Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.017t3p",
          "entity_name": "Airedale Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.018ywq",
          "entity_name": "Scottish Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01j7n4",
          "entity_name": "Swedish Vallhund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01k9j2",
          "entity_name": "Mexican Hairless Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pkw7",
          "entity_name": "Papillon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01z0mh",
          "entity_name": "Norwegian Lundehund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025_s6d",
          "entity_name": "Croatian Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026r9tr",
          "entity_name": "Austrian Pinscher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027m5s1",
          "entity_name": "Chilean Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02f1fz",
          "entity_name": "West Highland White Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02gf0p",
          "entity_name": "Australian Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02vjst",
          "entity_name": "Laekenois"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02z2qy0",
          "entity_name": "Kishu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.032xq9",
          "entity_name": "Sealyham Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.035xq8",
          "entity_name": "Tenterfield Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.037jtq",
          "entity_name": "Greater Swiss Mountain Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03f84m",
          "entity_name": "American Hairless Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03fqgz",
          "entity_name": "Australian Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03jxpp",
          "entity_name": "Tornjak"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l04k",
          "entity_name": "Nova Scotia Duck Tolling Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03nn344",
          "entity_name": "Catahoula Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03vrbz",
          "entity_name": "Lhasa Apso"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0413r8v",
          "entity_name": "Treeing Cur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04371y",
          "entity_name": "Kangal dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045tty",
          "entity_name": "Japanese Chin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05912f",
          "entity_name": "White Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05y5lx",
          "entity_name": "Maremma Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05z86m",
          "entity_name": "Lancashire Heeler"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0622q7",
          "entity_name": "Olde English Bulldogge"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06g210",
          "entity_name": "Canaan Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06pq2r",
          "entity_name": "Doberman Pinscher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.071jj",
          "entity_name": "Siberian Husky"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.076_n",
          "entity_name": "Sloughi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.077hh",
          "entity_name": "Shiba Inu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.082x3k",
          "entity_name": "Eurasier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08kkns",
          "entity_name": "Plott Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08r0rx",
          "entity_name": "Norrbottenspets"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cpws4",
          "entity_name": "German Spitz Klein"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g0rch",
          "entity_name": "Danish Swedish Farmdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gz0j",
          "entity_name": "Gordon Setter"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0h7_1g",
          "entity_name": "Plummer Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0pwdp",
          "entity_name": "Border Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.017lg8",
          "entity_name": "Samoyed"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kwjt",
          "entity_name": "Weimaraner"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02vjtz",
          "entity_name": "Malinois"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02vjwg",
          "entity_name": "Tervuren"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0353wm",
          "entity_name": "English Toy Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0354by",
          "entity_name": "Grand Basset Griffon Vendéen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.066s95",
          "entity_name": "Estrela Mountain Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cqg0t",
          "entity_name": "Akita"
        }
      ]
    },
    {
      "question": "What system of government is in place in both Canada and the birthplace of Emanuel Lasker?",
      "qid": "WebQTrn-3495_3ce332b703593e71708a5604865c5758_cwq",
      "source": "cwq",
      "entities": {
        "Canada": "m.0d060g",
        "Emanuel Lasker": "m.01kfm7"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0d060g) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
      "actions": [
        "get_relations(m.0d060g)",
        "get_neighbors(m.0d060g,location.country.form_of_government)",
        "get_relations(m.01kfm7)",
        "get_neighbors(m.01kfm7,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "What was the last Superbowl won by the team that plays in AT&T Stadium?",
      "qid": "WebQTrn-387_88f3f649eed28a53b8a5479dc2c98cb1_cwq",
      "source": "cwq",
      "entities": {
        "AT&T Stadium": "m.0g9v1q"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (AND (JOIN (R sports.sports_championship_event.champion) common.topic) (JOIN sports.sports_team.arena_stadium m.0g9v1q))) time.event.end_date)",
      "actions": [
        "get_relations(common.topic)",
        "get_neighbors(common.topic,sports.sports_championship_event.champion)",
        "get_relations(m.0g9v1q)",
        "get_neighbors(m.0g9v1q,sports.sports_facility.teams)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,sports.sports_team.championships)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.076wz",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXX"
        }
      ]
    },
    {
      "question": "the text at the core of eastern christians and honored by sunday-school practitioners is what?",
      "qid": "4300898013000_grailqa",
      "source": "grailqa",
      "entities": {
        "eastern christians": "m.0blk0",
        "sunday-school": "m.02__63"
      },
      "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.0blk0) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.02__63))))",
      "actions": [
        "get_relations(m.0blk0)",
        "get_neighbors(m.0blk0,religion.religion.texts)",
        "get_relations(m.02__63)",
        "get_neighbors(m.02__63,religion.religious_practice.practice_of)",
        "get_relations(#1)",
        "get_neighbors(#1,religion.religion.texts)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.015j7",
          "entity_name": "The Bible"
        }
      ]
    },
    {
      "question": "how many automotive classes are examples of mitsubishi model a and audi s8?",
      "qid": "3206121009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Mitsubishi Model A": "m.0d6crd",
        "Audi S8": "m.03bx4xn"
      },
      "s_expression": "(COUNT (AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples m.0d6crd) (JOIN automotive.automotive_class.examples m.03bx4xn))))",
      "actions": [
        "get_relations(m.0d6crd)",
        "get_neighbors(m.0d6crd,automotive.model.automotive_class)",
        "get_relations(m.03bx4xn)",
        "get_neighbors(m.03bx4xn,automotive.model.automotive_class)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "which sunnyside served ski run is rated by black diamond?",
      "qid": "4301587005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Black Diamond": "m.04kk2t2",
        "Sunnyside": "m.04kk206"
      },
      "s_expression": "(AND skiing.ski_run (AND (JOIN skiing.ski_run.rating (JOIN (R skiing.run_rating_symbol.run_rating) m.04kk2t2)) (JOIN skiing.ski_run.served_by m.04kk206)))",
      "actions": [
        "get_relations(m.04kk2t2)",
        "get_neighbors(m.04kk2t2,skiing.run_rating_symbol.run_rating)",
        "get_relations(#0)",
        "get_neighbors(#0,skiing.run_rating.ski_runs)",
        "get_relations(m.04kk206)",
        "get_neighbors(m.04kk206,skiing.ski_lift.runs_served)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kk2kr",
          "entity_name": "Vail Ridge"
        }
      ]
    },
    {
      "question": "games developed by sunsoft, inc. and distributed through wii ware released where?",
      "qid": "4301141011000_grailqa",
      "source": "grailqa",
      "entities": {
        "wii ware": "m.03hfyj6",
        "SunSoft, Inc.": "m.08z84_"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.03hfyj6) (JOIN (R cvg.cvg_developer.game_versions_developed) m.08z84_))))",
      "actions": [
        "get_relations(m.03hfyj6)",
        "get_neighbors(m.03hfyj6,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.08z84_)",
        "get_neighbors(m.08z84_,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.075g54v",
          "entity_name": "Wii/DS NA"
        }
      ]
    },
    {
      "question": "what kind of content do the producer of weekend edition sunday and nikki silva produce?",
      "qid": "4300832011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Weekend Edition Sunday": "m.0t4t10s",
        "Nikki Silva": "m.03m68xy"
      },
      "s_expression": "(AND broadcast.content (AND (JOIN broadcast.content.producer (JOIN broadcast.producer.produces m.0t4t10s)) (JOIN broadcast.content.producer m.03m68xy)))",
      "actions": [
        "get_relations(m.0t4t10s)",
        "get_neighbors(m.0t4t10s,broadcast.content.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,broadcast.producer.produces)",
        "get_relations(m.03m68xy)",
        "get_neighbors(m.03m68xy,broadcast.producer.produces)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05v8dc3",
          "entity_name": "The Sonic Memorial Project"
        }
      ]
    },
    {
      "question": "what is the longest release track of recordings written by brian foraker?",
      "qid": "4300020002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Brian Foraker": "m.01wv6kk"
      },
      "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.01wv6kk))) music.release_track.length)",
      "actions": [
        "get_relations(m.01wv6kk)",
        "get_neighbors(m.01wv6kk,music.engineer.tracks_engineered)",
        "get_relations(#0)",
        "get_neighbors(#0,music.recording.tracks)",
        "get_attributes(#1)",
        "argmax(#1,music.release_track.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0mkg969",
          "entity_name": "I Would Have Waited Forever"
        }
      ]
    },
    {
      "question": "m68000 processors was used by how many amiga models?",
      "qid": "3205922016000_grailqa",
      "source": "grailqa",
      "entities": {
        "Amiga": "m.0vvw",
        "m68000": "m.052vq"
      },
      "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.0vvw) (JOIN computer.computer.processor m.052vq))))",
      "actions": [
        "get_relations(m.0vvw)",
        "get_neighbors(m.0vvw,computer.computer.includes_models)",
        "get_relations(m.052vq)",
        "get_neighbors(m.052vq,computer.computer_processor.used_in_computers)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "Which philosopher was influenced by Girard Desargues and went on to influence Niccolo Machiavelli?",
      "qid": "WebQTrn-1719_fa37e433eaf26b34a57900ac4af9259c_cwq",
      "source": "cwq",
      "entities": {
        "niccolo machiavelli": "m.05cvs",
        "Girard Desargues": "m.01_4zq"
      },
      "s_expression": "(AND (JOIN (R influence.influence_node.influenced_by) m.05cvs) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.01_4zq)))",
      "actions": [
        "get_relations(m.05cvs)",
        "get_neighbors(m.05cvs,influence.influence_node.influenced_by)",
        "get_relations(m.01_4zq)",
        "get_neighbors(m.01_4zq,influence.influence_node.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.05qmj",
          "answer_type": "Entity",
          "entity_name": "Plato"
        },
        {
          "answer_argument": "m.0gz_",
          "answer_type": "Entity",
          "entity_name": "Aristotle"
        }
      ]
    },
    {
      "question": "What city to a majority of the people living in the country governed by the Government of Egypt live?",
      "qid": "WebQTrn-3037_f4f38507bbec5d30bec54c8c8dd9a72b_cwq",
      "source": "cwq",
      "entities": {
        "Government of Egypt": "m.05z01q3"
      },
      "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN government.governmental_jurisdiction.government m.05z01q3)) topic_server.population_number)",
      "actions": [
        "get_relations(m.05z01q3)",
        "get_neighbors(m.05z01q3,government.government.government_for)",
        "get_relations(#0)",
        "get_neighbors(#0,location.location.contains)",
        "get_attributes(#1)",
        "argmax(#1,topic_server.population_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.080msrv",
          "answer_type": "Entity",
          "entity_name": "Greater Cairo"
        }
      ]
    },
    {
      "question": "what are automotive classes of ford falcon (xp) in the model of 2014 ford focus?",
      "qid": "4300308010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Ford Falcon (XP)": "m.02rssf0",
        "2014 Ford Focus": "m.0_v8m4q"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN (R automotive.model.automotive_class) m.02rssf0) (JOIN automotive.automotive_class.examples (JOIN automotive.model.model_years m.0_v8m4q))))",
      "actions": [
        "get_relations(m.02rssf0)",
        "get_neighbors(m.02rssf0,automotive.model.automotive_class)",
        "get_relations(m.0_v8m4q)",
        "get_neighbors(m.0_v8m4q,automotive.model_year.model)",
        "get_relations(#1)",
        "get_neighbors(#1,automotive.model.automotive_class)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.016gvg",
          "entity_name": "Station Wagon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.021mp2",
          "entity_name": "Sedan"
        }
      ]
    },
    {
      "question": "What political system is shared by Malaysia and the birthplace of  Baldur von Schirach?",
      "qid": "WebQTest-516_3f76d491e90682cc29e3de2546e1f9c5_cwq",
      "source": "cwq",
      "entities": {
        "Malaysia": "m.09pmkv",
        "Baldur von Schirach": "m.0143sn"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.09pmkv) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.0143sn)))",
      "actions": [
        "get_relations(m.09pmkv)",
        "get_neighbors(m.09pmkv,location.country.form_of_government)",
        "get_relations(m.0143sn)",
        "get_neighbors(m.0143sn,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "name all types of museums of the same type as loyola university museum of art and kimbell art museum.",
      "qid": "5400031015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Loyola University Museum of Art": "m.03b7cd",
        "Kimbell Art Museum": "m.03f_l8"
      },
      "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.03b7cd) (JOIN architecture.type_of_museum.museums m.03f_l8)))))",
      "actions": [
        "get_relations(m.03b7cd)",
        "get_neighbors(m.03b7cd,architecture.museum.type_of_museum)",
        "get_relations(m.03f_l8)",
        "get_neighbors(m.03f_l8,architecture.museum.type_of_museum)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,architecture.type_of_museum.museums)",
        "get_relations(#3)",
        "get_neighbors(#3,architecture.museum.type_of_museum)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gz",
          "entity_name": "Modern art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c9td2",
          "entity_name": "National museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9jkk",
          "entity_name": "Architecture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgh_k",
          "entity_name": "History museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgjgh",
          "entity_name": "Natural history museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0jvjpx6",
          "entity_name": "Antiquities museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026w5hv",
          "entity_name": "Contemporary art gallery"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pn3n6",
          "entity_name": "Historic house museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0528d17",
          "entity_name": "Photography Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kt8qr",
          "entity_name": "Culture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gt",
          "entity_name": "Archaeology museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059x_pp",
          "entity_name": "Archaeological Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wvyw7",
          "entity_name": "Design museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027v0wz",
          "entity_name": "University museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059vqps",
          "entity_name": "Ancient Art Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9gbh",
          "entity_name": "Jewish museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j58y",
          "entity_name": "Science museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0w_y7rb",
          "entity_name": "Asian art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99t0",
          "entity_name": "Decorative art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0djx8f",
          "entity_name": "Children's museum"
        }
      ]
    },
    {
      "question": "what is the programming language paradigm used by cadence skill and another programming language influenced by objective c?",
      "qid": "4300798008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Cadence SKILL": "m.0ghmfk",
        "objective c": "m.05q31"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.0ghmfk) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.05q31))))",
      "actions": [
        "get_relations(m.0ghmfk)",
        "get_neighbors(m.0ghmfk,computer.programming_language.language_paradigms)",
        "get_relations(m.05q31)",
        "get_neighbors(m.05q31,computer.programming_language.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.programming_language.language_paradigms)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05prj",
          "entity_name": "Object-oriented programming"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ykw",
          "entity_name": "Functional programming"
        }
      ]
    },
    {
      "question": "what is the isos that nikon coolpix s700 by nikon corp. supports?",
      "qid": "4304013006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Nikon Coolpix S700": "m.03q2q_4",
        "nikon corp.": "m.03pmfw"
      },
      "s_expression": "(AND digicams.camera_iso (AND (JOIN digicams.camera_iso.cameras m.03q2q_4) (JOIN (R digicams.digital_camera.iso_setting) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.03pmfw))))",
      "actions": [
        "get_relations(m.03q2q_4)",
        "get_neighbors(m.03q2q_4,digicams.digital_camera.iso_setting)",
        "get_relations(m.03pmfw)",
        "get_neighbors(m.03pmfw,digicams.camera_sensor_manufacturer.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.iso_setting)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04l497s",
          "entity_name": "2000"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04nrl44",
          "entity_name": "160"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04nrl4h",
          "entity_name": "320"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04p7pwg",
          "entity_name": "130"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04pf295",
          "entity_name": "120"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_x",
          "entity_name": "100"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_g",
          "entity_name": "400"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_p",
          "entity_name": "200"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg4v",
          "entity_name": "3200"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg51",
          "entity_name": "1600"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg58",
          "entity_name": "800"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04npjzb",
          "entity_name": "1000"
        }
      ]
    },
    {
      "question": "What attractions are there to visit downtown in the location where the film \"She's Having a Baby\" takes place?",
      "qid": "WebQTrn-825_4216cb92cd72e4f84efdb3f5f86ced28_cwq",
      "source": "cwq",
      "entities": {
        "She's Having a Baby": "m.058kh7"
      },
      "s_expression": "(JOIN (R travel.travel_destination.tourist_attractions) (AND (JOIN (R location.location.containedby) common.topic) (JOIN film.film_location.featured_in_films m.058kh7)))",
      "actions": [
        "get_relations(common.topic)",
        "get_neighbors(common.topic,location.location.containedby)",
        "get_relations(m.058kh7)",
        "get_neighbors(m.058kh7,film.film.featured_film_locations)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,travel.travel_destination.tourist_attractions)"
      ],
      "answer": [
        {
          "answer_argument": "m.01dlzc",
          "answer_type": "Entity",
          "entity_name": "Adler Planetarium"
        },
        {
          "answer_argument": "m.021czc",
          "answer_type": "Entity",
          "entity_name": "Field Museum of Natural History"
        },
        {
          "answer_argument": "m.025v4fb",
          "answer_type": "Entity",
          "entity_name": "Lincoln Park Zoo"
        },
        {
          "answer_argument": "m.027hqc_",
          "answer_type": "Entity",
          "entity_name": "Art Institute of Chicago"
        },
        {
          "answer_argument": "m.02jw0z",
          "answer_type": "Entity",
          "entity_name": "Shedd Aquarium"
        },
        {
          "answer_argument": "m.02rvwrv",
          "answer_type": "Entity",
          "entity_name": "Art Institute of Chicago Building"
        },
        {
          "answer_argument": "m.05zv09",
          "answer_type": "Entity",
          "entity_name": "Chicago Cultural Center"
        },
        {
          "answer_argument": "m.06_7k",
          "answer_type": "Entity",
          "entity_name": "Willis Tower"
        },
        {
          "answer_argument": "m.0b0sh",
          "answer_type": "Entity",
          "entity_name": "Wrigley Field"
        },
        {
          "answer_argument": "m.0b28z",
          "answer_type": "Entity",
          "entity_name": "John Hancock Center"
        },
        {
          "answer_argument": "m.0bl8mx",
          "answer_type": "Entity",
          "entity_name": "DuSable Museum of African American History"
        },
        {
          "answer_argument": "m.0c7ln",
          "answer_type": "Entity",
          "entity_name": "Navy Pier"
        },
        {
          "answer_argument": "m.0d9wz",
          "answer_type": "Entity",
          "entity_name": "Museum of Science and Industry"
        },
        {
          "answer_argument": "m.0g_8d0",
          "answer_type": "Entity",
          "entity_name": "Cadillac Palace Theatre"
        },
        {
          "answer_argument": "m.0w7m2x9",
          "answer_type": "Entity",
          "entity_name": "Muslim Community Center"
        }
      ]
    },
    {
      "question": "which olympic events were officially contested at the 2008 beijing olympic games held in london england?",
      "qid": "4300161013000_grailqa",
      "source": "grailqa",
      "entities": {
        "london england": "m.04jpl",
        "2008 beijing olympic games": "m.0kbws"
      },
      "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.04jpl)) (JOIN olympics.olympic_event.olympic_games_contested m.0kbws)))",
      "actions": [
        "get_relations(m.04jpl)",
        "get_neighbors(m.04jpl,olympics.olympic_host_city.olympics_hosted)",
        "get_relations(#0)",
        "get_neighbors(#0,olympics.olympic_games.events)",
        "get_relations(m.0kbws)",
        "get_neighbors(m.0kbws,olympics.olympic_games.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3pr",
          "entity_name": "Women's Judo, + 78kg (heavyweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk37c",
          "entity_name": "Men's Greco-Roman Wrestling, Lightweight 60 - 66kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk384",
          "entity_name": "Women's Long jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3lm",
          "entity_name": "Women's Discus throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk31r",
          "entity_name": "Men's Floor exercises"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2cv",
          "entity_name": "Women's Athletics, 5000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2n3",
          "entity_name": "Women's 200m individual medley"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2z8",
          "entity_name": "Women's K-1 (kayak single)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2k4",
          "entity_name": "Women's Uneven bars"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2h8",
          "entity_name": "Women's Floor exercises"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9mpm",
          "entity_name": "Men's Sailboard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2vv",
          "entity_name": "Men's Quadruple sculls without coxswain"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2h3",
          "entity_name": "Men's 4x100m medley relay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3j8",
          "entity_name": "Women's 200m butterfly"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027n9h",
          "entity_name": "BMX racing"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk28d",
          "entity_name": "Women's Skeet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2jj",
          "entity_name": "Women's Trap"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2l7",
          "entity_name": "Women's 25m pistol"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk305",
          "entity_name": "Women's 50m rifle 3 positions"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk33s",
          "entity_name": "Men's 10m air rifle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk35h",
          "entity_name": "Men's 50m rifle 3 positions"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk36r",
          "entity_name": "Men's Double trap"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3c3",
          "entity_name": "Women's 10m air rifle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3hh",
          "entity_name": "Men's Skeet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3kj",
          "entity_name": "Men's 10m air pistol"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3mk",
          "entity_name": "Men's Trap"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03w8ggr",
          "entity_name": "Men's 4x400 metres relay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qy",
          "entity_name": "Women's Athletics, 800m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk31f",
          "entity_name": "Women's Badminton, singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk313",
          "entity_name": "Women's TableTennis, Singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32c",
          "entity_name": "Women's Athletics, 200m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j_sdlj",
          "entity_name": "Men's Tennis, singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk28k",
          "entity_name": "Men's Triathlon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2f2",
          "entity_name": "Women's 10m air pistol"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3k_",
          "entity_name": "Men's Athletics, 4x100m relay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk342",
          "entity_name": "Men's 50km walk"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3cx",
          "entity_name": "Men's Épée individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3m7",
          "entity_name": "Men's Boxing, 48 - 51kg (flyweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j_s7qg",
          "entity_name": "Women's Tennis, singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3h0",
          "entity_name": "Men's handball"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2w9",
          "entity_name": "Women's 400m individual medley"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2nl",
          "entity_name": "Women's Athletics, 400m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2pj",
          "entity_name": "Women's Athletics, 100m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2b3",
          "entity_name": "Women's Archery, individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2_w",
          "entity_name": "Men's Track cycling, Sprint individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2xd",
          "entity_name": "Men's Mountain Biking, Cross-Country"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30n",
          "entity_name": "Men's Road cycling, individual road race"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3cl",
          "entity_name": "Men's Shot put"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2ks",
          "entity_name": "Men's C-1 1000m (canoe single)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3f4",
          "entity_name": "Men's Greco-Roman Wrestling, Welterweight 66 - 74kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk326",
          "entity_name": "Men's 200m breaststroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2pv",
          "entity_name": "Men's Javelin throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2sh",
          "entity_name": "Women's Sychronized swimming, team"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2t3",
          "entity_name": "Men's Boxing, 60 - 64 kg (light welterweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk34w",
          "entity_name": "Women's Athletics, 3000m steeplechase"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2hx",
          "entity_name": "Men's 1500m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2pc",
          "entity_name": "Men's Discus throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2dy",
          "entity_name": "Women's Shot put"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2_1",
          "entity_name": "Men's Freestyle Wrestling, Super Heavyweight 96-120 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079yv82",
          "entity_name": "Finn Class"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3hb",
          "entity_name": "Men's Freestyle Wrestling, Heavyweight 84-96kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk397",
          "entity_name": "Men's Greco-Roman Wrestling, Bantamweight 55kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01b5r_",
          "entity_name": "Women's association football"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2bx",
          "entity_name": "Men's Weightlifting, Bantamweight  -56kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2j_",
          "entity_name": "Men's football"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk368",
          "entity_name": "Women's High jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03191j",
          "entity_name": "Women's basketball"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30z",
          "entity_name": "Men's Beach Volleyball"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9lcn",
          "entity_name": "Women's 3 metre springboard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9ld0",
          "entity_name": "Men's 3 metre springboard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9ld6",
          "entity_name": "Women's 10 metre platform"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk282",
          "entity_name": "Men's Volleyball"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk29t",
          "entity_name": "Men's Parallel bars"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2c_",
          "entity_name": "Men's Gymnastics, individual all-round"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2cj",
          "entity_name": "Men's Long jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2dm",
          "entity_name": "Women's Foil individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2f7",
          "entity_name": "Men's 50m pistol"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2gh",
          "entity_name": "Eventing, individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2hl",
          "entity_name": "Men's Athletics, 100m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2jp",
          "entity_name": "Men's Athletics, 5000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2lq",
          "entity_name": "Men's Foil individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2mz",
          "entity_name": "Men's Marathon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2q4",
          "entity_name": "Men's Road Cycling, Individual Time Trial"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qm",
          "entity_name": "Men's Athletics, 400m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qs",
          "entity_name": "Men's 100m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2rd",
          "entity_name": "Men's Pole vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2sn",
          "entity_name": "Women's 100m backstroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2tl",
          "entity_name": "Men's Athletics, 400m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2tx",
          "entity_name": "Women's 400m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2x7",
          "entity_name": "Men's Pommel horse"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2xq",
          "entity_name": "Men's Sabre individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2yb",
          "entity_name": "Jumping, individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2yh",
          "entity_name": "Men's Athletics, 200m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2zl",
          "entity_name": "Men's Horizontal bar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk300",
          "entity_name": "Men's Hammer throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30h",
          "entity_name": "Men's Athletics, 110m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30t",
          "entity_name": "Men's 400m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32_",
          "entity_name": "Men's Triple jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32p",
          "entity_name": "Men's High jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk334",
          "entity_name": "Men's 25m rapid fire pistol"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk33m",
          "entity_name": "Women's 200m breaststroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk35z",
          "entity_name": "Men's Modern pentathlon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39d",
          "entity_name": "Men's Vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39q",
          "entity_name": "Women's 100m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39w",
          "entity_name": "Men's Athletics, 10000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3b5",
          "entity_name": "Men's Athletics, 800m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3bh",
          "entity_name": "Men's 100m backstroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3d6",
          "entity_name": "Men's 50m rifle prone"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3dj",
          "entity_name": "Men's Decathlon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3fm",
          "entity_name": "Men's 3000m steeplechase"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3kp",
          "entity_name": "Men's Rings"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3l9",
          "entity_name": "Men's Single sculls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3n5",
          "entity_name": "Men's Athletics, 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0k1nqc0",
          "entity_name": "Individual Dressage"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3m2",
          "entity_name": "Women's 50m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2jc",
          "entity_name": "Men's 4x200m freestyle relay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2ky",
          "entity_name": "Women's Road cycling, individual time trial"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3jx",
          "entity_name": "Women's K-1 500m (kayak single)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3n0",
          "entity_name": "Women's Road cycling, individual road race"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3pl",
          "entity_name": "Women's Track cycling, sprint"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk287",
          "entity_name": "Women's Taekwondo, Middleweight 57 - 67 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk392",
          "entity_name": "Men's Slalom C-1 (canoe single)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2rq",
          "entity_name": "Women's 800m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk28q",
          "entity_name": "Women's 200m backstroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk37_",
          "entity_name": "Women's Weightlifting, 53kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2mn",
          "entity_name": "Women's Athletics, 100m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3k6",
          "entity_name": "Men's Greco-Roman Wrestling, Middleweight 74 - 84 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2r2",
          "entity_name": "Men's Gymnastics,  team competition"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2w4",
          "entity_name": "Women's Mountain Biking, Cross-Country"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2nx",
          "entity_name": "Men's 200m butterfly"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3ht",
          "entity_name": "Men's Boxing, Super Heavyweight +91kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3p3",
          "entity_name": "Men's Judo, - 60 kg Men (extra lightweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2vc",
          "entity_name": "Women's handball"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2p1",
          "entity_name": "Men's 470 - Two Person Dinghy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3jr",
          "entity_name": "Men's C-2 (canoe double)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3pf",
          "entity_name": "Men's 100m butterfly"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2b8",
          "entity_name": "Men's Boxing, Bantamweight 51 - 54kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2c1",
          "entity_name": "Men's Judo, 73 - 81kg (half-middleweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2k9",
          "entity_name": "Men's 50m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2rk",
          "entity_name": "Women's Modern pentathlon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079b5dt",
          "entity_name": "Women's Sailboard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3h5",
          "entity_name": "Women's Javelin throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2bl",
          "entity_name": "Men's Judo, 81 - 90kg (middleweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2g0",
          "entity_name": "Women's Rhythmic gymnastics, group competition"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2lk",
          "entity_name": "Men's 200m backstroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk35t",
          "entity_name": "Men's Boxing, - Light Flyweight -48kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk371",
          "entity_name": "Men's 20km walk"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3px",
          "entity_name": "Men's Boxing, Lightweight 57 - 60kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3nh",
          "entity_name": "Women's Volleyball"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk339",
          "entity_name": "Men's K-1 1000m (kayak single)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2zf",
          "entity_name": "Women's Weightlifting, 75kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3gq",
          "entity_name": "Men's 200m individual medley"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3bn",
          "entity_name": "Men's Freestyle Wrestling, Featherweight 55 - 60 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2n8",
          "entity_name": "Men's 400m individual medley"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2lw",
          "entity_name": "Women's 4x100m freestyle relay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0kgcy_k",
          "entity_name": "Badminton - Women's doubles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2p_",
          "entity_name": "Women's Freestyle Wrestling, Heavyweight 63 - 72kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk290",
          "entity_name": "Women's Gymnastics,  team competition"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2z3",
          "entity_name": "Women's Vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3nb",
          "entity_name": "Women's Gymnastics, individual all-round"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2c6",
          "entity_name": "Men's Boxing, Light Heavyweight 75 - 81kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2s0",
          "entity_name": "Men's Track cycling, Team Pursuit (4000m)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2yn",
          "entity_name": "Men's Track cycling, Keirin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3g2",
          "entity_name": "Men's 100m breaststroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2q9",
          "entity_name": "Women's Sabre individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3dv",
          "entity_name": "Men's Weightlifting, Featherweight 56-62 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2gb",
          "entity_name": "Men's Judo, + 100kg (heavyweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2hr",
          "entity_name": "Women's Weightlifting, 69kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2dg",
          "entity_name": "Women's Hammer throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk28w",
          "entity_name": "Women's Freestyle Wrestling, Middleweight 55 - 63 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2tf",
          "entity_name": "Men's Taekwondo, Lightweight 58 - 68 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk38m",
          "entity_name": "Men's Archery, individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2wy",
          "entity_name": "Women's trampoline"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk36l",
          "entity_name": "Women's Weightlifting, + 75kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2vj",
          "entity_name": "Women's Athletics, 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk318",
          "entity_name": "Men's basketball"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk31x",
          "entity_name": "Women's BMX Cycling"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3fy",
          "entity_name": "Men's Freestyle Wrestling, Lightweight 60-66 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2gt",
          "entity_name": "Men's Table Tennis, Singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03w8gdr",
          "entity_name": "Men's 200m Freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2mb",
          "entity_name": "Women's K-2 500m (kayak double)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3ls",
          "entity_name": "Women's 200m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2vp",
          "entity_name": "Men's 4x100m freestyle relay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3l4",
          "entity_name": "Men's Weightlifting, Middle Heavyweight 85-94 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk37v",
          "entity_name": "Men's K-1 (kayak single)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3dp",
          "entity_name": "Men's Four without coxswain"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk35n",
          "entity_name": "Women's Beach Volleyball"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j_s9yb",
          "entity_name": "Women's Tennis, doubles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3gk",
          "entity_name": "Men's Weightlifting, Heavyweight 94 - 105 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3f9",
          "entity_name": "Women's 100m breaststroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2xw",
          "entity_name": "Women's Foil team"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk29z",
          "entity_name": "Women's Rhythmic gymnastics, individual all-round"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2p6",
          "entity_name": "Men's Weightlifting, Light Heavyweight 77-85 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2ws",
          "entity_name": "Women's Athletics, 10000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3fg",
          "entity_name": "Women's Freestyle Wrestling, Lightweight 48 - 55kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3md",
          "entity_name": "Men's Laser - One Person Dinghy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2j6",
          "entity_name": "Men's Boxing, Middleweight 69 - 75 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2mt",
          "entity_name": "Men's Badminton, singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2nf",
          "entity_name": "Men's Boxing, Heavyweight 81 - 91kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3nz",
          "entity_name": "Women's 100m butterfly"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0kgb47k",
          "entity_name": "Badminton - Mixed doubles (Olympics)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk295",
          "entity_name": "Women's Taekwondo, Lightweight 49 - 57 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3fs",
          "entity_name": "Women's Épée individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2sz",
          "entity_name": "Women's Athletics, 400m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3mq",
          "entity_name": "Women's Judo, 63-70kg (Middleweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3k1",
          "entity_name": "Women's Judo, - 48kg (extra-lightweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2cp",
          "entity_name": "Men's Freestyle Wrestling, Welterweight 66-74kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2j1",
          "entity_name": "Men's Swimming, marathon 10km"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2pp",
          "entity_name": "Men's C-2 1000m (canoe double)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk34d",
          "entity_name": "Women's water polo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2_q",
          "entity_name": "Women's Eight with coxswain"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2gn",
          "entity_name": "Women's Quadruple sculls without coxswain"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2gz",
          "entity_name": "Women's Lightweight double sculls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2l2",
          "entity_name": "Men's Lightweight coxless four"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2s5",
          "entity_name": "Men's Coxless pair"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2yt",
          "entity_name": "Men's Eight with coxswain"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2zr",
          "entity_name": "Women's Pair without coxswain"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2zx",
          "entity_name": "Women's Double sculls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39k",
          "entity_name": "Men's Double sculls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3d_",
          "entity_name": "Men's Lightweight double sculls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3g7",
          "entity_name": "Women's Single Sculls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk36x",
          "entity_name": "Women's Triple jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2ds",
          "entity_name": "Men's Sabre team"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30b",
          "entity_name": "Women's 4x200m freestyle relay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2sb",
          "entity_name": "Women's Weightlifting, 58kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3nn",
          "entity_name": "Men's Table tennis, team"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk38y",
          "entity_name": "Men's hockey"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3c8",
          "entity_name": "Women's Freestyle Wrestling, Flyweight 48 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk38g",
          "entity_name": "Men's Judo, 60 - 66kg (half-lightweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2bf",
          "entity_name": "Men's Boxing, Welterweight 64-69 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2st",
          "entity_name": "Men's Judo, 66 - 73kg (lightweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3kv",
          "entity_name": "Men's Weightlifting, Middleweight 69-77 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2km",
          "entity_name": "Women's Swimming, marathon 10km"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2yz",
          "entity_name": "Men's Taekwondo, Heavyweight + 80 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk29b",
          "entity_name": "Men's Greco-Roman Wrestling, Heavyweight 84-96 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3nt",
          "entity_name": "Women's K-4 500m (kayak four)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2x2",
          "entity_name": "Women's Taekwondo, Flyweight - 49 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3b0",
          "entity_name": "Men's Weightlifting, Super Heavyweight + 105kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2m5",
          "entity_name": "Men's Greco-Roman Wrestling, Super Heavyweight 96-120 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j_pzdb",
          "entity_name": "Men's Tennis, doubles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32v",
          "entity_name": "Women's Weightlifting, 63kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3gw",
          "entity_name": "Women's Laser Radial - One Person Dinghy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk34k",
          "entity_name": "Women's Sychronized swimming, duet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3bt",
          "entity_name": "Women's 4x100m medley relay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2fw",
          "entity_name": "Women's Judo, 70 - 78kg (half-heavyweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2ld",
          "entity_name": "Men's Greco-Roman Wrestling, Featherweight 55 - 60kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk321",
          "entity_name": "Men's Freestyle Wrestling, Middleweight 74-84kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3hn",
          "entity_name": "Women's Taekwondo, Heavyweight + 67 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0k1nx2m",
          "entity_name": "Team Dressage"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk35b",
          "entity_name": "Women's 470 - Two Person Dinghy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3lg",
          "entity_name": "Men's Star - Keelboat"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3ly",
          "entity_name": "Women's Yngling - Keelboat"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2cc",
          "entity_name": "Men's trampoline"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk33g",
          "entity_name": "49er - Skiff"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk33y",
          "entity_name": "Women's Athletics, Marathon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2v_",
          "entity_name": "Women's Pole vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk29h",
          "entity_name": "Women's Judo, 48 - 52kg (half-lightweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2fd",
          "entity_name": "Women's Weightlifting, 48kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2fk",
          "entity_name": "Women's Athletics, 4x100m relay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2fq",
          "entity_name": "Women's Archery, team"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2g5",
          "entity_name": "Women's Judo, 57 - 63kg (Half-Middleweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2m0",
          "entity_name": "Women's Judo, 52 - 57kg (Lightweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qg",
          "entity_name": "Men's water polo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2r7",
          "entity_name": "Women's Individual Triathlon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2tr",
          "entity_name": "Women's Table tennis, team"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2v6",
          "entity_name": "Men's K-4 1000m (kayak four)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2wm",
          "entity_name": "Women's hockey"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk34q",
          "entity_name": "Men's K-2 1000m (kayak double)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk350",
          "entity_name": "Women's Athletics, 20km walk"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk355",
          "entity_name": "Men's Archery, team"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk36f",
          "entity_name": "Men's Weightlifting, Lightweight 62-69 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk389",
          "entity_name": "Men's Freestyle Wrestling, Bantamweight 55kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk38s",
          "entity_name": "Men's Taekwondo, Middleweight 68 - 80 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3cr",
          "entity_name": "Women's Athletics, 4x400m relay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3kc",
          "entity_name": "Men's Judo, 90 - 100kg (half-heavyweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0kgbcs4",
          "entity_name": "Badminton - Men's doubles"
        }
      ]
    },
    {
      "question": "what category of schools do st. anthony's high school and the publisher of st. lawrence magazine fall under?",
      "qid": "4301751004000_grailqa",
      "source": "grailqa",
      "entities": {
        "St. Lawrence Magazine": "m.012t8ftk",
        "St. Anthony's High School": "m.04gmqgr"
      },
      "s_expression": "(AND education.school_category (AND (JOIN (R education.educational_institution.school_type) (JOIN (R education.school_magazine.school) m.012t8ftk)) (JOIN (R education.educational_institution.school_type) m.04gmqgr)))",
      "actions": [
        "get_relations(m.012t8ftk)",
        "get_neighbors(m.012t8ftk,education.school_magazine.school)",
        "get_relations(#0)",
        "get_neighbors(#0,education.educational_institution.school_type)",
        "get_relations(m.04gmqgr)",
        "get_neighbors(m.04gmqgr,education.educational_institution.school_type)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01rs41",
          "entity_name": "Private school"
        }
      ]
    },
    {
      "question": "squeak smalltalk and fjölnir have how many programming language paradigms combined?",
      "qid": "3205793003000_grailqa",
      "source": "grailqa",
      "entities": {
        "squeak smalltalk": "m.09bhx",
        "Fjölnir": "m.090b_z"
      },
      "s_expression": "(COUNT (AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.09bhx) (JOIN computer.programming_language_paradigm.languages m.090b_z))))",
      "actions": [
        "get_relations(m.09bhx)",
        "get_neighbors(m.09bhx,computer.programming_language.language_paradigms)",
        "get_relations(m.090b_z)",
        "get_neighbors(m.090b_z,computer.programming_language.language_paradigms)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what drugs have pork brain as an active ingredient and are also made from lytta vesicatoria/chimaphila umbellata/echinacea angustifolia/chondrodendron tomentosum root/pulsatilla vulgaris/saw palmetto/claviceps purpurea sclerotium homeopathic preparation?",
      "qid": "5400022001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Lytta vesicatoria/Chimaphila umbellata/Echinacea angustifolia/Chondrodendron tomentosum root/Pulsatilla vulgaris/Saw palmetto/Claviceps purpurea sclerotium homeopathic preparation": "m.0jxrph1",
        "Pork brain": "m.0hqvh9m"
      },
      "s_expression": "(AND medicine.drug_dosage_form (AND (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.formulation_of m.0jxrph1)) (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.active_ingredient_moieties m.0hqvh9m))))",
      "actions": [
        "get_relations(m.0jxrph1)",
        "get_neighbors(m.0jxrph1,medicine.drug.marketed_formulations)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.drug_formulation.dosage_form)",
        "get_relations(m.0hqvh9m)",
        "get_neighbors(m.0hqvh9m,medicine.drug_ingredient.active_moiety_of_formulation)",
        "get_relations(#2)",
        "get_neighbors(#2,medicine.drug_formulation.dosage_form)",
        "intersection(#1,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04k94",
          "entity_name": "Liquid"
        }
      ]
    },
    {
      "question": "Which is the most recent Super Bowl won by the football club that claimed the Super Bowl XLI championship?",
      "qid": "WebQTrn-1771_d1070c28593ad0d9fc89f6c8b4ed0aa9_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "Super Bowl XLI": "m.04k5qm"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.04k5qm)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.04k5qm)",
        "get_neighbors(m.04k5qm,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04k5qm",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLI"
        }
      ]
    },
    {
      "question": "Who was a psychiatrist who influenced Niccolo Machiavelli?",
      "qid": "WebQTrn-1719_dc16add47f1fe2c9637b9c4455a3842d_cwq",
      "source": "cwq",
      "entities": {
        "niccolo machiavelli": "m.05cvs",
        "Psychiatrist": "m.02p0s5r"
      },
      "s_expression": "(AND (JOIN (R influence.influence_node.influenced_by) m.05cvs) (JOIN influence.influence_node.influenced (JOIN people.person.profession m.02p0s5r)))",
      "actions": [
        "get_relations(m.05cvs)",
        "get_neighbors(m.05cvs,influence.influence_node.influenced_by)",
        "get_relations(m.02p0s5r)",
        "get_neighbors(m.02p0s5r,people.profession.people_with_this_profession)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.05qmj",
          "answer_type": "Entity",
          "entity_name": "Plato"
        },
        {
          "answer_argument": "m.0gz_",
          "answer_type": "Entity",
          "entity_name": "Aristotle"
        }
      ]
    },
    {
      "question": "list all quotations from nikodemos that are addressed to whom “these stepsons tread where mortals don’t belong, some of us think. they seek out battle high above their station. who knows what powers may yet take them and their mystic allies to task, bring them their comeuppance?\" was addressed to.",
      "qid": "4302343013000_grailqa",
      "source": "grailqa",
      "entities": {
        "nikodemos": "m.0cpg05_",
        "“These Stepsons tread where mortals don’t belong, some of us think.  They seek out battle high above their station.  Who knows what powers may yet take them and their mystic allies to task, bring them their comeuppance?\"": "m.0fpqwpg"
      },
      "s_expression": "(AND media_common.quotation_addressee (AND (JOIN media_common.quotation_addressee.quotations (JOIN (R fictional_universe.fictional_character.quotations) m.0cpg05_)) (JOIN media_common.quotation_addressee.quotations m.0fpqwpg)))",
      "actions": [
        "get_relations(m.0cpg05_)",
        "get_neighbors(m.0cpg05_,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.addressee)",
        "get_relations(m.0fpqwpg)",
        "get_neighbors(m.0fpqwpg,media_common.quotation.addressee)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cpg042",
          "entity_name": "Charon"
        }
      ]
    },
    {
      "question": "What country in the Sahel does the Niger River flow through that uses the West African CFA franc as their currency?",
      "qid": "WebQTest-1748_517c2c9a60d4450a134b37883844d398_cwq",
      "source": "cwq",
      "entities": {
        "Niger River": "m.05csx",
        "Sahel": "m.0l5_l",
        "West African CFA franc": "m.025sw2q"
      },
      "s_expression": "(AND location.country (AND (JOIN (R location.location.partially_containedby) m.05csx) (AND (JOIN location.location.partially_contains m.0l5_l) (JOIN location.country.currency_used m.025sw2q))))",
      "actions": [
        "get_relations(m.05csx)",
        "get_neighbors(m.05csx,location.location.partially_containedby)",
        "get_relations(m.0l5_l)",
        "get_neighbors(m.0l5_l,location.location.partially_containedby)",
        "get_relations(m.025sw2q)",
        "get_neighbors(m.025sw2q,finance.currency.countries_used)",
        "intersection(#1,#2)",
        "intersection(#0,#3)"
      ],
      "answer": [
        {
          "answer_argument": "m.04v09",
          "answer_type": "Entity",
          "entity_name": "Mali"
        },
        {
          "answer_argument": "m.05cc1",
          "answer_type": "Entity",
          "entity_name": "Niger"
        }
      ]
    },
    {
      "question": "Find the place that Baldur von Schirach was born, what type of government is used there and in the Bahamas?",
      "qid": "WebQTrn-1245_3f76d491e90682cc29e3de2546e1f9c5_cwq",
      "source": "cwq",
      "entities": {
        "Bahamas": "m.0160w",
        "Baldur von Schirach": "m.0143sn"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0160w) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.0143sn)))",
      "actions": [
        "get_relations(m.0160w)",
        "get_neighbors(m.0160w,location.country.form_of_government)",
        "get_relations(m.0143sn)",
        "get_neighbors(m.0143sn,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "which is the most distant sun?",
      "qid": "4303393006000_grailqa",
      "source": "grailqa",
      "entities": {
        "sun": "m.06ngk"
      },
      "s_expression": "(ARGMAX (AND astronomy.celestial_object (JOIN (R astronomy.celestial_object_category.objects) (JOIN (R astronomy.celestial_object_category.subcategories) m.06ngk))) astronomy.celestial_object.cosmological_distance)",
      "actions": [
        "get_relations(m.06ngk)",
        "get_neighbors(m.06ngk,astronomy.celestial_object_category.subcategories)",
        "get_relations(#0)",
        "get_neighbors(#0,astronomy.celestial_object_category.objects)",
        "get_attributes(#1)",
        "argmax(#1,astronomy.celestial_object.cosmological_distance)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0jww7f_",
          "entity_name": "WISE 0734−7157"
        }
      ]
    },
    {
      "question": "how many infectious diseases are transmitted by white faced monkey? ",
      "qid": "4303160005000_grailqa",
      "source": "grailqa",
      "entities": {
        "white faced monkey": "m.02h411"
      },
      "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.02h411)))))",
      "actions": [
        "get_relations(m.02h411)",
        "get_neighbors(m.02h411,medicine.vector_of_disease.disease)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
        "get_relations(#1)",
        "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "30"
        }
      ]
    },
    {
      "question": "which person designed the apple power macintosh and macintosh?",
      "qid": "4301299000000_grailqa",
      "source": "grailqa",
      "entities": {
        "macintosh": "m.02nwjv",
        "apple power macintosh": "m.06703"
      },
      "s_expression": "(AND computer.computer_designer (AND (JOIN computer.computer_designer.computers_designed (JOIN (R computer.computer.parent_model) m.06703)) (JOIN (R computer.computer.key_designers) m.02nwjv)))",
      "actions": [
        "get_relations(m.06703)",
        "get_neighbors(m.06703,computer.computer.parent_model)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.computer.key_designers)",
        "get_relations(m.02nwjv)",
        "get_neighbors(m.02nwjv,computer.computer.key_designers)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.06y3r",
          "entity_name": "Steve Jobs"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0pm6w",
          "entity_name": "Jef Raskin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02_3qs",
          "entity_name": "Burrell Smith"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05ffdn",
          "entity_name": "Bud Tribble"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01bng",
          "entity_name": "Bill Atkinson"
        }
      ]
    },
    {
      "question": "how many temperaments do french spaniel and anatolian shepherd dog have in common?",
      "qid": "3205485006000_grailqa",
      "source": "grailqa",
      "entities": {
        "French Spaniel": "m.025_sbw",
        "anatolian shepherd dog": "m.04f2yc"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds m.025_sbw) (JOIN (R biology.animal_breed.temperament) m.04f2yc))))",
      "actions": [
        "get_relations(m.025_sbw)",
        "get_neighbors(m.025_sbw,biology.animal_breed.temperament)",
        "get_relations(m.04f2yc)",
        "get_neighbors(m.04f2yc,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what other visual art forms were made by paolo romano besides outdoor sculpture?",
      "qid": "4302283000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Paolo Romano": "m.03cs0h8",
        "outdoor sculpture": "m.06msq"
      },
      "s_expression": "(AND visual_art.visual_art_form (JOIN (R visual_art.artwork.art_form) (AND (JOIN visual_art.artwork.artist m.03cs0h8) (JOIN visual_art.artwork.art_form m.06msq))))",
      "actions": [
        "get_relations(m.03cs0h8)",
        "get_neighbors(m.03cs0h8,visual_art.visual_artist.artworks)",
        "get_relations(m.06msq)",
        "get_neighbors(m.06msq,visual_art.visual_art_form.artworks)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,visual_art.artwork.art_form)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pkk0",
          "entity_name": "Bas-relief"
        }
      ]
    },
    {
      "question": "benjamin a. elman conducts research in the discipline of which east asian studies?",
      "qid": "4302233010000_grailqa",
      "source": "grailqa",
      "entities": {
        "East Asian Studies": "m.08_8bx",
        "Benjamin A. Elman": "m.05y96n1"
      },
      "s_expression": "(AND education.field_of_study (AND (JOIN (R education.field_of_study.subdisciplines) m.08_8bx) (JOIN (R education.field_of_study.subdiscipline_of) (JOIN (R education.academic.research_areas) m.05y96n1))))",
      "actions": [
        "get_relations(m.08_8bx)",
        "get_neighbors(m.08_8bx,education.field_of_study.subdisciplines)",
        "get_relations(m.05y96n1)",
        "get_neighbors(m.05y96n1,education.academic.research_areas)",
        "get_relations(#1)",
        "get_neighbors(#1,education.field_of_study.subdiscipline_of)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02111p",
          "entity_name": "Sinology"
        }
      ]
    },
    {
      "question": "Which type of government does Spain currently have now, and is where AntÃ£o Martins Homem was born?",
      "qid": "WebQTrn-2060_89e002ff7250ffeee9ef6f385a7a0658_cwq",
      "source": "cwq",
      "entities": {
        "Spain": "m.06mkj",
        "antã£o martins homem": "g.122wbmv4"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.06mkj) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here g.122wbmv4)))",
      "actions": [
        "get_relations(m.06mkj)",
        "get_neighbors(m.06mkj,location.country.form_of_government)",
        "get_relations(g.122wbmv4)",
        "get_neighbors(g.122wbmv4,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.04szc",
          "answer_type": "Entity",
          "entity_name": "Monarchy"
        }
      ]
    },
    {
      "question": "what artwork on postcards was created in the era of jules ernest renoux?",
      "qid": "4301655014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Jules Ernest Renoux": "m.0gh7v0t",
        "postcards": "m.0fd4f"
      },
      "s_expression": "(AND visual_art.artwork (AND (JOIN visual_art.artwork.period_or_movement (JOIN visual_art.art_period_movement.associated_artists m.0gh7v0t)) (JOIN visual_art.artwork.support m.0fd4f)))",
      "actions": [
        "get_relations(m.0gh7v0t)",
        "get_neighbors(m.0gh7v0t,visual_art.visual_artist.associated_periods_or_movements)",
        "get_relations(#0)",
        "get_neighbors(#0,visual_art.art_period_movement.associated_artworks)",
        "get_relations(m.0fd4f)",
        "get_neighbors(m.0fd4f,visual_art.visual_art_support.artworks)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0d1wzv",
          "entity_name": "Landscape Near Figueras"
        }
      ]
    },
    {
      "question": "When was the last time the champion of 1945 Stanley Cup Finals win it again?",
      "qid": "WebQTest-1960_b9b8f34b8d8fd68c255dfd0d200b9c83_cwq",
      "source": "cwq",
      "entities": {
        "1945 Stanley Cup Finals": "m.02d091w"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.02d091w)) time.event.start_date)",
      "actions": [
        "get_relations(m.02d091w)",
        "get_neighbors(m.02d091w,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.03by199",
          "answer_type": "Entity",
          "entity_name": "1967 Stanley Cup Finals"
        }
      ]
    },
    {
      "question": "which ski run ran by supreme is rated by blue square?",
      "qid": "4301587003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Blue square": "m.04knmg3",
        "Supreme": "m.04kk20l"
      },
      "s_expression": "(AND skiing.ski_run (AND (JOIN skiing.ski_run.rating (JOIN (R skiing.run_rating_symbol.run_rating) m.04knmg3)) (JOIN skiing.ski_run.served_by m.04kk20l)))",
      "actions": [
        "get_relations(m.04knmg3)",
        "get_neighbors(m.04knmg3,skiing.run_rating_symbol.run_rating)",
        "get_relations(#0)",
        "get_neighbors(#0,skiing.run_rating.ski_runs)",
        "get_relations(m.04kk20l)",
        "get_neighbors(m.04kk20l,skiing.ski_lift.runs_served)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmp6",
          "entity_name": "3 Bears"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmmq",
          "entity_name": "Rock N' Roll"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmq6",
          "entity_name": "Big Dipper"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmsg",
          "entity_name": "Sleepy Hollow"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmsq",
          "entity_name": "Upper Big Dipper"
        }
      ]
    },
    {
      "question": "in which regions you can buy games developed by nintendo on virtual console?",
      "qid": "498000200_graphquestions",
      "source": "graphquestions",
      "entities": {
        "Nintendo": "m.059wk",
        "Virtual Console": "m.07sg3j"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.developer m.059wk) (JOIN cvg.game_version.distributed_through m.07sg3j))))",
      "actions": [
        "get_relations(m.059wk)",
        "get_neighbors(m.059wk,cvg.cvg_developer.game_versions_developed)",
        "get_relations(m.07sg3j)",
        "get_neighbors(m.07sg3j,cvg.computer_game_distribution_system.games_distributed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02j9z",
          "entity_name": "Europe"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_3d",
          "entity_name": "Japan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059g4",
          "entity_name": "North America"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0chghy",
          "entity_name": "Australia"
        }
      ]
    },
    {
      "question": "who was the producer of on the third day and an additional multi-part music release called jet records?",
      "qid": "4301847003000_grailqa",
      "source": "grailqa",
      "entities": {
        "On the Third Day": "m.031ql_f",
        "Jet Records": "m.04hynj"
      },
      "s_expression": "(AND music.producer (AND (JOIN (R music.release.producers) (JOIN music.release.label m.04hynj)) (JOIN (R music.release.producers) m.031ql_f)))",
      "actions": [
        "get_relations(m.04hynj)",
        "get_neighbors(m.04hynj,music.record_label.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.producers)",
        "get_relations(m.031ql_f)",
        "get_neighbors(m.031ql_f,music.release.producers)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0473q",
          "entity_name": "Jeff Lynne"
        }
      ]
    },
    {
      "question": "what is the number of infectious diseases that can be transmitted by mosquito?",
      "qid": "4303160015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Mosquito": "m.09f96"
      },
      "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.09f96)))))",
      "actions": [
        "get_relations(m.09f96)",
        "get_neighbors(m.09f96,medicine.vector_of_disease.disease)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
        "get_relations(#1)",
        "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "110"
        }
      ]
    },
    {
      "question": "Find the sports team that plays at MCU Park, when did they win their first world series?",
      "qid": "WebQTrn-2356_97aaf1de55537c27da2ebda0f76491ab_cwq",
      "source": "cwq",
      "entities": {
        "World Series": "m.0fjp3",
        "MCU Park": "m.02y110"
      },
      "s_expression": "(ARGMIN (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.02y110)) (JOIN sports.sports_championship_event.championship m.0fjp3)) time.event.start_date)",
      "actions": [
        "get_relations(m.02y110)",
        "get_neighbors(m.02y110,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.0fjp3)",
        "get_neighbors(m.0fjp3,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmin(#3,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04jg9_",
          "answer_type": "Entity",
          "entity_name": "1969 World Series"
        }
      ]
    },
    {
      "question": "what class of automobiles is the rolls-royce phantom drophead coupé and the model with predecessor sts?",
      "qid": "4301079000000_grailqa",
      "source": "grailqa",
      "entities": {
        "sts": "m.03mntt",
        "Rolls-Royce Phantom Drophead Coupé": "m.02q2yq5"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples (JOIN (R automotive.model.predecessor) m.03mntt)) (JOIN automotive.automotive_class.examples m.02q2yq5)))",
      "actions": [
        "get_relations(m.03mntt)",
        "get_neighbors(m.03mntt,automotive.model.predecessor)",
        "get_relations(#0)",
        "get_neighbors(#0,automotive.model.automotive_class)",
        "get_relations(m.02q2yq5)",
        "get_neighbors(m.02q2yq5,automotive.model.automotive_class)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01lcwm",
          "entity_name": "Luxury vehicle"
        }
      ]
    },
    {
      "question": "how many paradigms are there for the sather and matrix laboratory programming languages?",
      "qid": "3205793005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Sather": "m.073yv",
        "matrix laboratory": "m.053_x"
      },
      "s_expression": "(COUNT (AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.073yv) (JOIN computer.programming_language_paradigm.languages m.053_x))))",
      "actions": [
        "get_relations(m.073yv)",
        "get_neighbors(m.073yv,computer.programming_language.language_paradigms)",
        "get_relations(m.053_x)",
        "get_neighbors(m.053_x,computer.programming_language.language_paradigms)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "what martial art involving grappling is in the same category as tai-chi?",
      "qid": "4301064004000_grailqa",
      "source": "grailqa",
      "entities": {
        "tai-chi": "m.07k4r",
        "Grappling": "m.039cp"
      },
      "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.07k4r)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.039cp)))",
      "actions": [
        "get_relations(m.07k4r)",
        "get_neighbors(m.07k4r,martial_arts.martial_art.category)",
        "get_relations(#0)",
        "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
        "get_relations(m.039cp)",
        "get_neighbors(m.039cp,martial_arts.martial_art_category.martial_arts)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tm7f",
          "entity_name": "Kajukenbo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03bs3p",
          "entity_name": "Sanshou"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.041d65",
          "entity_name": "Vovinam"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01vqp5",
          "entity_name": "Systema"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09h901",
          "entity_name": "Shidōkan Karate"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hbj9",
          "entity_name": "Hapkido"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.055rn5",
          "entity_name": "Kuk Sool Won"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01qcyb",
          "entity_name": "Kalaripayattu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02618d8",
          "entity_name": "Russian All-Round Fighting"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.048yh",
          "entity_name": "Krav Maga"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b65c",
          "entity_name": "Hwa Rang Do"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.061px",
          "entity_name": "Pankration"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06jm_r",
          "entity_name": "Bartitsu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06k44z",
          "entity_name": "Modern Arnis"
        }
      ]
    },
    {
      "question": "What year did the MLB franchise owned by Bill Neukom win the world series?",
      "qid": "WebQTrn-810_a188aff4a054e1ec66fafba1b8021f67_cwq",
      "source": "cwq",
      "entities": {
        "Bill Neukom": "m.03cyzbv"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.03cyzbv)) time.event.end_date)",
      "actions": [
        "get_relations(m.03cyzbv)",
        "get_neighbors(m.03cyzbv,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0117q3yz"
        }
      ]
    },
    {
      "question": "the bipropellant rocket engine with methane and staged combustion cycle is designed by who?",
      "qid": "4300753011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Staged combustion cycle": "m.04qqmt",
        "Methane": "m.04ydh"
      },
      "s_expression": "(AND spaceflight.rocket_engine_designer (JOIN spaceflight.rocket_engine_designer.rocket_engines (AND (JOIN (R spaceflight.rocket_engine_cycle.rocket_engines) m.04qqmt) (JOIN (R spaceflight.rocket_engine_fuel.rocket_engines) m.04ydh))))",
      "actions": [
        "get_relations(m.04qqmt)",
        "get_neighbors(m.04qqmt,spaceflight.rocket_engine_cycle.rocket_engines)",
        "get_relations(m.04ydh)",
        "get_neighbors(m.04ydh,spaceflight.rocket_engine_fuel.rocket_engines)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,spaceflight.rocket_engine.designed_by)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02p_3s6",
          "entity_name": "NPO Energomash"
        }
      ]
    },
    {
      "question": "of the computers that used r800 processors, how many were msx models?",
      "qid": "3205922017000_grailqa",
      "source": "grailqa",
      "entities": {
        "MSX": "m.014hgy",
        "R800": "m.033z4p"
      },
      "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.014hgy) (JOIN computer.computer.processor m.033z4p))))",
      "actions": [
        "get_relations(m.014hgy)",
        "get_neighbors(m.014hgy,computer.computer.includes_models)",
        "get_relations(m.033z4p)",
        "get_neighbors(m.033z4p,computer.computer_processor.used_in_computers)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "The squad that emerged victorious in the 1994 NBA Finals won its initial championship in which year?",
      "qid": "WebQTest-1734_d2aef4ecb09bef9772b1862c9853f3a9_cwq",
      "source": "cwq",
      "entities": {
        "1994 NBA Finals": "m.08x9cq"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.08x9cq)) time.event.start_date)",
      "actions": [
        "get_relations(m.08x9cq)",
        "get_neighbors(m.08x9cq,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.08x9cq",
          "answer_type": "Entity",
          "entity_name": "1994 NBA Finals"
        }
      ]
    },
    {
      "question": "which medications to treat thyrotoxicosis have b symptoms as a side effect?",
      "qid": "4301182003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Thyrotoxicosis": "g.122zk0s8",
        "B symptoms": "m.08z394"
      },
      "s_expression": "(AND medicine.medical_treatment (AND (JOIN medicine.medical_treatment.side_effects (JOIN medicine.symptom.parent_symptom m.08z394)) (JOIN medicine.medical_treatment.used_to_treat g.122zk0s8)))",
      "actions": [
        "get_relations(m.08z394)",
        "get_neighbors(m.08z394,medicine.symptom.includes_symptoms)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.symptom.side_effect_of)",
        "get_relations(g.122zk0s8)",
        "get_neighbors(g.122zk0s8,medicine.disease.treatments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03z9vp",
          "entity_name": "Potassium iodide"
        }
      ]
    },
    {
      "question": "What time zone do parts of Texas and Strathmore (D. J. Murray) Airport share?",
      "qid": "WebQTrn-464_cab1228be4e8c16ee35a67b7ac63b264_cwq",
      "source": "cwq",
      "entities": {
        "Texas": "m.07b_l",
        "strathmore (d. j. murray) airport": "m.09slsk"
      },
      "s_expression": "(AND (JOIN (R location.location.time_zones) m.07b_l) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.09slsk)))",
      "actions": [
        "get_relations(m.07b_l)",
        "get_neighbors(m.07b_l,location.location.time_zones)",
        "get_relations(m.09slsk)",
        "get_neighbors(m.09slsk,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02hczc"
        }
      ]
    },
    {
      "question": "What is the most recent event in which the sports team owned by James L. Dolan won the championship?",
      "qid": "WebQTest-998_f693ae2cb9aa6b8ffdf0f103a6777b62_cwq",
      "source": "cwq",
      "entities": {
        "James L. Dolan": "m.0469ts"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.0469ts)) time.event.start_date)",
      "actions": [
        "get_relations(m.0469ts)",
        "get_neighbors(m.0469ts,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0cs1kg"
        }
      ]
    },
    {
      "question": "Which language is mainly spoken, at the location where the film, \"Iris\" occurs?",
      "qid": "WebQTrn-1215_58f970f5793eb0b4b06827bf9c0f4797_cwq",
      "source": "cwq",
      "entities": {
        "Iris": "m.0194zl"
      },
      "s_expression": "(JOIN (R location.country.languages_spoken) (AND (JOIN (R language.human_language.main_country) common.topic) (JOIN film.film_location.featured_in_films m.0194zl)))",
      "actions": [
        "get_relations(common.topic)",
        "get_neighbors(common.topic,language.human_language.main_country)",
        "get_relations(m.0194zl)",
        "get_neighbors(m.0194zl,film.film.featured_film_locations)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,location.country.languages_spoken)"
      ],
      "answer": [
        {
          "answer_argument": "m.05p2d",
          "answer_type": "Entity",
          "entity_name": "Old English"
        }
      ]
    },
    {
      "question": "What attraction is in Chicago on Lake Shore Drive?",
      "qid": "WebQTrn-825_f0b02d7d0385164764214b15ddcd6e97_cwq",
      "source": "cwq",
      "entities": {
        "Chicago": "m.01_d4",
        "Lake Shore Drive": "m.02jrtt"
      },
      "s_expression": "(AND (JOIN (R travel.travel_destination.tourist_attractions) m.01_d4) (AND (JOIN location.location.containedby m.01_d4) (JOIN location.location.containedby m.02jrtt)))",
      "actions": [
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,travel.travel_destination.tourist_attractions)",
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,location.location.contains)",
        "get_relations(m.02jrtt)",
        "get_neighbors(m.02jrtt,location.location.contains)",
        "intersection(#1,#2)",
        "intersection(#0,#3)"
      ],
      "answer": [
        {
          "answer_argument": "m.02jw0z",
          "answer_type": "Entity",
          "entity_name": "Shedd Aquarium"
        }
      ]
    },
    {
      "question": "In what year did the team that plays in Juventus Stadium win the Champions League?",
      "qid": "WebQTest-696_8227cd07afaaf74a3751313038cb2182_cwq",
      "source": "cwq",
      "entities": {
        "UEFA Champions League Final": "m.05nblxt",
        "Juventus Stadium": "m.05qbb5p"
      },
      "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.05qbb5p)) (JOIN sports.sports_championship_event.championship m.05nblxt))",
      "actions": [
        "get_relations(m.05qbb5p)",
        "get_neighbors(m.05qbb5p,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.05nblxt)",
        "get_neighbors(m.05nblxt,sports.sports_championship.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02pt_57",
          "answer_type": "Entity",
          "entity_name": "1996 UEFA Champions League Final"
        }
      ]
    },
    {
      "question": "What kind of guitar does the artist who wrote \"Do Me a Favor\" play?",
      "qid": "WebQTest-1279_68214ab1679be28f1348e17711ce8873_cwq",
      "source": "cwq",
      "entities": {
        "Guitar": "m.0342h",
        "Do Me a Favor": "m.0q3z4zm"
      },
      "s_expression": "(AND (JOIN (R music.group_member.instruments_played) (JOIN music.lyricist.lyrics_written m.0q3z4zm)) (JOIN music.instrument.family m.0342h))",
      "actions": [
        "get_relations(m.0q3z4zm)",
        "get_neighbors(m.0q3z4zm,music.composition.lyricist)",
        "get_relations(#0)",
        "get_neighbors(#0,music.group_member.instruments_played)",
        "get_relations(m.0342h)",
        "get_neighbors(m.0342h,music.instrument.variation)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.018vs",
          "answer_type": "Entity",
          "entity_name": "Bass guitar"
        }
      ]
    },
    {
      "question": "canon powershot a720 is supports which storage type along with the digital camera with iso setting of 100?",
      "qid": "4302372005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Canon PowerShot A720 IS": "m.03wgd91",
        "100": "m.01xrf_x"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.01xrf_x)) (JOIN (R digicams.digital_camera.supported_storage_types) m.03wgd91)))",
      "actions": [
        "get_relations(m.01xrf_x)",
        "get_neighbors(m.01xrf_x,digicams.camera_iso.cameras)",
        "get_relations(#0)",
        "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.03wgd91)",
        "get_neighbors(m.03wgd91,digicams.digital_camera.supported_storage_types)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tthm",
          "entity_name": "Secure Digital"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01z76m",
          "entity_name": "MultiMediaCard"
        }
      ]
    },
    {
      "question": "chase \"that golden thunder\" and belgian tervuren share what temperament?",
      "qid": "4300459000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Chase \"That Golden Thunder\"": "m.0w7k70c",
        "belgian tervuren": "m.02vjwg"
      },
      "s_expression": "(AND biology.breed_temperament (AND (JOIN (R biology.animal_breed.temperament) (JOIN (R biology.pedigreed_animal.breed) m.0w7k70c)) (JOIN (R biology.animal_breed.temperament) m.02vjwg)))",
      "actions": [
        "get_relations(m.0w7k70c)",
        "get_neighbors(m.0w7k70c,biology.pedigreed_animal.breed)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.02vjwg)",
        "get_neighbors(m.02vjwg,biology.animal_breed.temperament)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kpkld",
          "entity_name": "Intelligent"
        }
      ]
    },
    {
      "question": "sealing practitioners honor which core text of christian faith?",
      "qid": "4300898006000_grailqa",
      "source": "grailqa",
      "entities": {
        "christian faith": "m.01lp8",
        "Sealing": "m.021skj"
      },
      "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.01lp8) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.021skj))))",
      "actions": [
        "get_relations(m.01lp8)",
        "get_neighbors(m.01lp8,religion.religion.texts)",
        "get_relations(m.021skj)",
        "get_neighbors(m.021skj,religion.religious_practice.practice_of)",
        "get_relations(#1)",
        "get_neighbors(#1,religion.religion.texts)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.015j7",
          "entity_name": "The Bible"
        }
      ]
    },
    {
      "question": "what is the programming language paradigm used by water programming language and another programming language influenced by tex?",
      "qid": "4300798012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Water programming language": "m.03qtl5",
        "TeX": "m.07dh_"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.03qtl5) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.07dh_))))",
      "actions": [
        "get_relations(m.03qtl5)",
        "get_neighbors(m.03qtl5,computer.programming_language.language_paradigms)",
        "get_relations(m.07dh_)",
        "get_neighbors(m.07dh_,computer.programming_language.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.programming_language.language_paradigms)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05prj",
          "entity_name": "Object-oriented programming"
        }
      ]
    },
    {
      "question": "What type of guitar was used by the recording artist for \" Death to All But Metal (Radio Edit)?\"?",
      "qid": "WebQTest-1279_0349a04252fddc36493b6714d0a196d4_cwq",
      "source": "cwq",
      "entities": {
        "Guitar": "m.0342h",
        "Death to All But Metal (Radio Edit)": "m.0153tkc"
      },
      "s_expression": "(AND (JOIN (R music.group_member.instruments_played) (JOIN music.featured_artist.recordings m.0153tkc)) (JOIN music.instrument.family m.0342h))",
      "actions": [
        "get_relations(m.0153tkc)",
        "get_neighbors(m.0153tkc,music.recording.featured_artists)",
        "get_relations(#0)",
        "get_neighbors(#0,music.group_member.instruments_played)",
        "get_relations(m.0342h)",
        "get_neighbors(m.0342h,music.instrument.variation)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.018vs",
          "answer_type": "Entity",
          "entity_name": "Bass guitar"
        }
      ]
    },
    {
      "question": "What kind of breast cancer afflicted the lyracist for \"Detours?\"?",
      "qid": "WebQTest-2014_cda3166dd0cce0e5bf9780dc41221b97_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "Detours": "m.04zyppx"
      },
      "s_expression": "(AND (JOIN (R medicine.notable_person_with_medical_condition.condition) (JOIN music.lyricist.lyrics_written m.04zyppx)) (JOIN medicine.disease.parent_disease m.0qcr0))",
      "actions": [
        "get_relations(m.04zyppx)",
        "get_neighbors(m.04zyppx,music.composition.lyricist)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.notable_person_with_medical_condition.condition)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,medicine.disease.includes_diseases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.03z_9l",
          "answer_type": "Entity",
          "entity_name": "Meningioma"
        }
      ]
    },
    {
      "question": "which dog breeds have the same temperament as tahltan bear dog and staffordshire bull terrier?",
      "qid": "4300795012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Tahltan Bear Dog": "m.0gh46s",
        "Staffordshire Bull Terrier": "m.01kv93"
      },
      "s_expression": "(AND biology.animal_breed (JOIN biology.animal_breed.temperament (AND (JOIN (R biology.animal_breed.temperament) m.0gh46s) (JOIN biology.breed_temperament.breeds m.01kv93))))",
      "actions": [
        "get_relations(m.0gh46s)",
        "get_neighbors(m.0gh46s,biology.animal_breed.temperament)",
        "get_relations(m.01kv93)",
        "get_neighbors(m.01kv93,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,biology.breed_temperament.breeds)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02cj3",
          "entity_name": "Dachshund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05698d",
          "entity_name": "Mudhol Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0khhs",
          "entity_name": "Chihuahua"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gx1zf",
          "entity_name": "Billy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01nw62",
          "entity_name": "Rottweiler"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07dvrh",
          "entity_name": "Dogue de Bordeaux"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0km5c",
          "entity_name": "German Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01s7fj",
          "entity_name": "Shih Tzu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01x5q1",
          "entity_name": "Jämthund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0403wp9",
          "entity_name": "Muggin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0410k_5",
          "entity_name": "Treeing Tennessee Brindle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04gp8k",
          "entity_name": "English Mastiff"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08mgkp",
          "entity_name": "American Staghound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01hxnh",
          "entity_name": "Bullmastiff"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p33b",
          "entity_name": "Mudi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026qz0j",
          "entity_name": "Polish Hunting Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027dn39",
          "entity_name": "Gran Mastín de Borínquen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pp4mc",
          "entity_name": "Bohemian Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qx4jn",
          "entity_name": "IrishJacks"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0410kz_",
          "entity_name": "Schapendoes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04mhks",
          "entity_name": "Jagdterrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05py4h",
          "entity_name": "Old Danish Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0632tn",
          "entity_name": "Norwegian Buhund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07n97g",
          "entity_name": "Romanian Mioritic Shepherd Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08pb1g",
          "entity_name": "Australian Stumpy Tail Cattle Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08r319",
          "entity_name": "Bavarian Mountain Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b3s8y",
          "entity_name": "Czechoslovakian Wolfdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bq064",
          "entity_name": "Bakharwal dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0fxnhn",
          "entity_name": "Perro de Presa Mallorquin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.017t3p",
          "entity_name": "Airedale Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01_gx_",
          "entity_name": "Yorkshire Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026nbpz",
          "entity_name": "Mountain View Cur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026s0q_",
          "entity_name": "Bosnian Coarse-haired Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02f1fz",
          "entity_name": "West Highland White Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02gf0p",
          "entity_name": "Australian Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02x2kwx",
          "entity_name": "Transylvanian Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03bt6h",
          "entity_name": "Hamiltonstövare"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03n1dn",
          "entity_name": "Fila Brasileiro"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04m4bq",
          "entity_name": "American Staffordshire Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04sxdd8",
          "entity_name": "Stichelhaar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04y09b",
          "entity_name": "Landseer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051ppn",
          "entity_name": "Glen of Imaal Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0622q7",
          "entity_name": "Olde English Bulldogge"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079p_1",
          "entity_name": "Mountain Cur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08qytw",
          "entity_name": "Finnish Lapphund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02xlqx",
          "entity_name": "Basset Fauve de Bretagne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0354by",
          "entity_name": "Grand Basset Griffon Vendéen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.049jr6",
          "entity_name": "American Pit Bull Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05h19n",
          "entity_name": "Bull Terrier (Miniature)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02rxz2k",
          "entity_name": "Bucovina Shepherd Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cqg0t",
          "entity_name": "Akita"
        }
      ]
    },
    {
      "question": "which character who has the ability of principles of flight had an item that was eventually destroyed by harry james potter?",
      "qid": "4302209002000_grailqa",
      "source": "grailqa",
      "entities": {
        "harry james potter": "m.03647x",
        "principles of flight": "m.01515d"
      },
      "s_expression": "(AND fictional_universe.fictional_character (AND (JOIN fictional_universe.fictional_character.has_possessed (JOIN fictional_universe.fictional_object.destroyer m.03647x)) (JOIN fictional_universe.fictional_character.powers_or_abilities m.01515d)))",
      "actions": [
        "get_relations(m.03647x)",
        "get_neighbors(m.03647x,fictional_universe.fictional_object_destroyer.fictional_objects_destroyed)",
        "get_relations(#0)",
        "get_neighbors(#0,fictional_universe.fictional_object.owner)",
        "get_relations(m.01515d)",
        "get_neighbors(m.01515d,fictional_universe.character_powers.characters_with_this_ability)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c8lv",
          "entity_name": "Lord Voldemort"
        }
      ]
    },
    {
      "question": "In which Time Zone is the Bahamas, home of the Toronto Pearson International Airport?",
      "qid": "WebQTest-1195_5411ee5b895e479b24ac562f2ac9b3f3_cwq",
      "source": "cwq",
      "entities": {
        "Bahamas": "m.0160w",
        "Toronto Pearson International Airport": "m.06k9l7"
      },
      "s_expression": "(AND (JOIN (R location.location.time_zones) m.0160w) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.06k9l7)))",
      "actions": [
        "get_relations(m.0160w)",
        "get_neighbors(m.0160w,location.location.time_zones)",
        "get_relations(m.06k9l7)",
        "get_neighbors(m.06k9l7,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02hcv8",
          "answer_type": "Entity",
          "entity_name": "Eastern Time Zone"
        }
      ]
    },
    {
      "question": "Which type of government does New Zealand and Emanuel Lasker's birthplace have?",
      "qid": "WebQTest-665_3ce332b703593e71708a5604865c5758_cwq",
      "source": "cwq",
      "entities": {
        "New Zealand": "m.0ctw_b",
        "Emanuel Lasker": "m.01kfm7"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0ctw_b) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
      "actions": [
        "get_relations(m.0ctw_b)",
        "get_neighbors(m.0ctw_b,location.country.form_of_government)",
        "get_relations(m.01kfm7)",
        "get_neighbors(m.01kfm7,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "which artwork of the era of adriaen backer was created on canvases?",
      "qid": "4301655003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Adriaen Backer": "m.09rs7fm",
        "canvases": "m.0jmpt"
      },
      "s_expression": "(AND visual_art.artwork (AND (JOIN visual_art.artwork.period_or_movement (JOIN visual_art.art_period_movement.associated_artists m.09rs7fm)) (JOIN visual_art.artwork.support m.0jmpt)))",
      "actions": [
        "get_relations(m.09rs7fm)",
        "get_neighbors(m.09rs7fm,visual_art.visual_artist.associated_periods_or_movements)",
        "get_relations(#0)",
        "get_neighbors(#0,visual_art.art_period_movement.associated_artworks)",
        "get_relations(m.0jmpt)",
        "get_neighbors(m.0jmpt,visual_art.visual_art_support.artworks)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kjrf2",
          "entity_name": "The Young Beggar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kh1dd",
          "entity_name": "The Musicians' Brawl"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kh1q7",
          "entity_name": "Magdalen with the Smoking Flame"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kh1xt",
          "entity_name": "St Sebastian Attended by St Irene"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09ktq9",
          "entity_name": "The Elevation of the Cross"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06nsr5s",
          "entity_name": "Portrait of Mother Jeronima de la Fuente"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03cyrsl",
          "entity_name": "The Surrender of Breda"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052s89q",
          "entity_name": "Marriage Portrait of Isaac Massa and Beatrix van der Laen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bhx66",
          "entity_name": "Young Man in a Yellow Robe"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bqq6t",
          "entity_name": "Portrait of Rembrandt van Rijn"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bqrh9",
          "entity_name": "Old Man in Oriental Garb"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bfnxrt",
          "entity_name": "The Raising of Lazarus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c1qnwz",
          "entity_name": "The Adoration of the Shepherds"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065wt25",
          "entity_name": "Boys Eating Grapes and Melon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bx8_q5",
          "entity_name": "The Fall of the Damned"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052t6lf",
          "entity_name": "Elegant Couples Courting"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09nn3pd",
          "entity_name": "A View on a High Road"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09nn3nx",
          "entity_name": "The Water Mill"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09tp_c_",
          "entity_name": "The Dream of Saint Catherine of Alexandria"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09tp_dn",
          "entity_name": "An Angel Freeing the Souls from Purgatory"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065sr0s",
          "entity_name": "The Dancing Couple"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06w85x",
          "entity_name": "Laughing Cavalier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0446j57",
          "entity_name": "Still Life with a Boy Blowing Soap-Bubbles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059_fd9",
          "entity_name": "Still Life with Fruit, Flowers, Glasses and Lobster"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059_frr",
          "entity_name": "Vase of Flowers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bhw9t",
          "entity_name": "Still-Life of Flowers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cfkvy",
          "entity_name": "Still Life with Fruit and Crystal Vase"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cflhg",
          "entity_name": "Banquet Still Life"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075jbrj",
          "entity_name": "Still Life with Dead Game"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07mw3pj",
          "entity_name": "Room Corner with Curiosities"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07mx4zk",
          "entity_name": "Vase of Flowers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09nm5lx",
          "entity_name": "Flower Still Life with a Watch"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09nm9rx",
          "entity_name": "Still Life with Game"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08sfyk",
          "entity_name": "Narcissus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b_v7n",
          "entity_name": "Andromeda Chained to the Rocks"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cftk3",
          "entity_name": "Ahimelech Giving the Sword of Goliath to David"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065wt1t",
          "entity_name": "The Annunciation"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c1pvyp",
          "entity_name": "Triple Portrait of King Charles I"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rjys5",
          "entity_name": "Susanna and the Old Men"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04_2ybq",
          "entity_name": "Susanna and the Elders"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065srzn",
          "entity_name": "Pietà"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.123b43sh",
          "entity_name": "Portrait of Queen Henrietta Maria and the Dwarf Sir Jeffrey Hudson"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.043w9g0",
          "entity_name": "The Disembarkation of Cleopatra at Tarsus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cd2r7",
          "entity_name": "Woman at the Clavicord"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bwhd31",
          "entity_name": "Self-Portrait with Beret and Turned-Up Collar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065ssqn",
          "entity_name": "Martyrdom of St. Philip"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05m5q09",
          "entity_name": "David Playing the Harp"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05prgs3",
          "entity_name": "Portrait of Abraham van Lennep"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045mbx7",
          "entity_name": "The Fortune Teller (Louvre)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065cxkf",
          "entity_name": "The Stag Hunt"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065m7qr",
          "entity_name": "The Liberation of St. Peter"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05by2vv",
          "entity_name": "The Maas at Dordrecht"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cfrbv",
          "entity_name": "Girl at a Window"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04_2_tx",
          "entity_name": "Esther and Ahasuerus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0d67lyh",
          "entity_name": "Still-Life with a Basket of Fruit on a Marble Ledge"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0wy3j77",
          "entity_name": "The Rape of the Daughters of Leucippus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gw721b",
          "entity_name": "Christ in Glory"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rglhj",
          "entity_name": "The Future Stadholder Willem II, Prince of Orange, and His Bride Princess Mary Stuart"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rj0fh",
          "entity_name": "Ecce Homo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bxk0r1",
          "entity_name": "The Wedding by Proxy of Marie de' Medici to King Henry IV"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04_2_v2",
          "entity_name": "The Sleeping Venus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05m5qbg",
          "entity_name": "St. Paul Healing the Cripple at Lystra"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04_309y",
          "entity_name": "Self-portrait"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065cxk0",
          "entity_name": "The Deer Hunt"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.043zwk2",
          "entity_name": "Infanta Margarita Teresa in a Blue Dress"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.043w8pp",
          "entity_name": "The Rape of the Sabines"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06_klwj",
          "entity_name": "Noli me tangere"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08ypkw",
          "entity_name": "Assumption of the Virgin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qw2kp",
          "entity_name": "Artemisia"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052sdzr",
          "entity_name": "Parable of the Wheat and the Tares"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bykc_",
          "entity_name": "Old Woman Dozing"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065wsmh",
          "entity_name": "The Girl with a Coin (Girl of Galicia)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03c6s1g",
          "entity_name": "Saint George and the Dragon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rgk4g",
          "entity_name": "Willem II, Prince of Orange, and his Wife Maria Stuart"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064vg9l",
          "entity_name": "Self-Portrait with Lace Collar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065wvc0",
          "entity_name": "The Proposition"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063zp70",
          "entity_name": "Susanna and the Elders"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bqjpg",
          "entity_name": "Flora"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052t69d",
          "entity_name": "Vertumnus and Pomona"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0d67wt8",
          "entity_name": "Still-Life with Fruit, Parrot, and Nautilus Pitcher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rhks_",
          "entity_name": "Charles I and His Wife Henrietta Maria with Their Eldest Children Charles and James"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05m5pr2",
          "entity_name": "Venus and Adonis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rhlnd",
          "entity_name": "Vision of the Blessed Herman Joseph"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065m7tv",
          "entity_name": "Salome"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rhs30",
          "entity_name": "Portrait of James Stuart, Duke of Richmond"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063p_vq",
          "entity_name": "Lucretia"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09scghy",
          "entity_name": "Assumption of the Virgin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06_kgzn",
          "entity_name": "Christ in the House of Martha and Mary"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04_2z87",
          "entity_name": "Judith Beheading Holofernes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065m7qy",
          "entity_name": "The Martyrdom of Saint Sebastian"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9yr4",
          "entity_name": "The Entombment"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bfmqp8",
          "entity_name": "Juno"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qw2gy",
          "entity_name": "The Prodigal Son in the Tavern"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065srp5",
          "entity_name": "Peasants Before an Inn"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052pg4m",
          "entity_name": "Portrait of a Lady"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063pq3l",
          "entity_name": "Portrait of the Lomellini Family"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065m7v0",
          "entity_name": "Cupid Sleeping"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065srhr",
          "entity_name": "Children Teaching a Cat to Dance"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065cv28",
          "entity_name": "Arctic Adventure"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yxlx0",
          "entity_name": "The Wedding of Samson"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cdtl0",
          "entity_name": "The Town Hall of Amsterdam"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.078w0l8",
          "entity_name": "Portrait of a Man"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04yyb9",
          "entity_name": "The Burial of St. Petronilla"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1q2xhdvff",
          "entity_name": "Portrait of Titus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07wrthw",
          "entity_name": "Dedication of a New Vestal Virgin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03ccb2n",
          "entity_name": "The Conspiracy of Claudius Civilis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.072qrss",
          "entity_name": "David and Uriah"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cy_j7",
          "entity_name": "Return of the Prodigal Son"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064vggw",
          "entity_name": "Self-Portrait"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cy_jf",
          "entity_name": "Two Women at a Window"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rnpwp",
          "entity_name": "St. Francis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027nlnr",
          "entity_name": "Prometheus Being Chained by Vulcan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04_2zpw",
          "entity_name": "Judith and her Maidservant"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05w3kh_",
          "entity_name": "Saint Francis in Meditation"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.043w9k_",
          "entity_name": "Entrance of Alexander into Babylon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cz23v",
          "entity_name": "Portrait of an Elderly Lady"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b44qdz",
          "entity_name": "Charles I with M. de St Antoine"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bfmqyl",
          "entity_name": "Portrait of a Boy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rhjwy",
          "entity_name": "Self-Portrait as Paris"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05n25cd",
          "entity_name": "Peacocks"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0d6vnp",
          "entity_name": "A Lady Writing a Letter"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05m5pgm",
          "entity_name": "Count Willem II of Holland Granting Privileges"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065ssbd",
          "entity_name": "Drunken Silenus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05px3cc",
          "entity_name": "Landscape with a Huntsman and Dead Game"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1hc0hc1zq",
          "entity_name": "Jacob Wrestling with the Angel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052t07r",
          "entity_name": "Concert"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065sszw",
          "entity_name": "Mary Magdalene in the Desert"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.121zpfnj",
          "entity_name": "La infanta Margarita"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065ss5v",
          "entity_name": "St. Francis of Assisi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rhjxf",
          "entity_name": "Self Portrait with a Sunflower"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05m5pgf",
          "entity_name": "Young Woman Warming Her Hands"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bfmq_g",
          "entity_name": "Saint Bartholomew"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kjrrq",
          "entity_name": "Four Figures on a Step"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07nb6_w",
          "entity_name": "Ships Tossed in a Gale"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063fgq5",
          "entity_name": "Without Ceres and Bacchus, Venus would Freeze"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c1qnwj",
          "entity_name": "Christ Crowned with Thorns"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06_d6fv",
          "entity_name": "A Fantastic Cave with Odysseus and Calypso"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kjrkj",
          "entity_name": "The Little Fruit Seller"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.070stcn",
          "entity_name": "The Three Graces"
        }
      ]
    },
    {
      "question": "what artwork on paper was created in the era of richard artschwager?",
      "qid": "4301655008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Richard Artschwager": "m.05q79rf",
        "Paper": "m.0641k"
      },
      "s_expression": "(AND visual_art.artwork (AND (JOIN visual_art.artwork.period_or_movement (JOIN visual_art.art_period_movement.associated_artists m.05q79rf)) (JOIN visual_art.artwork.support m.0641k)))",
      "actions": [
        "get_relations(m.05q79rf)",
        "get_neighbors(m.05q79rf,visual_art.visual_artist.associated_periods_or_movements)",
        "get_relations(#0)",
        "get_neighbors(#0,visual_art.art_period_movement.associated_artworks)",
        "get_relations(m.0641k)",
        "get_neighbors(m.0641k,visual_art.visual_art_support.artworks)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.043zl2z",
          "entity_name": "Picasso's Meninas"
        }
      ]
    },
    {
      "question": "what cheese with the same texture as são jorge cheese does also come from goat?",
      "qid": "4302129000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Goat": "m.03fwl",
        "São Jorge cheese": "m.064n52z"
      },
      "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.03fwl) (JOIN (R food.cheese_texture.cheeses) (JOIN food.cheese_texture.cheeses m.064n52z))))",
      "actions": [
        "get_relations(m.03fwl)",
        "get_neighbors(m.03fwl,food.cheese_milk_source.cheeses)",
        "get_relations(m.064n52z)",
        "get_neighbors(m.064n52z,food.cheese.texture)",
        "get_relations(#1)",
        "get_neighbors(#1,food.cheese_texture.cheeses)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01glzg",
          "entity_name": "Cabrales cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01_r_",
          "entity_name": "Cheddar cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02h891x",
          "entity_name": "Alpine Shepherd"
        }
      ]
    },
    {
      "question": "who is the founding figure of the religion featuredsolemnity of saints peter and paul, that is part of christanity?",
      "qid": "4302278002000_grailqa",
      "source": "grailqa",
      "entities": {
        "solemnity of saints peter and paul": "m.0dsq86",
        "christanity": "m.01lp8"
      },
      "s_expression": "(AND religion.founding_figure (JOIN (R religion.religion.founding_figures) (AND (JOIN (R time.holiday.featured_in_religions) m.0dsq86) (JOIN religion.religion.is_part_of m.01lp8))))",
      "actions": [
        "get_relations(m.0dsq86)",
        "get_neighbors(m.0dsq86,time.holiday.featured_in_religions)",
        "get_relations(m.01lp8)",
        "get_neighbors(m.01lp8,religion.religion.includes)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,religion.religion.founding_figures)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.060nc",
          "entity_name": "Paul the Apostle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.071wp",
          "entity_name": "Saint Peter"
        }
      ]
    },
    {
      "question": "What year did the champion of the 1995 NBA Finals win their first Championship?",
      "qid": "WebQTest-1734_c7e1b4c99873c80def2ecc3d7eef27bf_cwq",
      "source": "cwq",
      "entities": {
        "1995 NBA Finals": "m.08x9k6"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.08x9k6)) time.event.start_date)",
      "actions": [
        "get_relations(m.08x9k6)",
        "get_neighbors(m.08x9k6,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.08x9cq",
          "answer_type": "Entity",
          "entity_name": "1994 NBA Finals"
        }
      ]
    },
    {
      "question": "what website, using audioscrobbler as api, has the category of ihatemyjob.tv?",
      "qid": "4300801003000_grailqa",
      "source": "grailqa",
      "entities": {
        "ihatemyjob.tv": "m.08r3jsb",
        "Audioscrobbler": "m.02kl8st"
      },
      "s_expression": "(AND internet.website (AND (JOIN (R internet.website_category.sites) (JOIN (R internet.website.category) m.08r3jsb)) (JOIN internet.website.api m.02kl8st)))",
      "actions": [
        "get_relations(m.08r3jsb)",
        "get_neighbors(m.08r3jsb,internet.website.category)",
        "get_relations(#0)",
        "get_neighbors(#0,internet.website_category.sites)",
        "get_relations(m.02kl8st)",
        "get_neighbors(m.02kl8st,internet.api.site)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cqpw",
          "entity_name": "Jamendo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02whbn",
          "entity_name": "Last.fm"
        }
      ]
    },
    {
      "question": "In which country do they speak German and have the airline V Bird?",
      "qid": "WebQTest-1117_e0133b074487245b89f042f1b8e39568_cwq",
      "source": "cwq",
      "entities": {
        "German": "m.04306rv",
        "V Bird": "m.05zbq0"
      },
      "s_expression": "(AND (JOIN (R language.human_language.countries_spoken_in) m.04306rv) (JOIN location.location.contains (JOIN aviation.airport.hub_for m.05zbq0)))",
      "actions": [
        "get_relations(m.04306rv)",
        "get_neighbors(m.04306rv,language.human_language.countries_spoken_in)",
        "get_relations(m.05zbq0)",
        "get_neighbors(m.05zbq0,aviation.airline.hubs)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.containedby)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0345h",
          "answer_type": "Entity",
          "entity_name": "Germany"
        }
      ]
    },
    {
      "question": "When did the champion of the 2012 World Series win the World Series?",
      "qid": "WebQTrn-810_87afbf2481df60df8476b920f00c4247_cwq",
      "source": "cwq",
      "entities": {
        "2012 World Series": "m.0ds8qct"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.0ds8qct)) time.event.end_date)",
      "actions": [
        "get_relations(m.0ds8qct)",
        "get_neighbors(m.0ds8qct,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0117q3yz"
        }
      ]
    },
    {
      "question": "what is the religion that is part of the restoration and has the same practices as jehovah's witness?",
      "qid": "4300140013000_grailqa",
      "source": "grailqa",
      "entities": {
        "The Restoration": "m.0dl7db1",
        "jehovah's witness": "m.0dtdq"
      },
      "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.0dtdq)) (JOIN religion.religion.is_part_of m.0dl7db1)))",
      "actions": [
        "get_relations(m.0dtdq)",
        "get_neighbors(m.0dtdq,religion.religion.practices)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religious_practice.practice_of)",
        "get_relations(m.0dl7db1)",
        "get_neighbors(m.0dl7db1,religion.religion.includes)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.058x5",
          "entity_name": "Mormonism"
        }
      ]
    },
    {
      "question": "which programming language influenced by another language developed by ibm corporation was introduced first?",
      "qid": "4303199014000_grailqa",
      "source": "grailqa",
      "entities": {
        "ibm corporation": "m.03sc8"
      },
      "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.03sc8))) computer.programming_language.introduced)",
      "actions": [
        "get_relations(m.03sc8)",
        "get_neighbors(m.03sc8,computer.programming_language_developer.programming_languages_developed)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.influenced)",
        "get_attributes(#1)",
        "argmin(#1,computer.programming_language.introduced)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02_94",
          "entity_name": "Fortran"
        }
      ]
    },
    {
      "question": "how many camera iso capability is the iso setting used by fujifilm finepix a900 and sony cyber-shot dsc-s730?",
      "qid": "3205827009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Fujifilm FinePix A900": "m.03q2lkq",
        "Sony Cyber-shot DSC-S730": "m.04wjmgb"
      },
      "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.03q2lkq) (JOIN (R digicams.digital_camera.iso_setting) m.04wjmgb))))",
      "actions": [
        "get_relations(m.03q2lkq)",
        "get_neighbors(m.03q2lkq,digicams.digital_camera.iso_setting)",
        "get_relations(m.04wjmgb)",
        "get_neighbors(m.04wjmgb,digicams.digital_camera.iso_setting)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "5"
        }
      ]
    },
    {
      "question": "find all quotations from jihan, froth daughter that are sent at to whom \"as seth's apprentice, i've learned wisom of which you've never dreamed.\", it was addressed to?",
      "qid": "4302343008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Jihan, Froth Daughter": "m.0bxttn0",
        "\"As Seth's apprentice, I've learned wisom of which you've never dreamed.\"": "m.0grpfxt"
      },
      "s_expression": "(AND media_common.quotation_addressee (AND (JOIN media_common.quotation_addressee.quotations (JOIN (R fictional_universe.fictional_character.quotations) m.0bxttn0)) (JOIN media_common.quotation_addressee.quotations m.0grpfxt)))",
      "actions": [
        "get_relations(m.0bxttn0)",
        "get_neighbors(m.0bxttn0,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.addressee)",
        "get_relations(m.0grpfxt)",
        "get_neighbors(m.0grpfxt,media_common.quotation.addressee)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bxj80p",
          "entity_name": "Tempus"
        }
      ]
    },
    {
      "question": "what number of temperments do saarloos wolfdog and briquet griffon vendéen breeds have in common?",
      "qid": "3205485001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Saarloos wolfdog": "m.028y5g",
        "Briquet Griffon Vendéen": "m.025s7vs"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds m.028y5g) (JOIN (R biology.animal_breed.temperament) m.025s7vs))))",
      "actions": [
        "get_relations(m.028y5g)",
        "get_neighbors(m.028y5g,biology.animal_breed.temperament)",
        "get_relations(m.025s7vs)",
        "get_neighbors(m.025s7vs,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what political ideology do the future and the australian federal election, 2004 follow?",
      "qid": "4302370000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Australian federal election, 2004": "m.02br3q",
        "future": "m.07x128"
      },
      "s_expression": "(AND government.political_ideology (AND (JOIN government.political_ideology.political_parties (JOIN (R government.parliamentary_election.government_formed_by) m.02br3q)) (JOIN (R government.political_party.ideology) m.07x128)))",
      "actions": [
        "get_relations(m.02br3q)",
        "get_neighbors(m.02br3q,government.parliamentary_election.government_formed_by)",
        "get_relations(#0)",
        "get_neighbors(#0,government.political_party.ideology)",
        "get_relations(m.07x128)",
        "get_neighbors(m.07x128,government.political_party.ideology)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04hbc",
          "entity_name": "Liberalism"
        }
      ]
    },
    {
      "question": "there exists a cheese made from milk of cows that has the exact same texture as parmesan cheese, which is it?",
      "qid": "4302129001000_grailqa",
      "source": "grailqa",
      "entities": {
        "cows": "m.01xq0k1",
        "parmesan cheese": "m.01sbt1"
      },
      "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.01xq0k1) (JOIN (R food.cheese_texture.cheeses) (JOIN food.cheese_texture.cheeses m.01sbt1))))",
      "actions": [
        "get_relations(m.01xq0k1)",
        "get_neighbors(m.01xq0k1,food.cheese_milk_source.cheeses)",
        "get_relations(m.01sbt1)",
        "get_neighbors(m.01sbt1,food.cheese.texture)",
        "get_relations(#1)",
        "get_neighbors(#1,food.cheese_texture.cheeses)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01glzg",
          "entity_name": "Cabrales cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bf81p",
          "entity_name": "Mimolette"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01_r_",
          "entity_name": "Cheddar cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05btrvc",
          "entity_name": "Pleasant Ridge Reserve"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02h89z7",
          "entity_name": "Beaufort Alpage"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02k5rl",
          "entity_name": "Asiago cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03h547",
          "entity_name": "Emmental cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b228",
          "entity_name": "Comté cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06stbl",
          "entity_name": "Beaufort cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064n52z",
          "entity_name": "São Jorge cheese"
        }
      ]
    },
    {
      "question": "what musical release is produced by i stand accused and labelled f-beat?",
      "qid": "4301990014000_grailqa",
      "source": "grailqa",
      "entities": {
        "I Stand Accused": "m.0lsv3c",
        "F-Beat": "m.0dnz3xt"
      },
      "s_expression": "(AND music.release (AND (JOIN music.release.producers (JOIN (R music.recording.producer) m.0lsv3c)) (JOIN music.release.label m.0dnz3xt)))",
      "actions": [
        "get_relations(m.0lsv3c)",
        "get_neighbors(m.0lsv3c,music.recording.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,music.producer.releases_produced)",
        "get_relations(m.0dnz3xt)",
        "get_neighbors(m.0dnz3xt,music.record_label.releases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.039gt9l",
          "entity_name": "Trust"
        }
      ]
    },
    {
      "question": "Where does mascot Crazy Crab's sports team play their home games?",
      "qid": "WebQTrn-52_e3d40457273785e46c5b71732713a5f4_cwq",
      "source": "cwq",
      "entities": {
        "Crazy Crab": "m.02q_hzh"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.team_mascot m.02q_hzh)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.02q_hzh)",
        "get_neighbors(m.02q_hzh,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.01_gsg",
          "answer_type": "Entity",
          "entity_name": "AT&T Park"
        }
      ]
    },
    {
      "question": "Which psychiatrist influenced Whitman's poetry?",
      "qid": "WebQTrn-3358_dc16add47f1fe2c9637b9c4455a3842d_cwq",
      "source": "cwq",
      "entities": {
        "whitman": "m.085gk",
        "Psychiatrist": "m.02p0s5r"
      },
      "s_expression": "(AND (JOIN (R influence.influence_node.influenced_by) m.085gk) (JOIN influence.influence_node.influenced (JOIN people.person.profession m.02p0s5r)))",
      "actions": [
        "get_relations(m.085gk)",
        "get_neighbors(m.085gk,influence.influence_node.influenced_by)",
        "get_relations(m.02p0s5r)",
        "get_neighbors(m.02p0s5r,people.profession.people_with_this_profession)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.039n1",
          "answer_type": "Entity",
          "entity_name": "Georg Wilhelm Friedrich Hegel"
        }
      ]
    },
    {
      "question": "in which computer science discipline does paolo ciuccarelli conduct research?",
      "qid": "4302233003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Computer Science": "m.01mkq",
        "Paolo Ciuccarelli": "m.0g4vz73"
      },
      "s_expression": "(AND education.field_of_study (AND (JOIN (R education.field_of_study.subdisciplines) m.01mkq) (JOIN (R education.field_of_study.subdiscipline_of) (JOIN (R education.academic.research_areas) m.0g4vz73))))",
      "actions": [
        "get_relations(m.01mkq)",
        "get_neighbors(m.01mkq,education.field_of_study.subdisciplines)",
        "get_relations(m.0g4vz73)",
        "get_neighbors(m.0g4vz73,education.academic.research_areas)",
        "get_relations(#1)",
        "get_neighbors(#1,education.field_of_study.subdiscipline_of)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.019ds_",
          "entity_name": "Information architecture"
        }
      ]
    },
    {
      "question": "david han's longest release track of recordings is what?",
      "qid": "4300020009000_grailqa",
      "source": "grailqa",
      "entities": {
        "David Han": "m.012cwbz0"
      },
      "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.012cwbz0))) music.release_track.length)",
      "actions": [
        "get_relations(m.012cwbz0)",
        "get_neighbors(m.012cwbz0,music.engineer.tracks_engineered)",
        "get_relations(#0)",
        "get_neighbors(#0,music.recording.tracks)",
        "get_attributes(#1)",
        "argmax(#1,music.release_track.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.012c1xs6",
          "entity_name": "Bliss"
        }
      ]
    },
    {
      "question": "what is the astronomical discovery that is published and discovered in the astronomical observatory of planet pluto?",
      "qid": "4300765004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Published": "m.03ywyv_",
        "planet pluto": "m.0c3qy"
      },
      "s_expression": "(AND astronomy.astronomical_discovery (AND (JOIN (R astronomy.astronomical_discovery_status.objects) m.03ywyv_) (JOIN astronomy.astronomical_discovery.discovery_site (JOIN (R astronomy.astronomical_discovery.discovery_site) m.0c3qy))))",
      "actions": [
        "get_relations(m.03ywyv_)",
        "get_neighbors(m.03ywyv_,astronomy.astronomical_discovery_status.objects)",
        "get_relations(m.0c3qy)",
        "get_neighbors(m.0c3qy,astronomy.astronomical_discovery.discovery_site)",
        "get_relations(#1)",
        "get_neighbors(#1,astronomy.astronomical_observatory.discoveries)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.070g26",
          "entity_name": "7166 Kennedy"
        }
      ]
    },
    {
      "question": "What nation of the Sahel through which the Niger River flows is the geographic location where Yoruba is a spoken dialect?",
      "qid": "WebQTest-1748_3da512ed37aceb7e8eee61542ac23583_cwq",
      "source": "cwq",
      "entities": {
        "Niger River": "m.05csx",
        "Sahel": "m.0l5_l",
        "yoruba": "m.01zycf"
      },
      "s_expression": "(AND location.country (AND (JOIN (R location.location.partially_containedby) m.05csx) (AND (JOIN location.location.partially_contains m.0l5_l) (JOIN location.country.languages_spoken m.01zycf))))",
      "actions": [
        "get_relations(m.05csx)",
        "get_neighbors(m.05csx,location.location.partially_containedby)",
        "get_relations(m.0l5_l)",
        "get_neighbors(m.0l5_l,location.location.partially_containedby)",
        "get_relations(m.01zycf)",
        "get_neighbors(m.01zycf,language.human_language.countries_spoken_in)",
        "intersection(#1,#2)",
        "intersection(#0,#3)"
      ],
      "answer": [
        {
          "answer_argument": "m.05cgv",
          "answer_type": "Entity",
          "entity_name": "Nigeria"
        }
      ]
    },
    {
      "question": "what visual art form is made by jean goujon besides outdoor sculpture?",
      "qid": "4302283005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Jean Goujon": "m.07fy41",
        "outdoor sculpture": "m.06msq"
      },
      "s_expression": "(AND visual_art.visual_art_form (JOIN (R visual_art.artwork.art_form) (AND (JOIN visual_art.artwork.artist m.07fy41) (JOIN visual_art.artwork.art_form m.06msq))))",
      "actions": [
        "get_relations(m.07fy41)",
        "get_neighbors(m.07fy41,visual_art.visual_artist.artworks)",
        "get_relations(m.06msq)",
        "get_neighbors(m.06msq,visual_art.visual_art_form.artworks)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,visual_art.artwork.art_form)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pkk0",
          "entity_name": "Bas-relief"
        }
      ]
    },
    {
      "question": "what is total amount of spacecraft's that astrium and thales alenia space manufacture?",
      "qid": "3201449003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Astrium": "m.0271m6s",
        "Thales Alenia Space": "m.02qjw4d"
      },
      "s_expression": "(COUNT (AND spaceflight.spacecraft (AND (JOIN spaceflight.spacecraft.manufacturer m.0271m6s) (JOIN spaceflight.spacecraft.manufacturer m.02qjw4d))))",
      "actions": [
        "get_relations(m.0271m6s)",
        "get_neighbors(m.0271m6s,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "get_relations(m.02qjw4d)",
        "get_neighbors(m.02qjw4d,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "how many different varieties of beer are used by centennial and chinook?",
      "qid": "3202749003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Centennial": "m.0115clqx",
        "Chinook": "m.0115gh_g"
      },
      "s_expression": "(COUNT (AND base.lightweight.beer_style (AND (JOIN (R base.lightweight.beer_hop.beer_styles_used_in) m.0115clqx) (JOIN (R base.lightweight.beer_hop.beer_styles_used_in) m.0115gh_g))))",
      "actions": [
        "get_relations(m.0115clqx)",
        "get_neighbors(m.0115clqx,base.lightweight.beer_hop.beer_styles_used_in)",
        "get_relations(m.0115gh_g)",
        "get_neighbors(m.0115gh_g,base.lightweight.beer_hop.beer_styles_used_in)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "3"
        }
      ]
    },
    {
      "question": "what cinnamon dish is common in american food?",
      "qid": "4301356014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Cinnamon": "m.0f0ch",
        "American food": "m.01z1jf2"
      },
      "s_expression": "(AND food.type_of_dish (JOIN food.type_of_dish.dishes (AND (JOIN food.dish.ingredients m.0f0ch) (JOIN (R dining.cuisine.dishes) m.01z1jf2))))",
      "actions": [
        "get_relations(m.0f0ch)",
        "get_neighbors(m.0f0ch,food.ingredient.dishes)",
        "get_relations(m.01z1jf2)",
        "get_neighbors(m.01z1jf2,dining.cuisine.dishes)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,food.dish.type_of_dish1)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0270h",
          "entity_name": "Dessert"
        }
      ]
    },
    {
      "question": "mark chamberlain works in which department of university of auckland?",
      "qid": "4301362006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Mark Chamberlain": "m.0105mn1h",
        "University of Auckland": "m.01pj48"
      },
      "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.0105mn1h)) (JOIN (R education.university.departments) m.01pj48)))",
      "actions": [
        "get_relations(m.0105mn1h)",
        "get_neighbors(m.0105mn1h,education.academic.research_areas)",
        "get_relations(#0)",
        "get_neighbors(#0,education.field_of_study.academic_departments)",
        "get_relations(m.01pj48)",
        "get_neighbors(m.01pj48,education.university.departments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.064_rxn",
          "entity_name": "Department of Chemistry"
        }
      ]
    },
    {
      "question": "who made the computer designs of macbook and next computer?",
      "qid": "4301299010000_grailqa",
      "source": "grailqa",
      "entities": {
        "NeXT Computer": "m.04_1mz4",
        "macbook": "m.09tzfp"
      },
      "s_expression": "(AND computer.computer_designer (AND (JOIN computer.computer_designer.computers_designed (JOIN (R computer.computer.parent_model) m.09tzfp)) (JOIN (R computer.computer.key_designers) m.04_1mz4)))",
      "actions": [
        "get_relations(m.09tzfp)",
        "get_neighbors(m.09tzfp,computer.computer.parent_model)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.computer.key_designers)",
        "get_relations(m.04_1mz4)",
        "get_neighbors(m.04_1mz4,computer.computer.key_designers)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.06y3r",
          "entity_name": "Steve Jobs"
        }
      ]
    },
    {
      "question": "name all the military units that took part in the battle of gettysburg and were from the same place as 1st louisiana native guard.",
      "qid": "250000200_graphquestions",
      "source": "graphquestions",
      "entities": {
        "Battle of Gettysburg": "m.01jnm",
        "1st Louisiana Native Guard": "m.0hr6dl9"
      },
      "s_expression": "(AND base.americancivilwar.military_unit (AND (JOIN military.military_unit.place_of_origin (JOIN (R military.military_unit.place_of_origin) m.0hr6dl9)) (JOIN base.americancivilwar.military_unit.conflicts_participated_in m.01jnm)))",
      "actions": [
        "get_relations(m.0hr6dl9)",
        "get_neighbors(m.0hr6dl9,military.military_unit.place_of_origin)",
        "get_relations(#0)",
        "get_neighbors(#0,military.military_unit_place_of_origin.military_units)",
        "get_relations(m.01jnm)",
        "get_neighbors(m.01jnm,base.americancivilwar.battle.military_units_involved_in_this_conflict)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04gjww9",
          "entity_name": "10th Louisiana Infantry"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l684",
          "entity_name": "15th Louisiana Infantry Regiment"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l66_",
          "entity_name": "14th Louisiana Infantry Regiment"
        }
      ]
    },
    {
      "question": "what is the musical recording with maximum length that is a track of musical release component released by symphony no. 4 / ein deutsches requiem / schicksalslied (eugen jochum, jessye norman, jorma hynninen, feat. conductor: klaus tennstedt)?",
      "qid": "4301467007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Symphony No. 4 / Ein Deutsches Requiem / Schicksalslied (Eugen Jochum, Jessye Norman, Jorma Hynninen, feat. conductor: Klaus Tennstedt)": "m.01kqwbx"
      },
      "s_expression": "(ARGMAX (AND music.recording (JOIN (R music.release.track) (JOIN (R music.album.releases) m.01kqwbx))) music.recording.length)",
      "actions": [
        "get_relations(m.01kqwbx)",
        "get_neighbors(m.01kqwbx,music.album.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.track)",
        "get_attributes(#1)",
        "argmax(#1,music.recording.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01dv1vd",
          "entity_name": "Schicksalslied, Op. 54"
        }
      ]
    },
    {
      "question": "The sports team with the fight song Steelers Polka won the superbowl last in what year?",
      "qid": "WebQTest-1523_f44adc4947a59c150317bb5923cf1c9b_cwq",
      "source": "cwq",
      "entities": {
        "superbowl": "m.06x5s",
        "Steelers Polka": "m.0j_8yp9"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.fight_song m.0j_8yp9)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.0j_8yp9)",
        "get_neighbors(m.0j_8yp9,sports.fight_song.sports_team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04n7r5",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLIII"
        }
      ]
    },
    {
      "question": "What baseball team plays at Hilltop Park and when did they win the World Series?",
      "qid": "WebQTrn-810_1afd5634cb719e3b77b4345510599ca8_cwq",
      "source": "cwq",
      "entities": {
        "Hilltop Park": "m.039nhz"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.039nhz)) time.event.end_date)",
      "actions": [
        "get_relations(m.039nhz)",
        "get_neighbors(m.039nhz,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0117q3yz"
        }
      ]
    },
    {
      "question": "Which timezone includes the Venice Municipal Airport and the Bahamas?",
      "qid": "WebQTrn-1332_623b8370871966e2e8aeb301482e1558_cwq",
      "source": "cwq",
      "entities": {
        "Bahamas": "m.0160w",
        "Venice Municipal Airport": "m.026w2y7"
      },
      "s_expression": "(AND (JOIN (R location.location.time_zones) m.0160w) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.026w2y7)))",
      "actions": [
        "get_relations(m.0160w)",
        "get_neighbors(m.0160w,location.location.time_zones)",
        "get_relations(m.026w2y7)",
        "get_neighbors(m.026w2y7,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02hcv8",
          "answer_type": "Entity",
          "entity_name": "Eastern Time Zone"
        }
      ]
    },
    {
      "question": "programming languages such as php programming and derivatives of javascripts follow what programming language paradigm?",
      "qid": "4300417005000_grailqa",
      "source": "grailqa",
      "entities": {
        "php programming": "m.060kv",
        "javascripts": "m.02p97"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.02p97)) (JOIN (R computer.programming_language.language_paradigms) m.060kv)))",
      "actions": [
        "get_relations(m.02p97)",
        "get_neighbors(m.02p97,computer.programming_language.dialects)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.language_paradigms)",
        "get_relations(m.060kv)",
        "get_neighbors(m.060kv,computer.programming_language.language_paradigms)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05prj",
          "entity_name": "Object-oriented programming"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01c3bz",
          "entity_name": "Imperative programming"
        }
      ]
    },
    {
      "question": "what cheese made from milk of dromedary camel has the same texture as affidelice au chablis does?",
      "qid": "4302129004000_grailqa",
      "source": "grailqa",
      "entities": {
        "dromedary camel": "m.01w5q5",
        "Affidelice au Chablis": "m.04p55hr"
      },
      "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.01w5q5) (JOIN (R food.cheese_texture.cheeses) (JOIN food.cheese_texture.cheeses m.04p55hr))))",
      "actions": [
        "get_relations(m.01w5q5)",
        "get_neighbors(m.01w5q5,food.cheese_milk_source.cheeses)",
        "get_relations(m.04p55hr)",
        "get_neighbors(m.04p55hr,food.cheese.texture)",
        "get_relations(#1)",
        "get_neighbors(#1,food.cheese_texture.cheeses)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.08q0nd",
          "entity_name": "Caravane cheese"
        }
      ]
    },
    {
      "question": "What was the last World Series won by the team whose home arena is AT&T Park?",
      "qid": "WebQTest-832_c1d5c9c777c291a80c29c70ec43c45ad_cwq",
      "source": "cwq",
      "entities": {
        "AT&T Park": "m.01_gsg"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.01_gsg)) time.event.start_date)",
      "actions": [
        "get_relations(m.01_gsg)",
        "get_neighbors(m.01_gsg,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0117q3yz"
        }
      ]
    },
    {
      "question": "Find the sports team that plays in Oriole Park at Camen Yards, when did they last win a World Series?",
      "qid": "WebQTest-1680_c7a3d755d33745432368dd618c44316d_cwq",
      "source": "cwq",
      "entities": {
        "oriole park at camen yards": "m.01x1l0"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.01x1l0)) time.event.end_date)",
      "actions": [
        "get_relations(m.01x1l0)",
        "get_neighbors(m.01x1l0,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.046_p6",
          "answer_type": "Entity",
          "entity_name": "1983 World Series"
        }
      ]
    },
    {
      "question": "What is the name of the founder of Facebook who was born in Louisville?",
      "qid": "WebQTrn-1071_a9d8d0866a572a7afe22a5cb39d7ee11_cwq",
      "source": "cwq",
      "entities": {
        "facebook": "m.0hmyfsv",
        "louisville": "m.0f2pf9"
      },
      "s_expression": "(AND (JOIN (R organization.organization.founders) m.0hmyfsv) (JOIN influence.influence_node.influenced (JOIN people.person.place_of_birth m.0f2pf9)))",
      "actions": [
        "get_relations(m.0hmyfsv)",
        "get_neighbors(m.0hmyfsv,organization.organization.founders)",
        "get_relations(m.0f2pf9)",
        "get_neighbors(m.0f2pf9,location.location.people_born_here)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.086dny",
          "answer_type": "Entity",
          "entity_name": "Mark Zuckerberg"
        }
      ]
    },
    {
      "question": "When was the last time Citi Field's home team won the world series?",
      "qid": "WebQTest-1556_a9a4ca7e232c72747343065b53a00247_cwq",
      "source": "cwq",
      "entities": {
        "Citi Field": "m.06gwtj"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.06gwtj)) time.event.end_date)",
      "actions": [
        "get_relations(m.06gwtj)",
        "get_neighbors(m.06gwtj,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q9lc",
          "answer_type": "Entity",
          "entity_name": "1986 World Series"
        }
      ]
    },
    {
      "question": "christian religion and anglicans are practiced by how many religious practices?",
      "qid": "3204573005000_grailqa",
      "source": "grailqa",
      "entities": {
        "christian religion": "m.01lp8",
        "anglicans": "m.0n2g"
      },
      "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.01lp8) (JOIN (R religion.religion.practices) m.0n2g))))",
      "actions": [
        "get_relations(m.01lp8)",
        "get_neighbors(m.01lp8,religion.religion.practices)",
        "get_relations(m.0n2g)",
        "get_neighbors(m.0n2g,religion.religion.practices)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "Which was the most recent superbowl won by the NY Giants?",
      "qid": "WebQTrn-3290_b34551bd32b0e2cb979dbbd6bc0c6833_cwq",
      "source": "cwq",
      "entities": {
        "ny giants": "m.05gg4",
        "Superbowl": "m.06x5s"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) m.05gg4) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.05gg4)",
        "get_neighbors(m.05gg4,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#0,#1)",
        "get_attributes(#2)",
        "argmax(#2,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.043t_rh",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLVI"
        }
      ]
    },
    {
      "question": "which martial art has the same category as kalaripayattu and has strike?",
      "qid": "4301064002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Kalaripayattu": "m.01qcyb",
        "Strike": "m.02rj0b"
      },
      "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.01qcyb)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.02rj0b)))",
      "actions": [
        "get_relations(m.01qcyb)",
        "get_neighbors(m.01qcyb,martial_arts.martial_art.category)",
        "get_relations(#0)",
        "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
        "get_relations(m.02rj0b)",
        "get_neighbors(m.02rj0b,martial_arts.martial_art_category.martial_arts)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tm7f",
          "entity_name": "Kajukenbo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03bs3p",
          "entity_name": "Sanshou"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.041d65",
          "entity_name": "Vovinam"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07k4r",
          "entity_name": "Tai chi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01vqp5",
          "entity_name": "Systema"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09h901",
          "entity_name": "Shidōkan Karate"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hbj9",
          "entity_name": "Hapkido"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.055rn5",
          "entity_name": "Kuk Sool Won"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02618d8",
          "entity_name": "Russian All-Round Fighting"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.048yh",
          "entity_name": "Krav Maga"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b65c",
          "entity_name": "Hwa Rang Do"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.061px",
          "entity_name": "Pankration"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06jm_r",
          "entity_name": "Bartitsu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06k44z",
          "entity_name": "Modern Arnis"
        }
      ]
    },
    {
      "question": "programming languages such as charity and derivatives of lpc follow what programming language paradigm?",
      "qid": "4300417004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Charity": "m.04wyyl",
        "LPC": "m.03nk21"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.03nk21)) (JOIN (R computer.programming_language.language_paradigms) m.04wyyl)))",
      "actions": [
        "get_relations(m.03nk21)",
        "get_neighbors(m.03nk21,computer.programming_language.dialects)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.language_paradigms)",
        "get_relations(m.04wyyl)",
        "get_neighbors(m.04wyyl,computer.programming_language.language_paradigms)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ykw",
          "entity_name": "Functional programming"
        }
      ]
    },
    {
      "question": "what kind of school is associated with the catholic university of america and the the isis magazine's publisher?",
      "qid": "4301751003000_grailqa",
      "source": "grailqa",
      "entities": {
        "The Isis Magazine": "m.011q98t1",
        "The Catholic University of America": "m.02vnp2"
      },
      "s_expression": "(AND education.school_category (AND (JOIN (R education.educational_institution.school_type) (JOIN (R education.school_magazine.school) m.011q98t1)) (JOIN (R education.educational_institution.school_type) m.02vnp2)))",
      "actions": [
        "get_relations(m.011q98t1)",
        "get_neighbors(m.011q98t1,education.school_magazine.school)",
        "get_relations(#0)",
        "get_neighbors(#0,education.educational_institution.school_type)",
        "get_relations(m.02vnp2)",
        "get_neighbors(m.02vnp2,education.educational_institution.school_type)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07tf8",
          "entity_name": "University"
        }
      ]
    },
    {
      "question": "which types of storage are compatible with sony dsc-p72 as well as color filter array of bayer?",
      "qid": "4302099009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Sony DSC-P72": "m.03q2qsb",
        "bayer": "m.02r8js"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN digicams.camera_storage_type.compatible_cameras m.03q2qsb) (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.color_filter_array_type m.02r8js))))",
      "actions": [
        "get_relations(m.03q2qsb)",
        "get_neighbors(m.03q2qsb,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.02r8js)",
        "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.supported_storage_types)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01730t",
          "entity_name": "Memory Stick"
        }
      ]
    },
    {
      "question": "what is the total number of amusement park areas in both hong kong disneyland and florida?",
      "qid": "3206299000000_grailqa",
      "source": "grailqa",
      "entities": {
        "florida": "m.02mv6p",
        "Hong Kong Disneyland": "m.022zvr"
      },
      "s_expression": "(COUNT (AND amusement_parks.amusement_park_area (AND (JOIN amusement_parks.amusement_park_area.parks m.02mv6p) (JOIN amusement_parks.amusement_park_area.parks m.022zvr))))",
      "actions": [
        "get_relations(m.02mv6p)",
        "get_neighbors(m.02mv6p,amusement_parks.park.areas)",
        "get_relations(m.022zvr)",
        "get_neighbors(m.022zvr,amusement_parks.park.areas)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "3"
        }
      ]
    },
    {
      "question": "of the texts on eastern christians, how many are there which are religious texts of christmas eve?",
      "qid": "4303883006000_grailqa",
      "source": "grailqa",
      "entities": {
        "eastern christians": "m.0blk0",
        "Christmas Eve": "m.014r1s"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of (JOIN (R time.holiday.featured_in_religions) m.014r1s)) (JOIN (R religion.religion.texts) m.0blk0))))",
      "actions": [
        "get_relations(m.014r1s)",
        "get_neighbors(m.014r1s,time.holiday.featured_in_religions)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religion.texts)",
        "get_relations(m.0blk0)",
        "get_neighbors(m.0blk0,religion.religion.texts)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "3"
        }
      ]
    },
    {
      "question": "Which music producer has worked with P!nk and also produced the Animals' first album?",
      "qid": "WebQTest-954_c3ea724b6a6df25186adf4994bbd5ddc_cwq",
      "source": "cwq",
      "entities": {
        "Animals": "m.034g1hc"
      },
      "s_expression": "(ARGMIN (JOIN (R music.artist.album) (JOIN music.producer.releases_produced m.034g1hc)) music.album.release_date)",
      "actions": [
        "get_relations(m.034g1hc)",
        "get_neighbors(m.034g1hc,music.release.producers)",
        "get_relations(#0)",
        "get_neighbors(#0,music.artist.album)",
        "get_attributes(#1)",
        "argmin(#1,music.album.release_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0h3bhb1",
          "answer_type": "Entity",
          "entity_name": "Psychedelic Session-compilation album"
        }
      ]
    },
    {
      "question": "What type of government practiced in Sparta was also in use in the birthplace of Ãlvaro Gil Cabral?",
      "qid": "WebQTrn-73_aae1720ca8d746eb8883d69655f9e1e0_cwq",
      "source": "cwq",
      "entities": {
        "Sparta": "m.09472",
        "ãlvaro gil cabral": "g.121r_b9t"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.09472) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here g.121r_b9t)))",
      "actions": [
        "get_relations(m.09472)",
        "get_neighbors(m.09472,location.country.form_of_government)",
        "get_relations(g.121r_b9t)",
        "get_neighbors(g.121r_b9t,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.04szc",
          "answer_type": "Entity",
          "entity_name": "Monarchy"
        }
      ]
    },
    {
      "question": "what is the number of programming language paradigms for alma-0 and metal ?",
      "qid": "3205793011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Alma-0": "m.03r9yp",
        "MetaL": "m.03d4cmc"
      },
      "s_expression": "(COUNT (AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.03r9yp) (JOIN computer.programming_language_paradigm.languages m.03d4cmc))))",
      "actions": [
        "get_relations(m.03r9yp)",
        "get_neighbors(m.03r9yp,computer.programming_language.language_paradigms)",
        "get_relations(m.03d4cmc)",
        "get_neighbors(m.03d4cmc,computer.programming_language.language_paradigms)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "the subject of the quote, \"personal beauty is a greater recommendation than any letter of reference. \" spoken by the angel of remembrance, is what?",
      "qid": "4300443014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Personal beauty is a greater recommendation than any letter of reference.": "m.048hxkx",
        "Angel of Remembrance": "m.0h3grm9"
      },
      "s_expression": "(AND media_common.quotation_subject (AND (JOIN (R media_common.quotation.subjects) (JOIN media_common.quotation.spoken_by_character m.0h3grm9)) (JOIN (R media_common.quotation.subjects) m.048hxkx)))",
      "actions": [
        "get_relations(m.0h3grm9)",
        "get_neighbors(m.0h3grm9,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.subjects)",
        "get_relations(m.048hxkx)",
        "get_neighbors(m.048hxkx,media_common.quotation.subjects)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01f43",
          "entity_name": "Beauty"
        }
      ]
    },
    {
      "question": "What is the tourist attraction near the Grand Canyon where a football running back was born?",
      "qid": "WebQTrn-2871_9e3a08ab28a6799980c632e4dae4f239_cwq",
      "source": "cwq",
      "entities": {
        "Grand Canyon": "m.0cns5",
        "Running back": "m.01r3hr"
      },
      "s_expression": "(AND (JOIN (R travel.tourist_attraction.near_travel_destination) m.0cns5) (JOIN location.location.people_born_here (JOIN american_football.football_player.position_s m.01r3hr)))",
      "actions": [
        "get_relations(m.0cns5)",
        "get_neighbors(m.0cns5,travel.tourist_attraction.near_travel_destination)",
        "get_relations(m.01r3hr)",
        "get_neighbors(m.01r3hr,american_football.football_position.players)",
        "get_relations(#1)",
        "get_neighbors(#1,people.person.place_of_birth)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0d35y"
        }
      ]
    },
    {
      "question": "who is the fictional character that resides in planet of barsoomian universe?",
      "qid": "4300742004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Planet": "m.05qc_",
        "Barsoomian universe": "m.0j6vg09"
      },
      "s_expression": "(AND fictional_universe.fictional_character (JOIN fictional_universe.fictional_character.places_lived (AND (JOIN fictional_universe.fictional_setting.setting_type m.05qc_) (JOIN (R fictional_universe.fictional_universe.locations) m.0j6vg09))))",
      "actions": [
        "get_relations(m.05qc_)",
        "get_neighbors(m.05qc_,fictional_universe.type_of_fictional_setting.settings)",
        "get_relations(m.0j6vg09)",
        "get_neighbors(m.0j6vg09,fictional_universe.fictional_universe.locations)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,fictional_universe.fictional_setting.characters_that_have_lived_here)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0pzg8",
          "entity_name": "John Carter of Mars"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0crwpt",
          "entity_name": "Dejah Thoris"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qh69p",
          "entity_name": "Tars Tarkas"
        }
      ]
    },
    {
      "question": "games developed by nintendo on virtual console can be bought in which regions?",
      "qid": "498000300_graphquestions",
      "source": "graphquestions",
      "entities": {
        "Nintendo": "m.059wk",
        "Virtual Console": "m.07sg3j"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.developer m.059wk) (JOIN cvg.game_version.distributed_through m.07sg3j))))",
      "actions": [
        "get_relations(m.059wk)",
        "get_neighbors(m.059wk,cvg.cvg_developer.game_versions_developed)",
        "get_relations(m.07sg3j)",
        "get_neighbors(m.07sg3j,cvg.computer_game_distribution_system.games_distributed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02j9z",
          "entity_name": "Europe"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_3d",
          "entity_name": "Japan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059g4",
          "entity_name": "North America"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0chghy",
          "entity_name": "Australia"
        }
      ]
    },
    {
      "question": "the bipropellant rocket engine with rp-1 and pressure-fed engine is designed by who?",
      "qid": "4300753006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Pressure-fed engine": "m.04qqrz",
        "RP-1": "m.021vvd"
      },
      "s_expression": "(AND spaceflight.rocket_engine_designer (JOIN spaceflight.rocket_engine_designer.rocket_engines (AND (JOIN (R spaceflight.rocket_engine_cycle.rocket_engines) m.04qqrz) (JOIN (R spaceflight.rocket_engine_fuel.rocket_engines) m.021vvd))))",
      "actions": [
        "get_relations(m.04qqrz)",
        "get_neighbors(m.04qqrz,spaceflight.rocket_engine_cycle.rocket_engines)",
        "get_relations(m.021vvd)",
        "get_neighbors(m.021vvd,spaceflight.rocket_engine_fuel.rocket_engines)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,spaceflight.rocket_engine.designed_by)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03fkyw",
          "entity_name": "SpaceX"
        }
      ]
    },
    {
      "question": "what number of breeds in the germany share a similar temperament with the giant schnauzer?",
      "qid": "4303460002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Giant Schnauzer": "m.04q65n",
        "Germany": "m.0345h"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.0345h)) (JOIN (R biology.animal_breed.temperament) m.04q65n))))",
      "actions": [
        "get_relations(m.0345h)",
        "get_neighbors(m.0345h,biology.breed_origin.breeds_originating_here)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.04q65n)",
        "get_neighbors(m.04q65n,biology.animal_breed.temperament)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "5"
        }
      ]
    },
    {
      "question": "What are the movies that Adam Sandler played in that also involves organization toonexplainers?",
      "qid": "WebQTrn-1677_5f5da3e1d4ca7df9f19ce3fdfc5790e2_cwq",
      "source": "cwq",
      "entities": {
        "Adam Sandler": "m.0pz91",
        "toonexplainers": "m.010lbn79"
      },
      "s_expression": "(AND (JOIN (R film.producer.film) m.0pz91) (JOIN film.film.genre (JOIN organization.organization_sector.organizations_in_this_sector m.010lbn79)))",
      "actions": [
        "get_relations(m.0pz91)",
        "get_neighbors(m.0pz91,film.producer.film)",
        "get_relations(m.010lbn79)",
        "get_neighbors(m.010lbn79,organization.organization.sectors)",
        "get_relations(#1)",
        "get_neighbors(#1,film.film_genre.films_in_this_genre)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.010rdrd1"
        },
        {
          "answer_argument": "m.02m7tn"
        }
      ]
    },
    {
      "question": "what religion shares practices with paganism and is a part of syncretism?",
      "qid": "4300140001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Syncretism": "m.0r8kd4z",
        "Paganism": "m.05tgm"
      },
      "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.05tgm)) (JOIN religion.religion.is_part_of m.0r8kd4z)))",
      "actions": [
        "get_relations(m.05tgm)",
        "get_neighbors(m.05tgm,religion.religion.practices)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religious_practice.practice_of)",
        "get_relations(m.0r8kd4z)",
        "get_neighbors(m.0r8kd4z,religion.religion.includes)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gvx",
          "entity_name": "Taoism"
        }
      ]
    },
    {
      "question": "What's the name of the area where the newspaper Legal Daily is circulated?",
      "qid": "WebQTrn-1090_474436fc8deb2f86460da3fc533fe136_cwq",
      "source": "cwq",
      "entities": {
        "Legal Daily": "m.08d3jj"
      },
      "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN periodicals.newspaper_circulation_area.newspapers m.08d3jj)) topic_server.population_number)",
      "actions": [
        "get_relations(m.08d3jj)",
        "get_neighbors(m.08d3jj,book.newspaper.circulation_areas)",
        "get_relations(#0)",
        "get_neighbors(#0,location.location.contains)",
        "get_attributes(#1)",
        "argmax(#1,topic_server.population_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.011f3wbn",
          "answer_type": "Entity",
          "entity_name": "Jingjinji"
        }
      ]
    },
    {
      "question": "where in harvard does william james work?",
      "qid": "4301362008000_grailqa",
      "source": "grailqa",
      "entities": {
        "William James": "m.0mj0c",
        "harvard": "m.03ksy"
      },
      "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.0mj0c)) (JOIN (R education.university.departments) m.03ksy)))",
      "actions": [
        "get_relations(m.0mj0c)",
        "get_neighbors(m.0mj0c,education.academic.research_areas)",
        "get_relations(#0)",
        "get_neighbors(#0,education.field_of_study.academic_departments)",
        "get_relations(m.03ksy)",
        "get_neighbors(m.03ksy,education.university.departments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pl59j",
          "entity_name": "Harvard Department of Social Relations"
        }
      ]
    },
    {
      "question": "what type of dish contains cinnamon and is common in american food?\nentr√©e",
      "qid": "4301356006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Cinnamon": "m.0f0ch",
        "American food": "m.01z1jf2"
      },
      "s_expression": "(AND food.type_of_dish (JOIN food.type_of_dish.dishes (AND (JOIN food.dish.ingredients m.0f0ch) (JOIN (R dining.cuisine.dishes) m.01z1jf2))))",
      "actions": [
        "get_relations(m.0f0ch)",
        "get_neighbors(m.0f0ch,food.ingredient.dishes)",
        "get_relations(m.01z1jf2)",
        "get_neighbors(m.01z1jf2,dining.cuisine.dishes)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,food.dish.type_of_dish1)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0270h",
          "entity_name": "Dessert"
        }
      ]
    },
    {
      "question": "What kind of government is practiced in Japan in the birthplace of Baldur von Schirach?",
      "qid": "WebQTrn-2482_3f76d491e90682cc29e3de2546e1f9c5_cwq",
      "source": "cwq",
      "entities": {
        "Japan": "m.03_3d",
        "Baldur von Schirach": "m.0143sn"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.03_3d) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.0143sn)))",
      "actions": [
        "get_relations(m.03_3d)",
        "get_neighbors(m.03_3d,location.country.form_of_government)",
        "get_relations(m.0143sn)",
        "get_neighbors(m.0143sn,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "which is the fictional character who lives in the planet of trek?",
      "qid": "4300742016000_grailqa",
      "source": "grailqa",
      "entities": {
        "Planet": "m.05qc_",
        "trek": "m.06mv6"
      },
      "s_expression": "(AND fictional_universe.fictional_character (JOIN fictional_universe.fictional_character.places_lived (AND (JOIN fictional_universe.fictional_setting.setting_type m.05qc_) (JOIN (R fictional_universe.fictional_universe.locations) m.06mv6))))",
      "actions": [
        "get_relations(m.05qc_)",
        "get_neighbors(m.05qc_,fictional_universe.type_of_fictional_setting.settings)",
        "get_relations(m.06mv6)",
        "get_neighbors(m.06mv6,fictional_universe.fictional_universe.locations)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,fictional_universe.fictional_setting.characters_that_have_lived_here)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.012gt9",
          "entity_name": "Sarek"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hp0z",
          "entity_name": "Tasha Yar"
        }
      ]
    },
    {
      "question": "Team owner Peter Angelos' sports team last won the World Series in what year?",
      "qid": "WebQTest-1680_d7d7c089b523d505cbe8b2bba8e56544_cwq",
      "source": "cwq",
      "entities": {
        "Peter Angelos": "m.070x3g"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.070x3g)) time.event.end_date)",
      "actions": [
        "get_relations(m.070x3g)",
        "get_neighbors(m.070x3g,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.046_p6",
          "answer_type": "Entity",
          "entity_name": "1983 World Series"
        }
      ]
    },
    {
      "question": "what is the political ideology that the people's party and the canadian federal election, 2008 follow?",
      "qid": "4302370005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Canadian federal election, 2008": "m.0b1_7g",
        "People's Party": "m.064k0m"
      },
      "s_expression": "(AND government.political_ideology (AND (JOIN government.political_ideology.political_parties (JOIN (R government.parliamentary_election.government_formed_by) m.0b1_7g)) (JOIN (R government.political_party.ideology) m.064k0m)))",
      "actions": [
        "get_relations(m.0b1_7g)",
        "get_neighbors(m.0b1_7g,government.parliamentary_election.government_formed_by)",
        "get_relations(#0)",
        "get_neighbors(#0,government.political_party.ideology)",
        "get_relations(m.064k0m)",
        "get_neighbors(m.064k0m,government.political_party.ideology)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01yqp",
          "entity_name": "Conservatism"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03g4vb",
          "entity_name": "Liberal conservatism"
        }
      ]
    },
    {
      "question": "When is the last time the the sports team at Pitt Stadium won a Superbowl?",
      "qid": "WebQTest-1523_5e35ac717c32f97bcc0e3a34f710dfd1_cwq",
      "source": "cwq",
      "entities": {
        "superbowl": "m.06x5s",
        "Pitt Stadium": "m.038_tr"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.038_tr)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.038_tr)",
        "get_neighbors(m.038_tr,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04n7r5",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLIII"
        }
      ]
    },
    {
      "question": "how many different breeds from republic of brazil have the same temperament as the manchester terrier?",
      "qid": "4303460010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Manchester Terrier": "m.074g8y",
        "republic of brazil": "m.015fr"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.015fr)) (JOIN (R biology.animal_breed.temperament) m.074g8y))))",
      "actions": [
        "get_relations(m.015fr)",
        "get_neighbors(m.015fr,biology.breed_origin.breeds_originating_here)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.074g8y)",
        "get_neighbors(m.074g8y,biology.animal_breed.temperament)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "3"
        }
      ]
    },
    {
      "question": "for the aidi and australian sheep dog breeds, how many temperaments do they have in common?",
      "qid": "3205485014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Aidi": "m.01p2gv",
        "australian sheep dog": "m.0gz2b"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds m.01p2gv) (JOIN (R biology.animal_breed.temperament) m.0gz2b))))",
      "actions": [
        "get_relations(m.01p2gv)",
        "get_neighbors(m.01p2gv,biology.animal_breed.temperament)",
        "get_relations(m.0gz2b)",
        "get_neighbors(m.0gz2b,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "what type of dish contains garlic and is common in cuisine of thailand?",
      "qid": "4301356004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Garlic": "m.0dbrl",
        "cuisine of thailand": "m.07hxn"
      },
      "s_expression": "(AND food.type_of_dish (JOIN food.type_of_dish.dishes (AND (JOIN food.dish.ingredients m.0dbrl) (JOIN (R dining.cuisine.dishes) m.07hxn))))",
      "actions": [
        "get_relations(m.0dbrl)",
        "get_neighbors(m.0dbrl,food.ingredient.dishes)",
        "get_relations(m.07hxn)",
        "get_neighbors(m.07hxn,dining.cuisine.dishes)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,food.dish.type_of_dish1)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l4q9",
          "entity_name": "Entrée"
        }
      ]
    },
    {
      "question": "What type of breast cancer did Riverwide, the composer, have?",
      "qid": "WebQTest-2014_d9a95967aed09feee456475c7d3e98b0_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "Riverwide": "m.0zh7yfz"
      },
      "s_expression": "(AND (JOIN (R medicine.notable_person_with_medical_condition.condition) (JOIN music.composer.compositions m.0zh7yfz)) (JOIN medicine.disease.parent_disease m.0qcr0))",
      "actions": [
        "get_relations(m.0zh7yfz)",
        "get_neighbors(m.0zh7yfz,music.composition.composer)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.notable_person_with_medical_condition.condition)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,medicine.disease.includes_diseases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.03z_9l",
          "answer_type": "Entity",
          "entity_name": "Meningioma"
        }
      ]
    },
    {
      "question": "physical media, which is developed by namco bandai games america, was released where?",
      "qid": "4301141012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Physical media": "m.0663y78",
        "namco bandai games america": "m.02pfymy"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.0663y78) (JOIN (R cvg.cvg_developer.game_versions_developed) m.02pfymy))))",
      "actions": [
        "get_relations(m.0663y78)",
        "get_neighbors(m.0663y78,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.02pfymy)",
        "get_neighbors(m.02pfymy,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.075g54v",
          "entity_name": "Wii/DS NA"
        }
      ]
    },
    {
      "question": "what is the camera storage type utilized by canon 5d mark ii and the digital camera with iso setting of 400?",
      "qid": "4302372015000_grailqa",
      "source": "grailqa",
      "entities": {
        "canon 5d mark ii": "m.04n7l7q",
        "400": "m.01xrf_g"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.01xrf_g)) (JOIN (R digicams.digital_camera.supported_storage_types) m.04n7l7q)))",
      "actions": [
        "get_relations(m.01xrf_g)",
        "get_neighbors(m.01xrf_g,digicams.camera_iso.cameras)",
        "get_relations(#0)",
        "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.04n7l7q)",
        "get_neighbors(m.04n7l7q,digicams.digital_camera.supported_storage_types)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01rlj7",
          "entity_name": "CompactFlash"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg0v",
          "entity_name": "Compact Flash (Type I)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg67",
          "entity_name": "Compact Flash (Type II)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04pnsxr",
          "entity_name": "UDMA"
        }
      ]
    },
    {
      "question": "What year did the sports team win the superbowl that had the fight song Seven Nation Army?",
      "qid": "WebQTrn-2136_6b1c0c0fb24a34937f450fdc16a3387b_cwq",
      "source": "cwq",
      "entities": {
        "superbowl": "m.06x5s",
        "Seven Nation Army": "m.07fpnw"
      },
      "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.fight_song m.07fpnw)) (JOIN sports.sports_championship_event.championship m.06x5s))",
      "actions": [
        "get_relations(m.07fpnw)",
        "get_neighbors(m.07fpnw,sports.fight_song.sports_team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0642vqv",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLVII"
        },
        {
          "answer_argument": "m.076yq",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXXV"
        }
      ]
    },
    {
      "question": "which tropical cyclones are in the same category with hurricane ike and affected grenada?",
      "qid": "4300198008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Hurricane Ike": "m.04jnnpy",
        "Grenada": "m.035yg"
      },
      "s_expression": "(AND meteorology.tropical_cyclone (AND (JOIN (R meteorology.tropical_cyclone_category.tropical_cyclones) (JOIN (R meteorology.tropical_cyclone.category) m.04jnnpy)) (JOIN meteorology.tropical_cyclone.affected_areas m.035yg)))",
      "actions": [
        "get_relations(m.04jnnpy)",
        "get_neighbors(m.04jnnpy,meteorology.tropical_cyclone.category)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
        "get_relations(m.035yg)",
        "get_neighbors(m.035yg,meteorology.cyclone_affected_area.cyclones)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02cz3m",
          "entity_name": "Hurricane Hazel"
        }
      ]
    },
    {
      "question": "what martial art has the same category as mongolian wrestling and has strike?",
      "qid": "4301064008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Mongolian wrestling": "m.05lx02",
        "Strike": "m.02rj0b"
      },
      "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.05lx02)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.02rj0b)))",
      "actions": [
        "get_relations(m.05lx02)",
        "get_neighbors(m.05lx02,martial_arts.martial_art.category)",
        "get_relations(#0)",
        "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
        "get_relations(m.02rj0b)",
        "get_neighbors(m.02rj0b,martial_arts.martial_art_category.martial_arts)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tm7f",
          "entity_name": "Kajukenbo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03bs3p",
          "entity_name": "Sanshou"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.041d65",
          "entity_name": "Vovinam"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07k4r",
          "entity_name": "Tai chi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01vqp5",
          "entity_name": "Systema"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09h901",
          "entity_name": "Shidōkan Karate"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hbj9",
          "entity_name": "Hapkido"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.055rn5",
          "entity_name": "Kuk Sool Won"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01qcyb",
          "entity_name": "Kalaripayattu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02618d8",
          "entity_name": "Russian All-Round Fighting"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.048yh",
          "entity_name": "Krav Maga"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b65c",
          "entity_name": "Hwa Rang Do"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.061px",
          "entity_name": "Pankration"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06jm_r",
          "entity_name": "Bartitsu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06k44z",
          "entity_name": "Modern Arnis"
        }
      ]
    },
    {
      "question": "What kind of government is Sweden, the birth country of Emanuel Lasker?",
      "qid": "WebQTest-314_3ce332b703593e71708a5604865c5758_cwq",
      "source": "cwq",
      "entities": {
        "Sweden": "m.0d0vqn",
        "Emanuel Lasker": "m.01kfm7"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0d0vqn) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
      "actions": [
        "get_relations(m.0d0vqn)",
        "get_neighbors(m.0d0vqn,location.country.form_of_government)",
        "get_relations(m.01kfm7)",
        "get_neighbors(m.01kfm7,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "what musical release is produced by pictures of lily and labelled track record?",
      "qid": "4301990001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Pictures of Lily": "m.0f3c1rg",
        "Track Record": "m.0frndt5"
      },
      "s_expression": "(AND music.release (AND (JOIN music.release.producers (JOIN (R music.recording.producer) m.0f3c1rg)) (JOIN music.release.label m.0frndt5)))",
      "actions": [
        "get_relations(m.0f3c1rg)",
        "get_neighbors(m.0f3c1rg,music.recording.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,music.producer.releases_produced)",
        "get_relations(m.0frndt5)",
        "get_neighbors(m.0frndt5,music.record_label.releases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03425nx",
          "entity_name": "Odds and Sods"
        }
      ]
    },
    {
      "question": "What was the first championship won by the team who won the 1996 NBA Finals?",
      "qid": "WebQTrn-2261_1a3384551486713473c9ac6308ea5244_cwq",
      "source": "cwq",
      "entities": {
        "1996 NBA Finals": "m.08x9jj"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.08x9jj)) time.event.start_date)",
      "actions": [
        "get_relations(m.08x9jj)",
        "get_neighbors(m.08x9jj,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.08x9qv",
          "answer_type": "Entity",
          "entity_name": "1991 NBA Finals"
        }
      ]
    },
    {
      "question": "what was the first programming language influenced by another bill venners language?",
      "qid": "4303199018000_grailqa",
      "source": "grailqa",
      "entities": {
        "Bill Venners": "m.05kh714"
      },
      "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.05kh714))) computer.programming_language.introduced)",
      "actions": [
        "get_relations(m.05kh714)",
        "get_neighbors(m.05kh714,computer.programming_language_developer.programming_languages_developed)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.influenced)",
        "get_attributes(#1)",
        "argmin(#1,computer.programming_language.introduced)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01jt82",
          "entity_name": "F#"
        }
      ]
    },
    {
      "question": "Which was the first superbowl won by the NY Giants?",
      "qid": "WebQTrn-3290_72ac7fbfb1e286e712e4b85cc0241c4e_cwq",
      "source": "cwq",
      "entities": {
        "ny giants": "m.05gg4",
        "Superbowl": "m.06x5s"
      },
      "s_expression": "(ARGMIN (AND (JOIN (R sports.sports_team.championships) m.05gg4) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.05gg4)",
        "get_neighbors(m.05gg4,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#0,#1)",
        "get_attributes(#2)",
        "argmin(#2,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.076sw",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXI"
        }
      ]
    },
    {
      "question": "how many religious texts do protestantism and lutheran church share?",
      "qid": "3206221015000_grailqa",
      "source": "grailqa",
      "entities": {
        "lutheran church": "m.04pk9",
        "Protestantism": "m.05sfs"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of m.04pk9) (JOIN (R religion.religion.texts) m.05sfs))))",
      "actions": [
        "get_relations(m.04pk9)",
        "get_neighbors(m.04pk9,religion.religion.texts)",
        "get_relations(m.05sfs)",
        "get_neighbors(m.05sfs,religion.religion.texts)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "The artist with the concert tour named LIve & More Encore died from what type of cancer?",
      "qid": "WebQTrn-2936_5661a3ace5606e76b4346efd691bb009_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "live & more encore": "m.0crgs6s"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.artist.concert_tours m.0crgs6s)) (JOIN people.cause_of_death.parent_cause_of_death m.0qcr0))",
      "actions": [
        "get_relations(m.0crgs6s)",
        "get_neighbors(m.0crgs6s,music.concert_tour.artist)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,people.cause_of_death.includes_causes_of_death)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.04p3w",
          "answer_type": "Entity",
          "entity_name": "Lung cancer"
        }
      ]
    },
    {
      "question": "In what year did the team that won the 2008 FIFA Club World Cup Final Championship first a trophy?",
      "qid": "WebQTrn-1018_7a992044f94b39edfc37ac5dcfcb3c26_cwq",
      "source": "cwq",
      "entities": {
        "2008 FIFA Club World Cup Final": "m.053nq3y"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.053nq3y)) time.event.end_date)",
      "actions": [
        "get_relations(m.053nq3y)",
        "get_neighbors(m.053nq3y,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04gk9y8",
          "answer_type": "Entity",
          "entity_name": "1976–77 FA Cup"
        }
      ]
    },
    {
      "question": "which release from the australia supports xb360?",
      "qid": "4301746006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Australia": "m.0chghy",
        "xb360": "m.02plp2"
      },
      "s_expression": "(AND cvg.game_version (AND (JOIN (R cvg.computer_game_region.versions_released_in_this_region) m.0chghy) (JOIN (R computer.computer_peripheral.supporting_game_versions) (JOIN (R business.brand.products) m.02plp2))))",
      "actions": [
        "get_relations(m.0chghy)",
        "get_neighbors(m.0chghy,cvg.computer_game_region.versions_released_in_this_region)",
        "get_relations(m.02plp2)",
        "get_neighbors(m.02plp2,business.brand.products)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.computer_peripheral.supporting_game_versions)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cmynjz",
          "entity_name": "Sonic & Sega All-Stars Racing with Banjo-Kazooie"
        }
      ]
    },
    {
      "question": "What voting system exists in the UK and in the country where Emanuel Lasker was born?",
      "qid": "WebQTrn-1923_3ce332b703593e71708a5604865c5758_cwq",
      "source": "cwq",
      "entities": {
        "UK": "m.07ssc",
        "Emanuel Lasker": "m.01kfm7"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.07ssc) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
      "actions": [
        "get_relations(m.07ssc)",
        "get_neighbors(m.07ssc,location.country.form_of_government)",
        "get_relations(m.01kfm7)",
        "get_neighbors(m.01kfm7,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "what text serves as the core of pure land and is honored by sagan practitioners?",
      "qid": "4300898003000_grailqa",
      "source": "grailqa",
      "entities": {
        "pure land": "m.01c2mz",
        "Sagan": "m.0ynxj7h"
      },
      "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.01c2mz) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.0ynxj7h))))",
      "actions": [
        "get_relations(m.01c2mz)",
        "get_neighbors(m.01c2mz,religion.religion.texts)",
        "get_relations(m.0ynxj7h)",
        "get_neighbors(m.0ynxj7h,religion.religious_practice.practice_of)",
        "get_relations(#1)",
        "get_neighbors(#1,religion.religion.texts)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04k1b0",
          "entity_name": "Amitabha Sutra"
        }
      ]
    },
    {
      "question": "what quantity of amusement park areas are there in tokyo disneyland and disney land parks?",
      "qid": "3206299009000_grailqa",
      "source": "grailqa",
      "entities": {
        "disney land": "m.02fzs",
        "Tokyo Disneyland": "m.044z1n"
      },
      "s_expression": "(COUNT (AND amusement_parks.amusement_park_area (AND (JOIN amusement_parks.amusement_park_area.parks m.02fzs) (JOIN amusement_parks.amusement_park_area.parks m.044z1n))))",
      "actions": [
        "get_relations(m.02fzs)",
        "get_neighbors(m.02fzs,amusement_parks.park.areas)",
        "get_relations(m.044z1n)",
        "get_neighbors(m.044z1n,amusement_parks.park.areas)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "5"
        }
      ]
    },
    {
      "question": "the subject of the quote: what is faith but a kind of betting or speculation after all? it should be, i bet that my redeemer liveth. spoken by angel of remembrance is what?",
      "qid": "4300443001000_grailqa",
      "source": "grailqa",
      "entities": {
        "What is faith but a kind of betting or speculation after all? It should be, I bet that my Redeemer liveth.": "m.048g4sk",
        "Angel of Remembrance": "m.0h3grm9"
      },
      "s_expression": "(AND media_common.quotation_subject (AND (JOIN (R media_common.quotation.subjects) (JOIN media_common.quotation.spoken_by_character m.0h3grm9)) (JOIN (R media_common.quotation.subjects) m.048g4sk)))",
      "actions": [
        "get_relations(m.0h3grm9)",
        "get_neighbors(m.0h3grm9,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.subjects)",
        "get_relations(m.048g4sk)",
        "get_neighbors(m.048g4sk,media_common.quotation.subjects)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02zq2",
          "entity_name": "Faith"
        }
      ]
    },
    {
      "question": "what do the breeds of splash and mullins feist share in terms of temperament?",
      "qid": "4300459004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Splash": "m.05snq1h",
        "Mullins Feist": "m.04sxbdx"
      },
      "s_expression": "(AND biology.breed_temperament (AND (JOIN (R biology.animal_breed.temperament) (JOIN (R biology.pedigreed_animal.breed) m.05snq1h)) (JOIN (R biology.animal_breed.temperament) m.04sxbdx)))",
      "actions": [
        "get_relations(m.05snq1h)",
        "get_neighbors(m.05snq1h,biology.pedigreed_animal.breed)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.04sxbdx)",
        "get_neighbors(m.04sxbdx,biology.animal_breed.temperament)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kpkld",
          "entity_name": "Intelligent"
        }
      ]
    },
    {
      "question": "Who was vice president of the subject of the film \"Young Mr. Lincoln\" when he died?",
      "qid": "WebQTrn-1777_80bc69215f6fdb6c93a8cc8494b116e9_cwq",
      "source": "cwq",
      "entities": {
        "Young Mr. Lincoln": "m.03fy0j"
      },
      "s_expression": "(ARGMAX (JOIN (R government.us_president.vice_president) (JOIN film.film_subject.films m.03fy0j)) government.us_vice_president.vice_president_number)",
      "actions": [
        "get_relations(m.03fy0j)",
        "get_neighbors(m.03fy0j,film.film.subjects)",
        "get_relations(#0)",
        "get_neighbors(#0,government.us_president.vice_president)",
        "get_attributes(#1)",
        "argmax(#1,government.us_vice_president.vice_president_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.0rmg",
          "answer_type": "Entity",
          "entity_name": "Andrew Johnson"
        }
      ]
    },
    {
      "question": "how many contents about educational were produced by the producer of on the media?",
      "qid": "4303008002000_grailqa",
      "source": "grailqa",
      "entities": {
        "educational": "m.02jfc",
        "On The Media": "m.03d53lc"
      },
      "s_expression": "(COUNT (AND broadcast.content (AND (JOIN (R broadcast.genre.content) m.02jfc) (JOIN (R broadcast.producer.produces) (JOIN broadcast.producer.produces m.03d53lc)))))",
      "actions": [
        "get_relations(m.02jfc)",
        "get_neighbors(m.02jfc,broadcast.genre.content)",
        "get_relations(m.03d53lc)",
        "get_neighbors(m.03d53lc,broadcast.content.producer)",
        "get_relations(#1)",
        "get_neighbors(#1,broadcast.producer.produces)",
        "intersection(#0,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "What year did the baseball franchise that currenly play in Citifield first win the world series?",
      "qid": "WebQTrn-2356_a9a4ca7e232c72747343065b53a00247_cwq",
      "source": "cwq",
      "entities": {
        "World Series": "m.0fjp3",
        "citifield": "m.06gwtj"
      },
      "s_expression": "(ARGMIN (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.06gwtj)) (JOIN sports.sports_championship_event.championship m.0fjp3)) time.event.start_date)",
      "actions": [
        "get_relations(m.06gwtj)",
        "get_neighbors(m.06gwtj,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.0fjp3)",
        "get_neighbors(m.0fjp3,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmin(#3,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04jg9_",
          "answer_type": "Entity",
          "entity_name": "1969 World Series"
        }
      ]
    },
    {
      "question": "there exists an olympic event that was contested officially in 1988 winter olympic games and other olympic games in lillehammer, what is it?",
      "qid": "4300161012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Lillehammer": "m.0h4qc",
        "1988 winter olympic games": "m.019n8z"
      },
      "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.0h4qc)) (JOIN olympics.olympic_event.olympic_games_contested m.019n8z)))",
      "actions": [
        "get_relations(m.0h4qc)",
        "get_neighbors(m.0h4qc,olympics.olympic_host_city.olympics_hosted)",
        "get_relations(#0)",
        "get_neighbors(#0,olympics.olympic_games.events)",
        "get_relations(m.019n8z)",
        "get_neighbors(m.019n8z,olympics.olympic_games.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_v0",
          "entity_name": "Women's 1000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqf4",
          "entity_name": "Men's Individual Normal Hill"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_t4",
          "entity_name": "Women's 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqft",
          "entity_name": "Women's 5000 m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07nxf_t",
          "entity_name": "Men's Cross-country, 50km"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpww",
          "entity_name": "Men's Downhill"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpx1",
          "entity_name": "Women's Slalom"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpxf",
          "entity_name": "Women's Downhill"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpyc",
          "entity_name": "Women's Giant Slalom"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqcn",
          "entity_name": "Women's Singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqdl",
          "entity_name": "Men's 500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqf_",
          "entity_name": "Men's 10000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_xm",
          "entity_name": "Men's 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zhzln",
          "entity_name": "Men's 5000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07nxg0q",
          "entity_name": "Men's Nordic Combined, Individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07r8jsc",
          "entity_name": "Men's Cross-country, 30km"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07rcjwr",
          "entity_name": "Men's Large hill individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bj4fg7",
          "entity_name": "Men's singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07sgjwh",
          "entity_name": "Women's 5km"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wq88",
          "entity_name": "Men's 20 km Individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zj03w",
          "entity_name": "Women's Singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zj032",
          "entity_name": "Men's Singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqfq",
          "entity_name": "Women's 3000 m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0773ht9",
          "entity_name": "Women's Combined"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_rx",
          "entity_name": "Women's 500 m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_x2",
          "entity_name": "Men's 1000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpx7",
          "entity_name": "Women's Super-G"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0773ht3",
          "entity_name": "Men's Combined"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpy5",
          "entity_name": "Men's 10 km Sprint"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpwp",
          "entity_name": "Men's Super-G"
        }
      ]
    },
    {
      "question": "what storage type is supported by eos 5d mark ii and those with color filter array of bayer?",
      "qid": "4302099003000_grailqa",
      "source": "grailqa",
      "entities": {
        "eos 5d mark ii": "m.04n7l7q",
        "bayer": "m.02r8js"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN digicams.camera_storage_type.compatible_cameras m.04n7l7q) (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.color_filter_array_type m.02r8js))))",
      "actions": [
        "get_relations(m.04n7l7q)",
        "get_neighbors(m.04n7l7q,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.02r8js)",
        "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.supported_storage_types)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01rlj7",
          "entity_name": "CompactFlash"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg0v",
          "entity_name": "Compact Flash (Type I)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg67",
          "entity_name": "Compact Flash (Type II)"
        }
      ]
    },
    {
      "question": "Find the producer of The Globe Sessions, what type of breast cancer did she have?",
      "qid": "WebQTest-2014_717a03a7d916cfd419b9b0087004ef91_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "The Globe Sessions": "m.01hdsrw"
      },
      "s_expression": "(AND (JOIN (R medicine.notable_person_with_medical_condition.condition) (JOIN music.producer.releases_produced m.01hdsrw)) (JOIN medicine.disease.parent_disease m.0qcr0))",
      "actions": [
        "get_relations(m.01hdsrw)",
        "get_neighbors(m.01hdsrw,music.release.producers)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.notable_person_with_medical_condition.condition)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,medicine.disease.includes_diseases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.03z_9l",
          "answer_type": "Entity",
          "entity_name": "Meningioma"
        }
      ]
    },
    {
      "question": "how many religious practices are there that practices sunni islam and eastern christians?",
      "qid": "3204573012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Sunni Islam": "m.078tg",
        "eastern christians": "m.0blk0"
      },
      "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.078tg) (JOIN (R religion.religion.practices) m.0blk0))))",
      "actions": [
        "get_relations(m.078tg)",
        "get_neighbors(m.078tg,religion.religion.practices)",
        "get_relations(m.0blk0)",
        "get_neighbors(m.0blk0,religion.religion.practices)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "What is the time zone near the San Francisco International Airport in the US?",
      "qid": "WebQTrn-193_18a4999497ccd2fae27570283a228147_cwq",
      "source": "cwq",
      "entities": {
        "US": "m.09c7w0",
        "San Francisco International Airport": "m.01l4xk"
      },
      "s_expression": "(AND (JOIN (R location.location.time_zones) m.09c7w0) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.01l4xk)))",
      "actions": [
        "get_relations(m.09c7w0)",
        "get_neighbors(m.09c7w0,location.location.time_zones)",
        "get_relations(m.01l4xk)",
        "get_neighbors(m.01l4xk,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02lcqs",
          "answer_type": "Entity",
          "entity_name": "Pacific Time Zone"
        }
      ]
    },
    {
      "question": "When did the sports team whose arena is The Palace of Auburn Hills las win the championship?",
      "qid": "WebQTest-895_9bcc6cb26c1da1b9fd18302b0907fd2a_cwq",
      "source": "cwq",
      "entities": {
        "The Palace of Auburn Hills": "m.02xsc2"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.02xsc2)) time.event.start_date)",
      "actions": [
        "get_relations(m.02xsc2)",
        "get_neighbors(m.02xsc2,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.07p0zz",
          "answer_type": "Entity",
          "entity_name": "2004 NBA Finals"
        }
      ]
    },
    {
      "question": "What was Pink the artist, that recorded Proper Education, first album?",
      "qid": "WebQTest-954_71443db735662d0335de6fdb3f89ea68_cwq",
      "source": "cwq",
      "entities": {
        "Proper Education": "m.0dp973n"
      },
      "s_expression": "(ARGMIN (JOIN (R music.artist.album) (JOIN music.featured_artist.recordings m.0dp973n)) music.album.release_date)",
      "actions": [
        "get_relations(m.0dp973n)",
        "get_neighbors(m.0dp973n,music.recording.featured_artists)",
        "get_relations(#0)",
        "get_neighbors(#0,music.artist.album)",
        "get_attributes(#1)",
        "argmin(#1,music.album.release_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0h3bhb1",
          "answer_type": "Entity",
          "entity_name": "Psychedelic Session-compilation album"
        }
      ]
    },
    {
      "question": "which version released in the north american continent supports the xb360?",
      "qid": "4301746005000_grailqa",
      "source": "grailqa",
      "entities": {
        "north american continent": "m.059g4",
        "xb360": "m.02plp2"
      },
      "s_expression": "(AND cvg.game_version (AND (JOIN (R cvg.computer_game_region.versions_released_in_this_region) m.059g4) (JOIN (R computer.computer_peripheral.supporting_game_versions) (JOIN (R business.brand.products) m.02plp2))))",
      "actions": [
        "get_relations(m.059g4)",
        "get_neighbors(m.059g4,cvg.computer_game_region.versions_released_in_this_region)",
        "get_relations(m.02plp2)",
        "get_neighbors(m.02plp2,business.brand.products)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.computer_peripheral.supporting_game_versions)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cmynjz",
          "entity_name": "Sonic & Sega All-Stars Racing with Banjo-Kazooie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cn1dzn",
          "entity_name": "Sonic Free Riders"
        }
      ]
    },
    {
      "question": "the bipropellant rocket engine with kerosene and gas-generator cycle is designed by who?",
      "qid": "4300753009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Gas-generator cycle": "m.04qqvv",
        "Kerosene": "m.04bhf"
      },
      "s_expression": "(AND spaceflight.rocket_engine_designer (JOIN spaceflight.rocket_engine_designer.rocket_engines (AND (JOIN (R spaceflight.rocket_engine_cycle.rocket_engines) m.04qqvv) (JOIN (R spaceflight.rocket_engine_fuel.rocket_engines) m.04bhf))))",
      "actions": [
        "get_relations(m.04qqvv)",
        "get_neighbors(m.04qqvv,spaceflight.rocket_engine_cycle.rocket_engines)",
        "get_relations(m.04bhf)",
        "get_neighbors(m.04bhf,spaceflight.rocket_engine_fuel.rocket_engines)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,spaceflight.rocket_engine.designed_by)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02p_3s6",
          "entity_name": "NPO Energomash"
        }
      ]
    },
    {
      "question": "What type of voting system is used in both Japan and the location in which Baldur von Schirach was born?",
      "qid": "WebQTrn-1545_3f76d491e90682cc29e3de2546e1f9c5_cwq",
      "source": "cwq",
      "entities": {
        "Japan": "m.03_3d",
        "Baldur von Schirach": "m.0143sn"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.03_3d) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.0143sn)))",
      "actions": [
        "get_relations(m.03_3d)",
        "get_neighbors(m.03_3d,location.country.form_of_government)",
        "get_relations(m.0143sn)",
        "get_neighbors(m.0143sn,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "What was the last Superbowl won by the team owned by Jerry Jones?",
      "qid": "WebQTest-994_5e43a21c08076aabc07f1a6fd6ae6bb9_cwq",
      "source": "cwq",
      "entities": {
        "Superbowl": "m.06x5s",
        "Jerry Jones": "m.016b9c"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.016b9c)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.016b9c)",
        "get_neighbors(m.016b9c,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.076wz",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXX"
        }
      ]
    },
    {
      "question": "In which USA timezone can the San Carlos Airport be found?",
      "qid": "WebQTest-1802_1b45dd54d7f220b2c4ce6e4f9874b64a_cwq",
      "source": "cwq",
      "entities": {
        "us": "m.09c7w0",
        "San Carlos Airport": "m.01ngqj"
      },
      "s_expression": "(AND (JOIN (R location.location.time_zones) m.09c7w0) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.01ngqj)))",
      "actions": [
        "get_relations(m.09c7w0)",
        "get_neighbors(m.09c7w0,location.location.time_zones)",
        "get_relations(m.01ngqj)",
        "get_neighbors(m.01ngqj,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02lcqs"
        }
      ]
    },
    {
      "question": "name a cloud within the family a (high-level) cloud family that has the maximum minimum altitude?",
      "qid": "4303227002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Family A (high-level)": "m.01xtbgh"
      },
      "s_expression": "(ARGMAX (AND meteorology.cloud (JOIN (R meteorology.cloud.cloud_family) (JOIN meteorology.cloud.classification m.01xtbgh))) meteorology.cloud.minimum_altitude)",
      "actions": [
        "get_relations(m.01xtbgh)",
        "get_neighbors(m.01xtbgh,meteorology.cloud_classification.clouds)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.cloud.cloud_family)",
        "get_attributes(#1)",
        "argmax(#1,meteorology.cloud.minimum_altitude)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cs96",
          "entity_name": "Cirrus"
        }
      ]
    },
    {
      "question": "how many spacecrafts did national aeronautic and space administration and esa make?",
      "qid": "3201449006000_grailqa",
      "source": "grailqa",
      "entities": {
        "national aeronautic and space administration": "m.05f4p",
        "esa": "m.02t63"
      },
      "s_expression": "(COUNT (AND spaceflight.spacecraft (AND (JOIN spaceflight.spacecraft.manufacturer m.05f4p) (JOIN spaceflight.spacecraft.manufacturer m.02t63))))",
      "actions": [
        "get_relations(m.05f4p)",
        "get_neighbors(m.05f4p,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "get_relations(m.02t63)",
        "get_neighbors(m.02t63,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "loughborough university employee patrick chabal works in what dept?",
      "qid": "4301362011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Patrick Chabal": "m.05vrcq7",
        "Loughborough University": "m.01xvlc"
      },
      "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.05vrcq7)) (JOIN (R education.university.departments) m.01xvlc)))",
      "actions": [
        "get_relations(m.05vrcq7)",
        "get_neighbors(m.05vrcq7,education.academic.research_areas)",
        "get_relations(#0)",
        "get_neighbors(#0,education.field_of_study.academic_departments)",
        "get_relations(m.01xvlc)",
        "get_neighbors(m.01xvlc,education.university.departments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03d1c7y",
          "entity_name": "Loughborough University Department of Politics, History and International Relations"
        }
      ]
    },
    {
      "question": "how many active websites does media tools ltd. currently own?",
      "qid": "3206340009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Active": "m.02hsn4g",
        "Media Tools Ltd.": "m.01285gc2"
      },
      "s_expression": "(COUNT (AND internet.website (AND (JOIN internet.website.status m.02hsn4g) (JOIN (R internet.website_owner.websites_owned) m.01285gc2))))",
      "actions": [
        "get_relations(m.02hsn4g)",
        "get_neighbors(m.02hsn4g,internet.website_status.sites)",
        "get_relations(m.01285gc2)",
        "get_neighbors(m.01285gc2,internet.website_owner.websites_owned)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "What was the last superbowl won by the team that plays in Lucas Oil Stadium?",
      "qid": "WebQTrn-1771_1a580a0b72b0806c7ed3e7560280233e_cwq",
      "source": "cwq",
      "entities": {
        "Superbowl": "m.06x5s",
        "Lucas Oil Stadium": "m.080hb9"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.080hb9)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.080hb9)",
        "get_neighbors(m.080hb9,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04k5qm",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLI"
        }
      ]
    },
    {
      "question": "which song is the longest song of the complete reprise studio recordings (disc 13) ?",
      "qid": "4301467014000_grailqa",
      "source": "grailqa",
      "entities": {
        "The Complete Reprise Studio Recordings (disc 13)": "m.0bfd_1f"
      },
      "s_expression": "(ARGMAX (AND music.recording (JOIN (R music.release.track) (JOIN (R music.album.releases) m.0bfd_1f))) music.recording.length)",
      "actions": [
        "get_relations(m.0bfd_1f)",
        "get_neighbors(m.0bfd_1f,music.album.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.track)",
        "get_attributes(#1)",
        "argmax(#1,music.recording.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0tvwjc",
          "entity_name": "Little Green Apples"
        }
      ]
    },
    {
      "question": "what is the exact number of automotive classes which are examples of chrysler valiant and seat exeo?",
      "qid": "3206121015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Chrysler Valiant": "m.03jgjh",
        "SEAT Exeo": "m.04n7f9k"
      },
      "s_expression": "(COUNT (AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples m.03jgjh) (JOIN automotive.automotive_class.examples m.04n7f9k))))",
      "actions": [
        "get_relations(m.03jgjh)",
        "get_neighbors(m.03jgjh,automotive.model.automotive_class)",
        "get_relations(m.04n7f9k)",
        "get_neighbors(m.04n7f9k,automotive.model.automotive_class)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "who is the founding figure of the religion featuredholy family's day, that is part of abrahamic faiths?",
      "qid": "4302278014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Holy Family's Day": "m.0_l_bl6",
        "abrahamic faiths": "m.0f_h6"
      },
      "s_expression": "(AND religion.founding_figure (JOIN (R religion.religion.founding_figures) (AND (JOIN (R time.holiday.featured_in_religions) m.0_l_bl6) (JOIN religion.religion.is_part_of m.0f_h6))))",
      "actions": [
        "get_relations(m.0_l_bl6)",
        "get_neighbors(m.0_l_bl6,time.holiday.featured_in_religions)",
        "get_relations(m.0f_h6)",
        "get_neighbors(m.0f_h6,religion.religion.includes)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,religion.religion.founding_figures)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.060nc",
          "entity_name": "Paul the Apostle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045m1_",
          "entity_name": "Jesus Christ"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.071wp",
          "entity_name": "Saint Peter"
        }
      ]
    },
    {
      "question": "what other rocket did the manufacturer of zenit-2 and zenit create?",
      "qid": "4300129016000_grailqa",
      "source": "grailqa",
      "entities": {
        "Zenit-2": "m.05t0zhb",
        "Zenit": "m.033xpj"
      },
      "s_expression": "(AND spaceflight.rocket (JOIN spaceflight.rocket.manufacturer (AND (JOIN (R spaceflight.rocket.manufacturer) m.05t0zhb) (JOIN spaceflight.rocket_manufacturer.rockets_manufactured m.033xpj))))",
      "actions": [
        "get_relations(m.05t0zhb)",
        "get_neighbors(m.05t0zhb,spaceflight.rocket.manufacturer)",
        "get_relations(m.033xpj)",
        "get_neighbors(m.033xpj,spaceflight.rocket.manufacturer)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,spaceflight.rocket_manufacturer.rockets_manufactured)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0nbm4x1",
          "entity_name": "Zenit 3"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03mvcl",
          "entity_name": "Kosmos-3M"
        }
      ]
    },
    {
      "question": "The team with a mascot named Miles plays where?",
      "qid": "WebQTrn-2684_7621d2b69f15f44aba9e557f4af9764c_cwq",
      "source": "cwq",
      "entities": {
        "Miles": "m.027l54x"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.team_mascot m.027l54x)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.027l54x)",
        "get_neighbors(m.027l54x,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.02hxv8",
          "answer_type": "Entity",
          "entity_name": "Sports Authority Field at Mile High"
        }
      ]
    },
    {
      "question": "What is there to see in Downtown Chicago, and what stadium to the Cubs play in?",
      "qid": "WebQTrn-825_8dbed37f136c0e3c8dc420981aeb3660_cwq",
      "source": "cwq",
      "entities": {
        "Chicago": "m.01_d4",
        "cubs": "m.01yjl"
      },
      "s_expression": "(AND (JOIN (R travel.travel_destination.tourist_attractions) m.01_d4) (AND (JOIN location.location.containedby m.01_d4) (JOIN sports.sports_facility.teams m.01yjl)))",
      "actions": [
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,travel.travel_destination.tourist_attractions)",
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,location.location.contains)",
        "get_relations(m.01yjl)",
        "get_neighbors(m.01yjl,sports.sports_team.arena_stadium)",
        "intersection(#1,#2)",
        "intersection(#0,#3)"
      ],
      "answer": [
        {
          "answer_argument": "m.0b0sh",
          "answer_type": "Entity",
          "entity_name": "Wrigley Field"
        }
      ]
    },
    {
      "question": "how many amusement park areas are there in tokyo disneyland and disneyland park parks?",
      "qid": "3206299007000_grailqa",
      "source": "grailqa",
      "entities": {
        "disneyland park": "m.02fzs",
        "Tokyo Disneyland": "m.044z1n"
      },
      "s_expression": "(COUNT (AND amusement_parks.amusement_park_area (AND (JOIN amusement_parks.amusement_park_area.parks m.02fzs) (JOIN amusement_parks.amusement_park_area.parks m.044z1n))))",
      "actions": [
        "get_relations(m.02fzs)",
        "get_neighbors(m.02fzs,amusement_parks.park.areas)",
        "get_relations(m.044z1n)",
        "get_neighbors(m.044z1n,amusement_parks.park.areas)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "5"
        }
      ]
    },
    {
      "question": "designing a bipropellant rocket engine with methane and staged combustion cycle describes what rocket engine designer?",
      "qid": "4300753000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Staged combustion cycle": "m.04qqmt",
        "Methane": "m.04ydh"
      },
      "s_expression": "(AND spaceflight.rocket_engine_designer (JOIN spaceflight.rocket_engine_designer.rocket_engines (AND (JOIN (R spaceflight.rocket_engine_cycle.rocket_engines) m.04qqmt) (JOIN (R spaceflight.rocket_engine_fuel.rocket_engines) m.04ydh))))",
      "actions": [
        "get_relations(m.04qqmt)",
        "get_neighbors(m.04qqmt,spaceflight.rocket_engine_cycle.rocket_engines)",
        "get_relations(m.04ydh)",
        "get_neighbors(m.04ydh,spaceflight.rocket_engine_fuel.rocket_engines)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,spaceflight.rocket_engine.designed_by)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02p_3s6",
          "entity_name": "NPO Energomash"
        }
      ]
    },
    {
      "question": "what martial art is in the same category as kuk sool won and has grappling?",
      "qid": "4301064005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Kuk Sool Won": "m.055rn5",
        "Grappling": "m.039cp"
      },
      "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.055rn5)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.039cp)))",
      "actions": [
        "get_relations(m.055rn5)",
        "get_neighbors(m.055rn5,martial_arts.martial_art.category)",
        "get_relations(#0)",
        "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
        "get_relations(m.039cp)",
        "get_neighbors(m.039cp,martial_arts.martial_art_category.martial_arts)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tm7f",
          "entity_name": "Kajukenbo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03bs3p",
          "entity_name": "Sanshou"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.041d65",
          "entity_name": "Vovinam"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07k4r",
          "entity_name": "Tai chi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01vqp5",
          "entity_name": "Systema"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09h901",
          "entity_name": "Shidōkan Karate"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hbj9",
          "entity_name": "Hapkido"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01qcyb",
          "entity_name": "Kalaripayattu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02618d8",
          "entity_name": "Russian All-Round Fighting"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.048yh",
          "entity_name": "Krav Maga"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b65c",
          "entity_name": "Hwa Rang Do"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.061px",
          "entity_name": "Pankration"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06jm_r",
          "entity_name": "Bartitsu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06k44z",
          "entity_name": "Modern Arnis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0n18n",
          "entity_name": "Daitō-ryū Aiki-jūjutsu"
        }
      ]
    },
    {
      "question": "who is the fictional character that resides in city of universe?",
      "qid": "4300742006000_grailqa",
      "source": "grailqa",
      "entities": {
        "City": "m.01n32",
        "universe": "m.01q_ks"
      },
      "s_expression": "(AND fictional_universe.fictional_character (JOIN fictional_universe.fictional_character.places_lived (AND (JOIN fictional_universe.fictional_setting.setting_type m.01n32) (JOIN (R fictional_universe.fictional_universe.locations) m.01q_ks))))",
      "actions": [
        "get_relations(m.01n32)",
        "get_neighbors(m.01n32,fictional_universe.type_of_fictional_setting.settings)",
        "get_relations(m.01q_ks)",
        "get_neighbors(m.01q_ks,fictional_universe.fictional_universe.locations)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,fictional_universe.fictional_setting.characters_that_have_lived_here)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01d5g",
          "entity_name": "Bruce Wayne"
        }
      ]
    },
    {
      "question": "what political ideology do the western canada concept party of british columbia and the australian federal election, 2004 follow?",
      "qid": "4302370011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Australian federal election, 2004": "m.02br3q",
        "Western Canada Concept Party of British Columbia": "m.02s4q3"
      },
      "s_expression": "(AND government.political_ideology (AND (JOIN government.political_ideology.political_parties (JOIN (R government.parliamentary_election.government_formed_by) m.02br3q)) (JOIN (R government.political_party.ideology) m.02s4q3)))",
      "actions": [
        "get_relations(m.02br3q)",
        "get_neighbors(m.02br3q,government.parliamentary_election.government_formed_by)",
        "get_relations(#0)",
        "get_neighbors(#0,government.political_party.ideology)",
        "get_relations(m.02s4q3)",
        "get_neighbors(m.02s4q3,government.political_party.ideology)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01yqp",
          "entity_name": "Conservatism"
        }
      ]
    },
    {
      "question": "what content does northwest public radio and the producer of taylor made piano: a jazz history produce?",
      "qid": "4300832014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Taylor Made Piano: A Jazz History": "m.05v20r_",
        "Northwest Public Radio": "m.03d6t15"
      },
      "s_expression": "(AND broadcast.content (AND (JOIN broadcast.content.producer (JOIN broadcast.producer.produces m.05v20r_)) (JOIN broadcast.content.producer m.03d6t15)))",
      "actions": [
        "get_relations(m.05v20r_)",
        "get_neighbors(m.05v20r_,broadcast.content.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,broadcast.producer.produces)",
        "get_relations(m.03d6t15)",
        "get_neighbors(m.03d6t15,broadcast.producer.produces)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03d6sx9",
          "entity_name": "Northwest Public Radio NPR Podcast"
        }
      ]
    },
    {
      "question": "matrimony practitioners honor which core text of eastern christians?",
      "qid": "4300898002000_grailqa",
      "source": "grailqa",
      "entities": {
        "eastern christians": "m.0blk0",
        "matrimony": "m.0238f7"
      },
      "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.0blk0) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.0238f7))))",
      "actions": [
        "get_relations(m.0blk0)",
        "get_neighbors(m.0blk0,religion.religion.texts)",
        "get_relations(m.0238f7)",
        "get_neighbors(m.0238f7,religion.religious_practice.practice_of)",
        "get_relations(#1)",
        "get_neighbors(#1,religion.religion.texts)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.015j7",
          "entity_name": "The Bible"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05crg",
          "entity_name": "New Testament"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05ld9",
          "entity_name": "Old Testament"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01dfl",
          "entity_name": "Book of Nehemiah"
        }
      ]
    },
    {
      "question": "what is the name of the religion that is part of syncretism and has same practices with hinduism?",
      "qid": "4300140012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Syncretism": "m.0r8kd4z",
        "Hinduism": "m.03j6c"
      },
      "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.03j6c)) (JOIN religion.religion.is_part_of m.0r8kd4z)))",
      "actions": [
        "get_relations(m.03j6c)",
        "get_neighbors(m.03j6c,religion.religion.practices)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religious_practice.practice_of)",
        "get_relations(m.0r8kd4z)",
        "get_neighbors(m.0r8kd4z,religion.religion.includes)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gvx",
          "entity_name": "Taoism"
        }
      ]
    },
    {
      "question": "what museums share their type with the vatican museums and royal museum of fine arts antwerp?",
      "qid": "5400031012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Vatican Museums": "m.01hfkb",
        "Royal Museum of Fine Arts Antwerp": "m.0fl75s"
      },
      "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.01hfkb) (JOIN architecture.type_of_museum.museums m.0fl75s)))))",
      "actions": [
        "get_relations(m.01hfkb)",
        "get_neighbors(m.01hfkb,architecture.museum.type_of_museum)",
        "get_relations(m.0fl75s)",
        "get_neighbors(m.0fl75s,architecture.museum.type_of_museum)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,architecture.type_of_museum.museums)",
        "get_relations(#3)",
        "get_neighbors(#3,architecture.museum.type_of_museum)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gz",
          "entity_name": "Modern art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c9td2",
          "entity_name": "National museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9jkk",
          "entity_name": "Architecture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgh_k",
          "entity_name": "History museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgjgh",
          "entity_name": "Natural history museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0jvjpx6",
          "entity_name": "Antiquities museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026w5hv",
          "entity_name": "Contemporary art gallery"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pn3n6",
          "entity_name": "Historic house museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0528d17",
          "entity_name": "Photography Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kt8qr",
          "entity_name": "Culture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gt",
          "entity_name": "Archaeology museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059x_pp",
          "entity_name": "Archaeological Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wvyw7",
          "entity_name": "Design museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027v0wz",
          "entity_name": "University museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059vqps",
          "entity_name": "Ancient Art Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9gbh",
          "entity_name": "Jewish museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j58y",
          "entity_name": "Science museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0w_y7rb",
          "entity_name": "Asian art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99t0",
          "entity_name": "Decorative art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0djx8f",
          "entity_name": "Children's museum"
        }
      ]
    },
    {
      "question": "how many active websites are owned by raw story media inc.?",
      "qid": "3206340010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Active": "m.02hsn4g",
        "Raw Story Media Inc.": "m.0j4njz2"
      },
      "s_expression": "(COUNT (AND internet.website (AND (JOIN internet.website.status m.02hsn4g) (JOIN (R internet.website_owner.websites_owned) m.0j4njz2))))",
      "actions": [
        "get_relations(m.02hsn4g)",
        "get_neighbors(m.02hsn4g,internet.website_status.sites)",
        "get_relations(m.0j4njz2)",
        "get_neighbors(m.0j4njz2,internet.website_owner.websites_owned)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "Which country of Sahel does the Niger River flow through that contains the Kano Emirate Council?",
      "qid": "WebQTest-1748_585c717aaf67fbced8aaaee42eedb591_cwq",
      "source": "cwq",
      "entities": {
        "Niger River": "m.05csx",
        "Sahel": "m.0l5_l",
        "Kano Emirate Council": "m.010fbxn6"
      },
      "s_expression": "(AND location.country (AND (JOIN (R location.location.partially_containedby) m.05csx) (AND (JOIN location.location.partially_contains m.0l5_l) (JOIN location.country.administrative_divisions m.010fbxn6))))",
      "actions": [
        "get_relations(m.05csx)",
        "get_neighbors(m.05csx,location.location.partially_containedby)",
        "get_relations(m.0l5_l)",
        "get_neighbors(m.0l5_l,location.location.partially_containedby)",
        "get_relations(m.010fbxn6)",
        "get_neighbors(m.010fbxn6,location.administrative_division.country)",
        "intersection(#1,#2)",
        "intersection(#0,#3)"
      ],
      "answer": [
        {
          "answer_argument": "m.05cgv",
          "answer_type": "Entity",
          "entity_name": "Nigeria"
        }
      ]
    },
    {
      "question": "there are how many exhibition subjects in roger hiorns at corvi-mora?",
      "qid": "4302933005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Roger Hiorns at Corvi-Mora": "m.0ypkvrg"
      },
      "s_expression": "(COUNT (AND exhibitions.exhibition_subject (JOIN (R exhibitions.exhibition.subjects) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) (JOIN (R exhibitions.exhibition.exhibition_types) m.0ypkvrg)))))",
      "actions": [
        "get_relations(m.0ypkvrg)",
        "get_neighbors(m.0ypkvrg,exhibitions.exhibition.exhibition_types)",
        "get_relations(#0)",
        "get_neighbors(#0,exhibitions.type_of_exhibition.exhibitions_of_this_type)",
        "get_relations(#1)",
        "get_neighbors(#1,exhibitions.exhibition.subjects)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "602"
        }
      ]
    },
    {
      "question": "what number of camera iso capability are utilized in the iso setting by canon powershot a580 and olympus fe-350?",
      "qid": "3205827002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Canon Powershot A580": "m.04wjfzv",
        "Olympus FE-350": "m.03q2pdl"
      },
      "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.04wjfzv) (JOIN (R digicams.digital_camera.iso_setting) m.03q2pdl))))",
      "actions": [
        "get_relations(m.04wjfzv)",
        "get_neighbors(m.04wjfzv,digicams.digital_camera.iso_setting)",
        "get_relations(m.03q2pdl)",
        "get_neighbors(m.03q2pdl,digicams.digital_camera.iso_setting)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "5"
        }
      ]
    },
    {
      "question": "how many programming language paradigms are there for setl and yoix?",
      "qid": "3205793008000_grailqa",
      "source": "grailqa",
      "entities": {
        "SETL": "m.03ppzh",
        "Yoix": "m.06z3b2"
      },
      "s_expression": "(COUNT (AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.03ppzh) (JOIN computer.programming_language_paradigm.languages m.06z3b2))))",
      "actions": [
        "get_relations(m.03ppzh)",
        "get_neighbors(m.03ppzh,computer.programming_language.language_paradigms)",
        "get_relations(m.06z3b2)",
        "get_neighbors(m.06z3b2,computer.programming_language.language_paradigms)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "3"
        }
      ]
    },
    {
      "question": "bahamas has been affected by which cyclones in the same category as hurricane gloria?",
      "qid": "4300198010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Hurricane Gloria": "m.03wcnw",
        "Bahamas": "m.0160w"
      },
      "s_expression": "(AND meteorology.tropical_cyclone (AND (JOIN (R meteorology.tropical_cyclone_category.tropical_cyclones) (JOIN (R meteorology.tropical_cyclone.category) m.03wcnw)) (JOIN meteorology.tropical_cyclone.affected_areas m.0160w)))",
      "actions": [
        "get_relations(m.03wcnw)",
        "get_neighbors(m.03wcnw,meteorology.tropical_cyclone.category)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
        "get_relations(m.0160w)",
        "get_neighbors(m.0160w,meteorology.cyclone_affected_area.cyclones)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01vnsr",
          "entity_name": "1900 Galveston hurricane"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02cz3m",
          "entity_name": "Hurricane Hazel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04jnnpy",
          "entity_name": "Hurricane Ike"
        }
      ]
    },
    {
      "question": "Which stadium does the team that claimed the 2006 NFC Championship play in?",
      "qid": "WebQTest-784_f7e233af2bbc4c922ca26bdbe42e2fad_cwq",
      "source": "cwq",
      "entities": {
        "2006 nfc championship": "m.0_gv21m"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.championships m.0_gv21m)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.0_gv21m)",
        "get_neighbors(m.0_gv21m,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.01db_j",
          "answer_type": "Entity",
          "entity_name": "CenturyLink Field"
        }
      ]
    },
    {
      "question": "What type of cancer did the artist who recorded No Deputy died from?",
      "qid": "WebQTrn-3531_b23b3c6c453f9cc1aaad683c389c0a76_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "No Deputy": "m.0122g58h"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.featured_artist.recordings m.0122g58h)) (JOIN people.cause_of_death.parent_cause_of_death m.0qcr0))",
      "actions": [
        "get_relations(m.0122g58h)",
        "get_neighbors(m.0122g58h,music.recording.featured_artists)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,people.cause_of_death.includes_causes_of_death)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.046wcr",
          "answer_type": "Entity",
          "entity_name": "Acral lentiginous melanoma"
        },
        {
          "answer_argument": "m.04kndz2",
          "answer_type": "Entity",
          "entity_name": "Metastatic Melanoma"
        }
      ]
    },
    {
      "question": "how many active websites does raw story media inc. own?",
      "qid": "3206340015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Active": "m.02hsn4g",
        "Raw Story Media Inc.": "m.0j4njz2"
      },
      "s_expression": "(COUNT (AND internet.website (AND (JOIN internet.website.status m.02hsn4g) (JOIN (R internet.website_owner.websites_owned) m.0j4njz2))))",
      "actions": [
        "get_relations(m.02hsn4g)",
        "get_neighbors(m.02hsn4g,internet.website_status.sites)",
        "get_relations(m.0j4njz2)",
        "get_neighbors(m.0j4njz2,internet.website_owner.websites_owned)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "Where will Euro 2012 be and is it the same place that the publisher of the book Without End was born?",
      "qid": "WebQTrn-1206_713dda38bbe5ea8fe852a72a1b44f067_cwq",
      "source": "cwq",
      "entities": {
        "euro 2012": "m.06t1s0",
        "Without End": "m.04xq3nb"
      },
      "s_expression": "(AND (JOIN (R time.event.locations) m.06t1s0) (JOIN location.location.people_born_here (JOIN book.author.book_editions_published m.04xq3nb)))",
      "actions": [
        "get_relations(m.06t1s0)",
        "get_neighbors(m.06t1s0,time.event.locations)",
        "get_relations(m.04xq3nb)",
        "get_neighbors(m.04xq3nb,book.book_edition.author_editor)",
        "get_relations(#1)",
        "get_neighbors(#1,people.person.place_of_birth)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0d7_n",
          "answer_type": "Entity",
          "entity_name": "Lviv"
        }
      ]
    },
    {
      "question": "which music was released under the dicristina stair builders label by the artist bulchenska ratchenitsa?",
      "qid": "4301990004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Bulchenska Ratchenitsa": "m.0132v2cl",
        "DiCristina Stair Builders": "m.0dmhlkl"
      },
      "s_expression": "(AND music.release (AND (JOIN music.release.producers (JOIN (R music.recording.producer) m.0132v2cl)) (JOIN music.release.label m.0dmhlkl)))",
      "actions": [
        "get_relations(m.0132v2cl)",
        "get_neighbors(m.0132v2cl,music.recording.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,music.producer.releases_produced)",
        "get_relations(m.0dmhlkl)",
        "get_neighbors(m.0dmhlkl,music.record_label.releases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.037s968",
          "entity_name": "Just Another Diamond Day"
        }
      ]
    },
    {
      "question": "what is the musical recording with maximum length and is a track included in the complete reprise studio recordings (disc 13)?",
      "qid": "4301467012000_grailqa",
      "source": "grailqa",
      "entities": {
        "The Complete Reprise Studio Recordings (disc 13)": "m.0bfd_1f"
      },
      "s_expression": "(ARGMAX (AND music.recording (JOIN (R music.release.track) (JOIN (R music.album.releases) m.0bfd_1f))) music.recording.length)",
      "actions": [
        "get_relations(m.0bfd_1f)",
        "get_neighbors(m.0bfd_1f,music.album.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.track)",
        "get_attributes(#1)",
        "argmax(#1,music.recording.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0tvwjc",
          "entity_name": "Little Green Apples"
        }
      ]
    },
    {
      "question": "which is the number of automotive classes which are examples of mazda and pilot?",
      "qid": "3206121011000_grailqa",
      "source": "grailqa",
      "entities": {
        "mazda": "m.067msv",
        "pilot": "m.04grkv"
      },
      "s_expression": "(COUNT (AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples m.067msv) (JOIN automotive.automotive_class.examples m.04grkv))))",
      "actions": [
        "get_relations(m.067msv)",
        "get_neighbors(m.067msv,automotive.model.automotive_class)",
        "get_relations(m.04grkv)",
        "get_neighbors(m.04grkv,automotive.model.automotive_class)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "What kind of guitar is played by the lyricist for \"Go Your Own Way\"?",
      "qid": "WebQTrn-3122_8f3c2c4b6abf0fcf393ae9281b1b934b_cwq",
      "source": "cwq",
      "entities": {
        "Guitar": "m.0342h",
        "Go Your Own Way": "m.09gglj"
      },
      "s_expression": "(AND (JOIN (R music.group_member.instruments_played) (JOIN music.lyricist.lyrics_written m.09gglj)) (JOIN music.instrument.family m.0342h))",
      "actions": [
        "get_relations(m.09gglj)",
        "get_neighbors(m.09gglj,music.composition.lyricist)",
        "get_relations(#0)",
        "get_neighbors(#0,music.group_member.instruments_played)",
        "get_relations(m.0342h)",
        "get_neighbors(m.0342h,music.instrument.variation)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.018vs",
          "answer_type": "Entity",
          "entity_name": "Bass guitar"
        }
      ]
    },
    {
      "question": "which cloud, of the family a (high-level) cloud family, has the maximum minimum altitude?",
      "qid": "4303227003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Family A (high-level)": "m.01xtbgh"
      },
      "s_expression": "(ARGMAX (AND meteorology.cloud (JOIN (R meteorology.cloud.cloud_family) (JOIN meteorology.cloud.classification m.01xtbgh))) meteorology.cloud.minimum_altitude)",
      "actions": [
        "get_relations(m.01xtbgh)",
        "get_neighbors(m.01xtbgh,meteorology.cloud_classification.clouds)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.cloud.cloud_family)",
        "get_attributes(#1)",
        "argmax(#1,meteorology.cloud.minimum_altitude)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cs96",
          "entity_name": "Cirrus"
        }
      ]
    },
    {
      "question": "the mustang in the model of 1999 dodge charger concept is of what automotive class?",
      "qid": "4300308007000_grailqa",
      "source": "grailqa",
      "entities": {
        "mustang": "m.0qk4n",
        "1999 Dodge Charger Concept": "m.0f7xbh"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN (R automotive.model.automotive_class) m.0qk4n) (JOIN automotive.automotive_class.examples (JOIN automotive.model.model_years m.0f7xbh))))",
      "actions": [
        "get_relations(m.0qk4n)",
        "get_neighbors(m.0qk4n,automotive.model.automotive_class)",
        "get_relations(m.0f7xbh)",
        "get_neighbors(m.0f7xbh,automotive.model_year.model)",
        "get_relations(#1)",
        "get_neighbors(#1,automotive.model.automotive_class)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01d1dj",
          "entity_name": "Coupé"
        }
      ]
    },
    {
      "question": "where is the version developed by bandai-namco and distributed through wii ware released?",
      "qid": "4301141010000_grailqa",
      "source": "grailqa",
      "entities": {
        "wii ware": "m.03hfyj6",
        "bandai-namco": "m.09k0h5"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.03hfyj6) (JOIN (R cvg.cvg_developer.game_versions_developed) m.09k0h5))))",
      "actions": [
        "get_relations(m.03hfyj6)",
        "get_neighbors(m.03hfyj6,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.09k0h5)",
        "get_neighbors(m.09k0h5,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_3d",
          "entity_name": "Japan"
        }
      ]
    },
    {
      "question": "which character lives in the fictional aircraft of sonic team's sonic the hedgehog universe?",
      "qid": "4300742002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Aircraft": "m.0k5j",
        "Sonic Team's Sonic the Hedgehog Universe": "m.0cnb3nv"
      },
      "s_expression": "(AND fictional_universe.fictional_character (JOIN fictional_universe.fictional_character.places_lived (AND (JOIN fictional_universe.fictional_setting.setting_type m.0k5j) (JOIN (R fictional_universe.fictional_universe.locations) m.0cnb3nv))))",
      "actions": [
        "get_relations(m.0k5j)",
        "get_neighbors(m.0k5j,fictional_universe.type_of_fictional_setting.settings)",
        "get_relations(m.0cnb3nv)",
        "get_neighbors(m.0cnb3nv,fictional_universe.fictional_universe.locations)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,fictional_universe.fictional_setting.characters_that_have_lived_here)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01r4bw",
          "entity_name": "Big the Cat"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02hlp4",
          "entity_name": "Chaos"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.015dxd",
          "entity_name": "Knuckles the Echidna"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07656",
          "entity_name": "Sonic the Hedgehog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01mx1l",
          "entity_name": "Amy Rose"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02nyqs",
          "entity_name": "E-102 Gamma"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01rk30",
          "entity_name": "Doctor Ivo Robotnik"
        }
      ]
    },
    {
      "question": "Team Owner George Steinbrenner last won the World Series in what year?",
      "qid": "WebQTrn-1929_6b8c780bd704ec35aa7663d1d5d55d64_cwq",
      "source": "cwq",
      "entities": {
        "George Steinbrenner": "m.01q5t3"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.01q5t3)) time.event.end_date)",
      "actions": [
        "get_relations(m.01q5t3)",
        "get_neighbors(m.01q5t3,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04tfv7",
          "answer_type": "Entity",
          "entity_name": "1923 World Series"
        }
      ]
    },
    {
      "question": "which isos does the camera sony cyber-shot dsc-s780 support from sony corp?",
      "qid": "4304013010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Sony Cyber-shot DSC-S780": "m.04wjk0v",
        "sony corp": "m.06q07"
      },
      "s_expression": "(AND digicams.camera_iso (AND (JOIN digicams.camera_iso.cameras m.04wjk0v) (JOIN (R digicams.digital_camera.iso_setting) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.06q07))))",
      "actions": [
        "get_relations(m.04wjk0v)",
        "get_neighbors(m.04wjk0v,digicams.digital_camera.iso_setting)",
        "get_relations(m.06q07)",
        "get_neighbors(m.06q07,digicams.camera_sensor_manufacturer.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.iso_setting)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_x",
          "entity_name": "100"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_7",
          "entity_name": "Auto"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_g",
          "entity_name": "400"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_p",
          "entity_name": "200"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg58",
          "entity_name": "800"
        }
      ]
    },
    {
      "question": "in what countries is the version developed by razorback developments and distributed through physical media released?",
      "qid": "4301141000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Physical media": "m.0663y78",
        "Razorback Developments": "m.02hkz21"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.0663y78) (JOIN (R cvg.cvg_developer.game_versions_developed) m.02hkz21))))",
      "actions": [
        "get_relations(m.0663y78)",
        "get_neighbors(m.0663y78,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.02hkz21)",
        "get_neighbors(m.02hkz21,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.075g54v",
          "entity_name": "Wii/DS NA"
        }
      ]
    },
    {
      "question": "conejo wycollar boy and norwegian lundehund are breeds that share what temperament?",
      "qid": "4300459011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Conejo Wycollar Boy": "m.0j1t2ng",
        "Norwegian Lundehund": "m.01z0mh"
      },
      "s_expression": "(AND biology.breed_temperament (AND (JOIN (R biology.animal_breed.temperament) (JOIN (R biology.pedigreed_animal.breed) m.0j1t2ng)) (JOIN (R biology.animal_breed.temperament) m.01z0mh)))",
      "actions": [
        "get_relations(m.0j1t2ng)",
        "get_neighbors(m.0j1t2ng,biology.pedigreed_animal.breed)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.01z0mh)",
        "get_neighbors(m.01z0mh,biology.animal_breed.temperament)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kqp3l",
          "entity_name": "Alert"
        }
      ]
    },
    {
      "question": "what was the most recently performed songs?",
      "qid": "4303240009000_grailqa",
      "source": "grailqa",
      "entities": {
        "songs": "m.074ft"
      },
      "s_expression": "(ARGMAX (AND music.composition (JOIN music.composition.form (JOIN music.compositional_form.superforms m.074ft))) music.composition.date_of_first_performance)",
      "actions": [
        "get_relations(m.074ft)",
        "get_neighbors(m.074ft,music.compositional_form.subforms)",
        "get_relations(#0)",
        "get_neighbors(#0,music.compositional_form.compositions)",
        "get_attributes(#1)",
        "argmax(#1,music.composition.date_of_first_performance)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.064xclc",
          "entity_name": "Raspberry Pie"
        }
      ]
    },
    {
      "question": "When was the last time the team with mascot Carlton the Bear win the Stanley Cup?",
      "qid": "WebQTest-1960_638b311f254226aeb649291749f3a3df_cwq",
      "source": "cwq",
      "entities": {
        "Carlton the Bear": "m.078gsn"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.078gsn)) time.event.start_date)",
      "actions": [
        "get_relations(m.078gsn)",
        "get_neighbors(m.078gsn,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.03by199",
          "answer_type": "Entity",
          "entity_name": "1967 Stanley Cup Finals"
        }
      ]
    },
    {
      "question": "What type of government does Australia have in the location where Baldur von Schirach was born?",
      "qid": "WebQTest-493_3f76d491e90682cc29e3de2546e1f9c5_cwq",
      "source": "cwq",
      "entities": {
        "Australia": "m.0chghy",
        "Baldur von Schirach": "m.0143sn"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0chghy) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.0143sn)))",
      "actions": [
        "get_relations(m.0chghy)",
        "get_neighbors(m.0chghy,location.country.form_of_government)",
        "get_relations(m.0143sn)",
        "get_neighbors(m.0143sn,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20"
        }
      ]
    },
    {
      "question": "which partial seizure treatments come with the side effects of b symptoms?",
      "qid": "4301182013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Partial seizure": "m.02pqv5s",
        "B symptoms": "m.08z394"
      },
      "s_expression": "(AND medicine.medical_treatment (AND (JOIN medicine.medical_treatment.side_effects (JOIN medicine.symptom.parent_symptom m.08z394)) (JOIN medicine.medical_treatment.used_to_treat m.02pqv5s)))",
      "actions": [
        "get_relations(m.08z394)",
        "get_neighbors(m.08z394,medicine.symptom.includes_symptoms)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.symptom.side_effect_of)",
        "get_relations(m.02pqv5s)",
        "get_neighbors(m.02pqv5s,medicine.disease.treatments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01qb88",
          "entity_name": "Topiramate"
        }
      ]
    },
    {
      "question": "who produced discovery and another multi-part musical that was released under apple records records?",
      "qid": "4301847009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Discovery": "m.0340nsb",
        "Apple Records": "m.019n_t"
      },
      "s_expression": "(AND music.producer (AND (JOIN (R music.release.producers) (JOIN music.release.label m.019n_t)) (JOIN (R music.release.producers) m.0340nsb)))",
      "actions": [
        "get_relations(m.019n_t)",
        "get_neighbors(m.019n_t,music.record_label.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.producers)",
        "get_relations(m.0340nsb)",
        "get_neighbors(m.0340nsb,music.release.producers)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0473q",
          "entity_name": "Jeff Lynne"
        }
      ]
    },
    {
      "question": "In the area where Alvaro Gil Cabral was born, what type of government was there that was also shared with Sparta?",
      "qid": "WebQTrn-1542_aae1720ca8d746eb8883d69655f9e1e0_cwq",
      "source": "cwq",
      "entities": {
        "Sparta": "m.09472",
        "alvaro gil cabral": "g.121r_b9t"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.09472) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here g.121r_b9t)))",
      "actions": [
        "get_relations(m.09472)",
        "get_neighbors(m.09472,location.country.form_of_government)",
        "get_relations(g.121r_b9t)",
        "get_neighbors(g.121r_b9t,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.04szc",
          "answer_type": "Entity",
          "entity_name": "Monarchy"
        }
      ]
    },
    {
      "question": "The team that emerged victorious in Super Bowl IV last won which Super Bowl?",
      "qid": "WebQTrn-3623_4ce043d6a57872df9c85e205a2970ce7_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl IV": "m.076mc"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.076mc)) time.event.end_date)",
      "actions": [
        "get_relations(m.076mc)",
        "get_neighbors(m.076mc,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.076mc",
          "answer_type": "Entity",
          "entity_name": "Super Bowl IV"
        }
      ]
    },
    {
      "question": "what is the musical recording with maximum length that is a track of musical release component released by the well-tempered clavier, book ii (feat. piano: andrás schiff)?",
      "qid": "4301467013000_grailqa",
      "source": "grailqa",
      "entities": {
        "The Well-Tempered Clavier, Book II (feat. piano: András Schiff)": "m.0bfclvx"
      },
      "s_expression": "(ARGMAX (AND music.recording (JOIN (R music.release.track) (JOIN (R music.album.releases) m.0bfclvx))) music.recording.length)",
      "actions": [
        "get_relations(m.0bfclvx)",
        "get_neighbors(m.0bfclvx,music.album.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.track)",
        "get_attributes(#1)",
        "argmax(#1,music.recording.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0ppbcn",
          "entity_name": "Prelude & Fugue in G-sharp minor, BWV 887"
        }
      ]
    },
    {
      "question": "what scientist is credited with discovering both oxygen and an element listed in the d-block of the periodic table?",
      "qid": "480000300_graphquestions",
      "source": "graphquestions",
      "entities": {
        "d-block": "m.0j7pr",
        "Oxygen": "m.025s6bf"
      },
      "s_expression": "(AND chemistry.element_discoverer (AND (JOIN (R chemistry.chemical_element.discoverer) (JOIN (R chemistry.periodic_table_block.elements) m.0j7pr)) (JOIN chemistry.element_discoverer.discovered m.025s6bf)))",
      "actions": [
        "get_relations(m.0j7pr)",
        "get_neighbors(m.0j7pr,chemistry.periodic_table_block.elements)",
        "get_relations(#0)",
        "get_neighbors(#0,chemistry.chemical_element.discoverer)",
        "get_relations(m.025s6bf)",
        "get_neighbors(m.025s6bf,chemistry.chemical_element.discoverer)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g68n",
          "entity_name": "Carl Wilhelm Scheele"
        }
      ]
    },
    {
      "question": "how many spacecrafts did northrop grumman corp. and trw inc. make?",
      "qid": "3201449010000_grailqa",
      "source": "grailqa",
      "entities": {
        "northrop grumman corp.": "m.01frpd",
        "TRW Inc.": "m.01m5n0"
      },
      "s_expression": "(COUNT (AND spaceflight.spacecraft (AND (JOIN spaceflight.spacecraft.manufacturer m.01frpd) (JOIN spaceflight.spacecraft.manufacturer m.01m5n0))))",
      "actions": [
        "get_relations(m.01frpd)",
        "get_neighbors(m.01frpd,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "get_relations(m.01m5n0)",
        "get_neighbors(m.01m5n0,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "how many religious texts do mormon theology and church of god share?",
      "qid": "3206221005000_grailqa",
      "source": "grailqa",
      "entities": {
        "church of god": "m.02q21kx",
        "mormon theology": "m.058x5"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of m.02q21kx) (JOIN (R religion.religion.texts) m.058x5))))",
      "actions": [
        "get_relations(m.02q21kx)",
        "get_neighbors(m.02q21kx,religion.religion.texts)",
        "get_relations(m.058x5)",
        "get_neighbors(m.058x5,religion.religion.texts)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "What is the last World Series that was won by the team whose arena stadium is Hilltop Park?",
      "qid": "WebQTest-832_1afd5634cb719e3b77b4345510599ca8_cwq",
      "source": "cwq",
      "entities": {
        "Hilltop Park": "m.039nhz"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.039nhz)) time.event.start_date)",
      "actions": [
        "get_relations(m.039nhz)",
        "get_neighbors(m.039nhz,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0117q3yz"
        }
      ]
    },
    {
      "question": "what other rockets did the rocket manufacturer of falcon v and falcon 1 create?",
      "qid": "4300129013000_grailqa",
      "source": "grailqa",
      "entities": {
        "falcon v": "m.03fvlk",
        "Falcon 1": "m.03g1qj"
      },
      "s_expression": "(AND spaceflight.rocket (JOIN spaceflight.rocket.manufacturer (AND (JOIN (R spaceflight.rocket.manufacturer) m.03fvlk) (JOIN spaceflight.rocket_manufacturer.rockets_manufactured m.03g1qj))))",
      "actions": [
        "get_relations(m.03fvlk)",
        "get_neighbors(m.03fvlk,spaceflight.rocket.manufacturer)",
        "get_relations(m.03g1qj)",
        "get_neighbors(m.03g1qj,spaceflight.rocket.manufacturer)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,spaceflight.rocket_manufacturer.rockets_manufactured)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07v5bj",
          "entity_name": "Falcon 9"
        }
      ]
    },
    {
      "question": "list all quotations from nikodemos that are addressed to whom listen close and you can hear, “please, bless us and forgive us, and make us good here and strong here. let us get along here. let those we love and left behind be blessed. let us find the proper path and keep to it. help us act harmoniously, and find work pleasing in the sight of god and man.” was addressed to.",
      "qid": "4302343006000_grailqa",
      "source": "grailqa",
      "entities": {
        "nikodemos": "m.0cpg05_",
        "Listen close and you can hear, “Please, bless us and forgive us, and make us good here and strong here.  Let us get along here.  Let those we love and left behind be blessed.  Let us find the proper path and keep to it.  Help us act harmoniously, and find work pleasing in the sight of god and man.”": "m.0dwvbpm"
      },
      "s_expression": "(AND media_common.quotation_addressee (AND (JOIN media_common.quotation_addressee.quotations (JOIN (R fictional_universe.fictional_character.quotations) m.0cpg05_)) (JOIN media_common.quotation_addressee.quotations m.0dwvbpm)))",
      "actions": [
        "get_relations(m.0cpg05_)",
        "get_neighbors(m.0cpg05_,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.addressee)",
        "get_relations(m.0dwvbpm)",
        "get_neighbors(m.0dwvbpm,media_common.quotation.addressee)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bxw5fk",
          "entity_name": "Harmony (Harmonia)"
        }
      ]
    },
    {
      "question": "What languages are mainly spoken in the country where Domari Language is spoken?",
      "qid": "WebQTest-1608_602d3e74c7063895f149a8f44b9e406f_cwq",
      "source": "cwq",
      "entities": {
        "Domari Language": "m.0c4chg"
      },
      "s_expression": "(JOIN (R location.country.languages_spoken) (AND (JOIN (R language.human_language.main_country) common.topic) (JOIN location.country.languages_spoken m.0c4chg)))",
      "actions": [
        "get_relations(common.topic)",
        "get_neighbors(common.topic,language.human_language.main_country)",
        "get_relations(m.0c4chg)",
        "get_neighbors(m.0c4chg,language.human_language.countries_spoken_in)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,location.country.languages_spoken)"
      ],
      "answer": [
        {
          "answer_argument": "m.012zfy",
          "answer_type": "Entity",
          "entity_name": "Siwi Language"
        },
        {
          "answer_argument": "m.02hx2cr",
          "answer_type": "Entity",
          "entity_name": "Egyptian Arabic"
        },
        {
          "answer_argument": "m.02hxbhg",
          "answer_type": "Entity",
          "entity_name": "Sa'idi Arabic"
        },
        {
          "answer_argument": "m.03wc2kf",
          "answer_type": "Entity",
          "entity_name": "Bedawi Arabic"
        }
      ]
    },
    {
      "question": "what is trevor rabin's longest release track of written recordings?",
      "qid": "4300020005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Trevor Rabin": "m.01hw6wq"
      },
      "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.01hw6wq))) music.release_track.length)",
      "actions": [
        "get_relations(m.01hw6wq)",
        "get_neighbors(m.01hw6wq,music.engineer.tracks_engineered)",
        "get_relations(#0)",
        "get_neighbors(#0,music.recording.tracks)",
        "get_attributes(#1)",
        "argmax(#1,music.release_track.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0rqkz33",
          "entity_name": "Miracle of Life"
        }
      ]
    },
    {
      "question": "what is the number of apple macintosh models that use motorola 68040 processors?",
      "qid": "3205922002000_grailqa",
      "source": "grailqa",
      "entities": {
        "apple macintosh": "m.0zd6",
        "Motorola 68040": "m.05397"
      },
      "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.0zd6) (JOIN computer.computer.processor m.05397))))",
      "actions": [
        "get_relations(m.0zd6)",
        "get_neighbors(m.0zd6,computer.computer.includes_models)",
        "get_relations(m.05397)",
        "get_neighbors(m.05397,computer.computer_processor.used_in_computers)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "What type of guitar is played by the artist that recorded Wither?",
      "qid": "WebQTest-1279_895bbbab8c18943676d702da6461fdc2_cwq",
      "source": "cwq",
      "entities": {
        "Guitar": "m.0342h",
        "Wither": "m.0135mg72"
      },
      "s_expression": "(AND (JOIN (R music.group_member.instruments_played) (JOIN music.featured_artist.recordings m.0135mg72)) (JOIN music.instrument.family m.0342h))",
      "actions": [
        "get_relations(m.0135mg72)",
        "get_neighbors(m.0135mg72,music.recording.featured_artists)",
        "get_relations(#0)",
        "get_neighbors(#0,music.group_member.instruments_played)",
        "get_relations(m.0342h)",
        "get_neighbors(m.0342h,music.instrument.variation)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.018vs",
          "answer_type": "Entity",
          "entity_name": "Bass guitar"
        }
      ]
    },
    {
      "question": "In what year, did the owner of which sports team, Jerry Buss win their first championship?",
      "qid": "WebQTrn-2411_631c86e09428792d64de97b2ed90e0b9_cwq",
      "source": "cwq",
      "entities": {
        "Jerry Buss": "m.03_6fp"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.03_6fp)) time.event.start_date)",
      "actions": [
        "get_relations(m.03_6fp)",
        "get_neighbors(m.03_6fp,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0ct81k",
          "answer_type": "Entity",
          "entity_name": "1949 BAA Finals"
        }
      ]
    },
    {
      "question": "Sports team owner Edward P. Roski last won the playoff series when?",
      "qid": "WebQTest-1711_a7f0de28d079427618de97f04e86483c_cwq",
      "source": "cwq",
      "entities": {
        "Edward P. Roski": "m.0bydfb"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.0bydfb)) time.event.end_date)",
      "actions": [
        "get_relations(m.0bydfb)",
        "get_neighbors(m.0bydfb,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.010fdzhp",
          "answer_type": "Entity",
          "entity_name": "2014 Stanley Cup Finals"
        }
      ]
    },
    {
      "question": "the national front party and south australian state election, 2002 have what political ideology?",
      "qid": "4302370013000_grailqa",
      "source": "grailqa",
      "entities": {
        "South Australian state election, 2002": "m.0b9lp1",
        "national front party": "m.06cw6g"
      },
      "s_expression": "(AND government.political_ideology (AND (JOIN government.political_ideology.political_parties (JOIN (R government.parliamentary_election.government_formed_by) m.0b9lp1)) (JOIN (R government.political_party.ideology) m.06cw6g)))",
      "actions": [
        "get_relations(m.0b9lp1)",
        "get_neighbors(m.0b9lp1,government.parliamentary_election.government_formed_by)",
        "get_relations(#0)",
        "get_neighbors(#0,government.political_party.ideology)",
        "get_relations(m.06cw6g)",
        "get_neighbors(m.06cw6g,government.political_party.ideology)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.06qnz",
          "entity_name": "Social democracy"
        }
      ]
    },
    {
      "question": "which camera storage type can support a canon eos 5ds and a digital camera with a 8000 iso setting?",
      "qid": "4302372003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Canon EOS 5DS": "m.012sq5lf",
        "8000": "m.0h27q94"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.0h27q94)) (JOIN (R digicams.digital_camera.supported_storage_types) m.012sq5lf)))",
      "actions": [
        "get_relations(m.0h27q94)",
        "get_neighbors(m.0h27q94,digicams.camera_iso.cameras)",
        "get_relations(#0)",
        "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.012sq5lf)",
        "get_neighbors(m.012sq5lf,digicams.digital_camera.supported_storage_types)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tthm",
          "entity_name": "Secure Digital"
        }
      ]
    },
    {
      "question": "what political ideology does alliance of alenka bratušek and victorian state election, 2010 follow?",
      "qid": "4302370008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Victorian state election, 2010": "m.02z2pzc",
        "Alliance of Alenka Bratušek": "m.010rdr7v"
      },
      "s_expression": "(AND government.political_ideology (AND (JOIN government.political_ideology.political_parties (JOIN (R government.parliamentary_election.government_formed_by) m.02z2pzc)) (JOIN (R government.political_party.ideology) m.010rdr7v)))",
      "actions": [
        "get_relations(m.02z2pzc)",
        "get_neighbors(m.02z2pzc,government.parliamentary_election.government_formed_by)",
        "get_relations(#0)",
        "get_neighbors(#0,government.political_party.ideology)",
        "get_relations(m.010rdr7v)",
        "get_neighbors(m.010rdr7v,government.political_party.ideology)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04hbc",
          "entity_name": "Liberalism"
        }
      ]
    },
    {
      "question": "what dug dosage form exist for drugs formulated from triclocarban and has active ingredient lemon balm?\n: liquid",
      "qid": "5400022011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Triclocarban": "m.02x40yw",
        "Lemon balm": "m.04gt_"
      },
      "s_expression": "(AND medicine.drug_dosage_form (AND (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.formulation_of m.02x40yw)) (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.active_ingredient_moieties m.04gt_))))",
      "actions": [
        "get_relations(m.02x40yw)",
        "get_neighbors(m.02x40yw,medicine.drug.marketed_formulations)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.drug_formulation.dosage_form)",
        "get_relations(m.04gt_)",
        "get_neighbors(m.04gt_,medicine.drug_ingredient.active_moiety_of_formulation)",
        "get_relations(#2)",
        "get_neighbors(#2,medicine.drug_formulation.dosage_form)",
        "intersection(#1,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04k94",
          "entity_name": "Liquid"
        }
      ]
    },
    {
      "question": "parc introduced first which programming language which was influenced by another language ?",
      "qid": "4303199000000_grailqa",
      "source": "grailqa",
      "entities": {
        "PARC": "m.0878f"
      },
      "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.0878f))) computer.programming_language.introduced)",
      "actions": [
        "get_relations(m.0878f)",
        "get_neighbors(m.0878f,computer.programming_language_developer.programming_languages_developed)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.influenced)",
        "get_attributes(#1)",
        "argmin(#1,computer.programming_language.introduced)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01zpg",
          "entity_name": "COBOL"
        }
      ]
    },
    {
      "question": "there are how many exhibition subjects in international exhibition of modern art?",
      "qid": "4302933009000_grailqa",
      "source": "grailqa",
      "entities": {
        "international exhibition of modern art": "m.01_ggr"
      },
      "s_expression": "(COUNT (AND exhibitions.exhibition_subject (JOIN (R exhibitions.exhibition.subjects) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) (JOIN (R exhibitions.exhibition.exhibition_types) m.01_ggr)))))",
      "actions": [
        "get_relations(m.01_ggr)",
        "get_neighbors(m.01_ggr,exhibitions.exhibition.exhibition_types)",
        "get_relations(#0)",
        "get_neighbors(#0,exhibitions.type_of_exhibition.exhibitions_of_this_type)",
        "get_relations(#1)",
        "get_neighbors(#1,exhibitions.exhibition.subjects)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "602"
        }
      ]
    },
    {
      "question": "What year did the team with Baltimore Fight Song win the Superbowl?",
      "qid": "WebQTrn-2136_d95da5fb8a16d81fe56cd4ce00843254_cwq",
      "source": "cwq",
      "entities": {
        "superbowl": "m.06x5s",
        "baltimore fight song": "m.0hn47qp"
      },
      "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.fight_song m.0hn47qp)) (JOIN sports.sports_championship_event.championship m.06x5s))",
      "actions": [
        "get_relations(m.0hn47qp)",
        "get_neighbors(m.0hn47qp,sports.fight_song.sports_team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0642vqv",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLVII"
        },
        {
          "answer_argument": "m.076yq",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXXV"
        }
      ]
    },
    {
      "question": "ricoh 5a22 processors was used by how many super famicom box models?",
      "qid": "3205922009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Super Famicom Box": "m.02kx0d6",
        "Ricoh 5A22": "m.0by0z8"
      },
      "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.02kx0d6) (JOIN computer.computer.processor m.0by0z8))))",
      "actions": [
        "get_relations(m.02kx0d6)",
        "get_neighbors(m.02kx0d6,computer.computer.includes_models)",
        "get_relations(m.0by0z8)",
        "get_neighbors(m.0by0z8,computer.computer_processor.used_in_computers)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what viewfinder does the camera with sensor from kodak and a compression format of digital negative use?",
      "qid": "4302274010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Digital Negative": "m.03_2yh",
        "kodak": "m.0ftdd"
      },
      "s_expression": "(AND digicams.camera_viewfinder_type (JOIN digicams.camera_viewfinder_type.digital_cameras (AND (JOIN (R digicams.camera_compressed_format.cameras) m.03_2yh) (JOIN digicams.digital_camera.camera_sensor_manufacturer m.0ftdd))))",
      "actions": [
        "get_relations(m.03_2yh)",
        "get_neighbors(m.03_2yh,digicams.camera_compressed_format.cameras)",
        "get_relations(m.0ftdd)",
        "get_neighbors(m.0ftdd,digicams.camera_sensor_manufacturer.cameras)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,digicams.digital_camera.viewfinder_type)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0kzyh",
          "entity_name": "Rangefinder camera"
        }
      ]
    },
    {
      "question": "houseman and the producer of mercury theatre produce what content?",
      "qid": "4300832009000_grailqa",
      "source": "grailqa",
      "entities": {
        "mercury theatre": "m.0k0tb7h",
        "houseman": "m.01vsps"
      },
      "s_expression": "(AND broadcast.content (AND (JOIN broadcast.content.producer (JOIN broadcast.producer.produces m.0k0tb7h)) (JOIN broadcast.content.producer m.01vsps)))",
      "actions": [
        "get_relations(m.0k0tb7h)",
        "get_neighbors(m.0k0tb7h,broadcast.content.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,broadcast.producer.produces)",
        "get_relations(m.01vsps)",
        "get_neighbors(m.01vsps,broadcast.producer.produces)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0379d2",
          "entity_name": "The Campbell Playhouse"
        }
      ]
    },
    {
      "question": "What type of cancer did the artist who had a concert tour called the Crayons Tour die from?",
      "qid": "WebQTrn-2936_4f9cca38036a7e37d77a5296de517b1f_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "Crayons Tour": "m.0bmjcsq"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.artist.concert_tours m.0bmjcsq)) (JOIN people.cause_of_death.parent_cause_of_death m.0qcr0))",
      "actions": [
        "get_relations(m.0bmjcsq)",
        "get_neighbors(m.0bmjcsq,music.concert_tour.artist)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,people.cause_of_death.includes_causes_of_death)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.04p3w",
          "answer_type": "Entity",
          "entity_name": "Lung cancer"
        }
      ]
    },
    {
      "question": "What are the titles of the children's speculative fiction books written by Suzanne Collins?",
      "qid": "WebQTrn-3364_5c3a608fb44a9825e6ba6d2b62f4e051_cwq",
      "source": "cwq",
      "entities": {
        "Suzanne Collins": "m.0bpd5z",
        "Children's literature": "m.0dwly",
        "Speculative fiction": "m.014dfn"
      },
      "s_expression": "(AND (JOIN (R book.author.works_written) m.0bpd5z) (AND (JOIN book.book.genre m.0dwly) (JOIN book.book.genre m.014dfn)))",
      "actions": [
        "get_relations(m.0bpd5z)",
        "get_neighbors(m.0bpd5z,book.author.works_written)",
        "get_relations(m.0dwly)",
        "get_neighbors(m.0dwly,media_common.literary_genre.books_in_this_genre)",
        "get_relations(m.014dfn)",
        "get_neighbors(m.014dfn,media_common.literary_genre.books_in_this_genre)",
        "intersection(#1,#2)",
        "intersection(#0,#3)"
      ],
      "answer": [
        {
          "answer_argument": "m.04t448h",
          "answer_type": "Entity",
          "entity_name": "Gregor and the Code of Claw"
        },
        {
          "answer_argument": "m.0dsx8l",
          "answer_type": "Entity",
          "entity_name": "Gregor and the Prophecy of Bane"
        }
      ]
    },
    {
      "question": "the longest release track of arun shenoy recordings is what?",
      "qid": "4300020014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Arun Shenoy": "m.0nhvz97"
      },
      "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.0nhvz97))) music.release_track.length)",
      "actions": [
        "get_relations(m.0nhvz97)",
        "get_neighbors(m.0nhvz97,music.engineer.tracks_engineered)",
        "get_relations(#0)",
        "get_neighbors(#0,music.recording.tracks)",
        "get_attributes(#1)",
        "argmax(#1,music.release_track.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.012c1xs6",
          "entity_name": "Bliss"
        }
      ]
    },
    {
      "question": "what cheese with the same texture as humboldt fog does also come from goat?",
      "qid": "4302129011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Goat": "m.03fwl",
        "Humboldt Fog": "m.057m1q"
      },
      "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.03fwl) (JOIN (R food.cheese_texture.cheeses) (JOIN food.cheese_texture.cheeses m.057m1q))))",
      "actions": [
        "get_relations(m.03fwl)",
        "get_neighbors(m.03fwl,food.cheese_milk_source.cheeses)",
        "get_relations(m.057m1q)",
        "get_neighbors(m.057m1q,food.cheese.texture)",
        "get_relations(#1)",
        "get_neighbors(#1,food.cheese_texture.cheeses)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.016kgn",
          "entity_name": "Halloumi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02h97hf",
          "entity_name": "Black Gold"
        }
      ]
    },
    {
      "question": "what is the longest song on the early years: 1930-1934?",
      "qid": "4301467009000_grailqa",
      "source": "grailqa",
      "entities": {
        "The Early Years: 1930-1934": "m.01k_zv4"
      },
      "s_expression": "(ARGMAX (AND music.recording (JOIN (R music.release.track) (JOIN (R music.album.releases) m.01k_zv4))) music.recording.length)",
      "actions": [
        "get_relations(m.01k_zv4)",
        "get_neighbors(m.01k_zv4,music.album.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.track)",
        "get_attributes(#1)",
        "argmax(#1,music.recording.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01b3svw",
          "entity_name": "Cabin in the Cotton"
        }
      ]
    },
    {
      "question": "what programming language paradigm is used by j# and another programming language influenced by hope?",
      "qid": "4300798007000_grailqa",
      "source": "grailqa",
      "entities": {
        "J#": "m.0268yl",
        "Hope": "m.03r8mt"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.0268yl) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.03r8mt))))",
      "actions": [
        "get_relations(m.0268yl)",
        "get_neighbors(m.0268yl,computer.programming_language.language_paradigms)",
        "get_relations(m.03r8mt)",
        "get_neighbors(m.03r8mt,computer.programming_language.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.programming_language.language_paradigms)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05prj",
          "entity_name": "Object-oriented programming"
        }
      ]
    },
    {
      "question": "In which years did the team that earned victory in the 2001 AFC Championship Game win the Super Bowl?",
      "qid": "WebQTrn-2136_8c90d5499a627a3478313407b1404ecf_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "2001 AFC Championship Game": "m.0_gt_qt"
      },
      "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.0_gt_qt)) (JOIN sports.sports_championship_event.championship m.06x5s))",
      "actions": [
        "get_relations(m.0_gt_qt)",
        "get_neighbors(m.0_gt_qt,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0642vqv",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLVII"
        },
        {
          "answer_argument": "m.076yq",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXXV"
        }
      ]
    },
    {
      "question": "What year did the team owned by Phillip Anschutz won the Stanley Cup?",
      "qid": "WebQTrn-209_0e9d32b91aee2b2625672f6bbbec2a5d_cwq",
      "source": "cwq",
      "entities": {
        "phillip anschutz": "m.02fzwl"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.02fzwl)) time.event.end_date)",
      "actions": [
        "get_relations(m.02fzwl)",
        "get_neighbors(m.02fzwl,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.010fdzhp",
          "answer_type": "Entity",
          "entity_name": "2014 Stanley Cup Finals"
        }
      ]
    },
    {
      "question": "What is the largest nation in the country that is home to Vulgaria?",
      "qid": "WebQTest-523_650372fbf8339023d462b452320d9f26_cwq",
      "source": "cwq",
      "entities": {
        "Vulgaria": "m.06thst"
      },
      "s_expression": "(ARGMAX (JOIN (R base.locations.continents.countries_within) (JOIN fictional_universe.fictional_setting.contains m.06thst)) topic_server.population_number)",
      "actions": [
        "get_relations(m.06thst)",
        "get_neighbors(m.06thst,fictional_universe.fictional_setting.contained_by)",
        "get_relations(#0)",
        "get_neighbors(#0,base.locations.continents.countries_within)",
        "get_attributes(#1)",
        "argmax(#1,topic_server.population_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.06bnz",
          "answer_type": "Entity",
          "entity_name": "Russia"
        }
      ]
    },
    {
      "question": "what type of martial art has chin na and the same categories as ssireum?",
      "qid": "4301064001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Ssireum": "m.03vslh",
        "Chin Na": "m.01vywf"
      },
      "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.03vslh)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.01vywf)))",
      "actions": [
        "get_relations(m.03vslh)",
        "get_neighbors(m.03vslh,martial_arts.martial_art.category)",
        "get_relations(#0)",
        "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
        "get_relations(m.01vywf)",
        "get_neighbors(m.01vywf,martial_arts.martial_art_category.martial_arts)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hbj9",
          "entity_name": "Hapkido"
        }
      ]
    },
    {
      "question": "which breeds have similar temperament as the czechoslovakian wolfdog and the american english coonhound?",
      "qid": "4300795010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Czechoslovakian Wolfdog": "m.0b3s8y",
        "American English Coonhound": "m.02ppbk1"
      },
      "s_expression": "(AND biology.animal_breed (JOIN biology.animal_breed.temperament (AND (JOIN (R biology.animal_breed.temperament) m.0b3s8y) (JOIN biology.breed_temperament.breeds m.02ppbk1))))",
      "actions": [
        "get_relations(m.0b3s8y)",
        "get_neighbors(m.0b3s8y,biology.animal_breed.temperament)",
        "get_relations(m.02ppbk1)",
        "get_neighbors(m.02ppbk1,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,biology.breed_temperament.breeds)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03htgw",
          "entity_name": "Koolie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05sfy0",
          "entity_name": "Löwchen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kwdc",
          "entity_name": "German Wirehaired Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gx1zf",
          "entity_name": "Billy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.074g8y",
          "entity_name": "Manchester Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05h0h0",
          "entity_name": "Bull Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0182yx",
          "entity_name": "Shetland Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.062dgz",
          "entity_name": "Lagotto Romagnolo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p08w",
          "entity_name": "Seppala Siberian Sleddog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01s7fj",
          "entity_name": "Shih Tzu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01x5q1",
          "entity_name": "Jämthund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.020z5t",
          "entity_name": "English Springer Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0266ts8",
          "entity_name": "Basset Bleu de Gascogne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02cyl6",
          "entity_name": "Maltese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kf24",
          "entity_name": "Australian Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kgrx",
          "entity_name": "Cardigan Welsh Corgi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02nscg",
          "entity_name": "Bearded Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qx_df",
          "entity_name": "Picardy Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02vjrc",
          "entity_name": "Groenendael"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0388_c",
          "entity_name": "Japanese Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_7wn",
          "entity_name": "Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_vlr",
          "entity_name": "Smooth Fox Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04mgcx",
          "entity_name": "Bench-Legged Feist"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04svjlt",
          "entity_name": "American Squirrel Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05t252",
          "entity_name": "Volpino Italiano"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05y236",
          "entity_name": "New Guinea singing dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gvx7",
          "entity_name": "Pharaoh Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.020dr1",
          "entity_name": "Bluetick coonhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025_s2m",
          "entity_name": "Black Mouth Cur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025tcp1",
          "entity_name": "Russell Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02fxgn",
          "entity_name": "Cockapoo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kfwr",
          "entity_name": "Poodle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ktbm",
          "entity_name": "Smooth Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02n_s4",
          "entity_name": "Korean Jindo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pp4mc",
          "entity_name": "Bohemian Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pxllv",
          "entity_name": "Blue Picardy Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02z57c",
          "entity_name": "Cairn Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.044lwh",
          "entity_name": "Irish Water Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04sxb0m",
          "entity_name": "Kemmer Stock Hybrid Squirrel Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05py4h",
          "entity_name": "Old Danish Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06k88g",
          "entity_name": "Hovawart"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07p7st",
          "entity_name": "Portuguese Podengo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07vgwn",
          "entity_name": "Pumi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08c5h8",
          "entity_name": "Brazilian Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09v1cn",
          "entity_name": "Ratonero Bodeguero Andaluz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b26w3",
          "entity_name": "Schnoodle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bq2r1",
          "entity_name": "Indian Spitz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c3k58",
          "entity_name": "Pražský Krysařík"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0fsg8",
          "entity_name": "Harrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hkfc",
          "entity_name": "Kooikerhondje"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0blw4s",
          "entity_name": "Huntaway"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.016wfy",
          "entity_name": "Pomeranian"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02f1fz",
          "entity_name": "West Highland White Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02l61f",
          "entity_name": "Rough Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qllrh",
          "entity_name": "Porcelaine"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02rf9c3",
          "entity_name": "Central Anatolian Shepherd Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02rjc05",
          "entity_name": "Dalmatian"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02rwwfw",
          "entity_name": "Kyi-Leo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02vjst",
          "entity_name": "Laekenois"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.038wvd",
          "entity_name": "Toy Bulldog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03grfxm",
          "entity_name": "Taigan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045lcs",
          "entity_name": "Chien Français Blanc et Noir"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051ppn",
          "entity_name": "Glen of Imaal Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.055br8",
          "entity_name": "Thai Bangkaew Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05c21l",
          "entity_name": "South Russian Ovcharka"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06m828",
          "entity_name": "Petit Basset Griffon Vendéen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06w066",
          "entity_name": "English Foxhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08c4cj",
          "entity_name": "Irish Bull Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08pmt0",
          "entity_name": "Alaskan Klee Kai"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08r0rx",
          "entity_name": "Norrbottenspets"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dflqz",
          "entity_name": "Blue Lacy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p2dp",
          "entity_name": "Affenpinscher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02vjtz",
          "entity_name": "Malinois"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03ys4",
          "entity_name": "Ibizan Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06c5rq",
          "entity_name": "Grand Bleu de Gascogne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.081zj5",
          "entity_name": "Welsh Springer Spaniel"
        }
      ]
    },
    {
      "question": "how many exhibition subjects are in for the guggenheim?",
      "qid": "4302933003000_grailqa",
      "source": "grailqa",
      "entities": {
        "For the Guggenheim": "m.04ll83x"
      },
      "s_expression": "(COUNT (AND exhibitions.exhibition_subject (JOIN (R exhibitions.exhibition.subjects) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) (JOIN (R exhibitions.exhibition.exhibition_types) m.04ll83x)))))",
      "actions": [
        "get_relations(m.04ll83x)",
        "get_neighbors(m.04ll83x,exhibitions.exhibition.exhibition_types)",
        "get_relations(#0)",
        "get_neighbors(#0,exhibitions.type_of_exhibition.exhibitions_of_this_type)",
        "get_relations(#1)",
        "get_neighbors(#1,exhibitions.exhibition.subjects)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "601"
        }
      ]
    },
    {
      "question": "how many religious texts do catholic faith and church of god share?",
      "qid": "3206221013000_grailqa",
      "source": "grailqa",
      "entities": {
        "church of god": "m.02q21kx",
        "catholic faith": "m.0c8wxp"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of m.02q21kx) (JOIN (R religion.religion.texts) m.0c8wxp))))",
      "actions": [
        "get_relations(m.02q21kx)",
        "get_neighbors(m.02q21kx,religion.religion.texts)",
        "get_relations(m.0c8wxp)",
        "get_neighbors(m.0c8wxp,religion.religion.texts)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "which is the longest release track of recordings that robyn ferguson has written?",
      "qid": "4300020001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Robyn Ferguson": "m.0115t775"
      },
      "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.0115t775))) music.release_track.length)",
      "actions": [
        "get_relations(m.0115t775)",
        "get_neighbors(m.0115t775,music.engineer.tracks_engineered)",
        "get_relations(#0)",
        "get_neighbors(#0,music.recording.tracks)",
        "get_attributes(#1)",
        "argmax(#1,music.release_track.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.011cgpg_",
          "entity_name": "Molested Innocence"
        }
      ]
    },
    {
      "question": "Who are the children of the artists who headlined the Tina! 50th Anniversary Tour and Ike?",
      "qid": "WebQTest-1655_f64fce8658335a3dae9d6b56d68fd0b6_cwq",
      "source": "cwq",
      "entities": {
        "ike": "m.0dbzg",
        "Tina! 50th Anniversary Tour": "m.0463c2k"
      },
      "s_expression": "(AND (JOIN (R people.person.children) (JOIN music.artist.concert_tours m.0463c2k)) (JOIN people.person.parents m.0dbzg))",
      "actions": [
        "get_relations(m.0463c2k)",
        "get_neighbors(m.0463c2k,music.concert_tour.artist)",
        "get_relations(#0)",
        "get_neighbors(#0,people.person.children)",
        "get_relations(m.0dbzg)",
        "get_neighbors(m.0dbzg,people.person.children)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0ggl36p",
          "answer_type": "Entity",
          "entity_name": "Ronnie Turner"
        },
        {
          "answer_argument": "m.0j5dh53",
          "answer_type": "Entity",
          "entity_name": "Raymond Craig Turner"
        }
      ]
    },
    {
      "question": "which website has web api of atom and belongs to the category of the niimae blog?",
      "qid": "4300801000000_grailqa",
      "source": "grailqa",
      "entities": {
        "The Niimae Blog": "m.0bm5kbk",
        "Atom": "m.02jvpb"
      },
      "s_expression": "(AND internet.website (AND (JOIN (R internet.website_category.sites) (JOIN (R internet.website.category) m.0bm5kbk)) (JOIN internet.website.api m.02jvpb)))",
      "actions": [
        "get_relations(m.0bm5kbk)",
        "get_neighbors(m.0bm5kbk,internet.website.category)",
        "get_relations(#0)",
        "get_neighbors(#0,internet.website_category.sites)",
        "get_relations(m.02jvpb)",
        "get_neighbors(m.02jvpb,internet.api.site)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02kdzwd",
          "entity_name": "High level bits"
        }
      ]
    },
    {
      "question": "what museums share their type with the frick museum and robert hull fleming museum?",
      "qid": "5400031008000_grailqa",
      "source": "grailqa",
      "entities": {
        "frick museum": "m.021848",
        "Robert Hull Fleming Museum": "m.059q4mp"
      },
      "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.021848) (JOIN architecture.type_of_museum.museums m.059q4mp)))))",
      "actions": [
        "get_relations(m.021848)",
        "get_neighbors(m.021848,architecture.museum.type_of_museum)",
        "get_relations(m.059q4mp)",
        "get_neighbors(m.059q4mp,architecture.museum.type_of_museum)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,architecture.type_of_museum.museums)",
        "get_relations(#3)",
        "get_neighbors(#3,architecture.museum.type_of_museum)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gz",
          "entity_name": "Modern art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c9td2",
          "entity_name": "National museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9jkk",
          "entity_name": "Architecture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgh_k",
          "entity_name": "History museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgjgh",
          "entity_name": "Natural history museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0jvjpx6",
          "entity_name": "Antiquities museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026w5hv",
          "entity_name": "Contemporary art gallery"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pn3n6",
          "entity_name": "Historic house museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0528d17",
          "entity_name": "Photography Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kt8qr",
          "entity_name": "Culture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gt",
          "entity_name": "Archaeology museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059x_pp",
          "entity_name": "Archaeological Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wvyw7",
          "entity_name": "Design museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027v0wz",
          "entity_name": "University museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059vqps",
          "entity_name": "Ancient Art Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9gbh",
          "entity_name": "Jewish museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j58y",
          "entity_name": "Science museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0w_y7rb",
          "entity_name": "Asian art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99t0",
          "entity_name": "Decorative art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0djx8f",
          "entity_name": "Children's museum"
        }
      ]
    },
    {
      "question": "what was the first programming language influenced by another bob language?",
      "qid": "4303199009000_grailqa",
      "source": "grailqa",
      "entities": {
        "bob": "m.02zycj"
      },
      "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.02zycj))) computer.programming_language.introduced)",
      "actions": [
        "get_relations(m.02zycj)",
        "get_neighbors(m.02zycj,computer.programming_language_developer.programming_languages_developed)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.influenced)",
        "get_attributes(#1)",
        "argmin(#1,computer.programming_language.introduced)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01zpg",
          "entity_name": "COBOL"
        }
      ]
    },
    {
      "question": "manjunath naidu's longest release track of recordings is what?",
      "qid": "4300020010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Manjunath Naidu": "m.012cm68v"
      },
      "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.012cm68v))) music.release_track.length)",
      "actions": [
        "get_relations(m.012cm68v)",
        "get_neighbors(m.012cm68v,music.engineer.tracks_engineered)",
        "get_relations(#0)",
        "get_neighbors(#0,music.recording.tracks)",
        "get_attributes(#1)",
        "argmax(#1,music.release_track.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.012c1xs6",
          "entity_name": "Bliss"
        }
      ]
    },
    {
      "question": "Who is the psychoanalyst who influenced Whitman's poetry?",
      "qid": "WebQTrn-3358_599508e0ec066d52b4ffa8f5eeb85b8a_cwq",
      "source": "cwq",
      "entities": {
        "whitman": "m.085gk",
        "Psychoanalyst": "m.02nblbn"
      },
      "s_expression": "(AND (JOIN (R influence.influence_node.influenced_by) m.085gk) (JOIN influence.influence_node.influenced (JOIN people.person.profession m.02nblbn)))",
      "actions": [
        "get_relations(m.085gk)",
        "get_neighbors(m.085gk,influence.influence_node.influenced_by)",
        "get_relations(m.02nblbn)",
        "get_neighbors(m.02nblbn,people.profession.people_with_this_profession)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.039n1",
          "answer_type": "Entity",
          "entity_name": "Georg Wilhelm Friedrich Hegel"
        }
      ]
    },
    {
      "question": "Who among Albert Einstein's influences was himself influenced by Girard Desargues?",
      "qid": "WebQTest-1781_fa37e433eaf26b34a57900ac4af9259c_cwq",
      "source": "cwq",
      "entities": {
        "Albert Einstein": "m.0jcx",
        "Girard Desargues": "m.01_4zq"
      },
      "s_expression": "(AND (JOIN (R influence.influence_node.influenced_by) m.0jcx) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.01_4zq)))",
      "actions": [
        "get_relations(m.0jcx)",
        "get_neighbors(m.0jcx,influence.influence_node.influenced_by)",
        "get_relations(m.01_4zq)",
        "get_neighbors(m.01_4zq,influence.influence_node.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.015n8",
          "answer_type": "Entity",
          "entity_name": "Baruch Spinoza"
        }
      ]
    },
    {
      "question": "xbox is supported by which version released in japan?",
      "qid": "4301746002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Japan": "m.03_3d",
        "xbox": "m.02plp2"
      },
      "s_expression": "(AND cvg.game_version (AND (JOIN (R cvg.computer_game_region.versions_released_in_this_region) m.03_3d) (JOIN (R computer.computer_peripheral.supporting_game_versions) (JOIN (R business.brand.products) m.02plp2))))",
      "actions": [
        "get_relations(m.03_3d)",
        "get_neighbors(m.03_3d,cvg.computer_game_region.versions_released_in_this_region)",
        "get_relations(m.02plp2)",
        "get_neighbors(m.02plp2,business.brand.products)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.computer_peripheral.supporting_game_versions)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cn1dzn",
          "entity_name": "Sonic Free Riders"
        }
      ]
    },
    {
      "question": "What are some attractions to visit in Downtown Chicago that are situated in the Central Time zone?",
      "qid": "WebQTrn-825_8c6b952c6bd963f0ece4e401c9eb731a_cwq",
      "source": "cwq",
      "entities": {
        "Chicago": "m.01_d4",
        "Central Time Zone": "m.02fqwt"
      },
      "s_expression": "(AND (JOIN (R travel.travel_destination.tourist_attractions) m.01_d4) (AND (JOIN location.location.containedby m.01_d4) (JOIN location.location.time_zones m.02fqwt)))",
      "actions": [
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,travel.travel_destination.tourist_attractions)",
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,location.location.contains)",
        "get_relations(m.02fqwt)",
        "get_neighbors(m.02fqwt,time.time_zone.locations_in_this_time_zone)",
        "intersection(#1,#2)",
        "intersection(#0,#3)"
      ],
      "answer": [
        {
          "answer_argument": "m.01dlzc",
          "answer_type": "Entity",
          "entity_name": "Adler Planetarium"
        },
        {
          "answer_argument": "m.021czc",
          "answer_type": "Entity",
          "entity_name": "Field Museum of Natural History"
        }
      ]
    },
    {
      "question": "what song is the longest track on the beatles' unplugged?",
      "qid": "4301467000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Unplugged": "g.121p_wff"
      },
      "s_expression": "(ARGMAX (AND music.recording (JOIN (R music.release.track) (JOIN (R music.album.releases) g.121p_wff))) music.recording.length)",
      "actions": [
        "get_relations(g.121p_wff)",
        "get_neighbors(g.121p_wff,music.album.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.track)",
        "get_attributes(#1)",
        "argmax(#1,music.recording.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.011zkdk",
          "entity_name": "null"
        }
      ]
    },
    {
      "question": "What type of guitar is used by the composer Peakin'?",
      "qid": "WebQTrn-3122_7bbc18a9b3591ac64059dbf800743277_cwq",
      "source": "cwq",
      "entities": {
        "Guitar": "m.0342h",
        "Peakin'": "m.0135fs0w"
      },
      "s_expression": "(AND (JOIN (R music.group_member.instruments_played) (JOIN music.composer.compositions m.0135fs0w)) (JOIN music.instrument.family m.0342h))",
      "actions": [
        "get_relations(m.0135fs0w)",
        "get_neighbors(m.0135fs0w,music.composition.composer)",
        "get_relations(#0)",
        "get_neighbors(#0,music.group_member.instruments_played)",
        "get_relations(m.0342h)",
        "get_neighbors(m.0342h,music.instrument.variation)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.018vs",
          "answer_type": "Entity",
          "entity_name": "Bass guitar"
        }
      ]
    },
    {
      "question": "programming languages such as oberon and derivatives of algol follow what programming language paradigm?",
      "qid": "4300417008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Oberon": "m.05mrv",
        "ALGOL": "m.0q1x"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.0q1x)) (JOIN (R computer.programming_language.language_paradigms) m.05mrv)))",
      "actions": [
        "get_relations(m.0q1x)",
        "get_neighbors(m.0q1x,computer.programming_language.dialects)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.language_paradigms)",
        "get_relations(m.05mrv)",
        "get_neighbors(m.05mrv,computer.programming_language.language_paradigms)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.06w_b",
          "entity_name": "Structured programming"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05prj",
          "entity_name": "Object-oriented programming"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01c3bz",
          "entity_name": "Imperative programming"
        }
      ]
    },
    {
      "question": "When did the team that won the Super Bowl XVIII championship win a Championship last?",
      "qid": "WebQTrn-3176_c1e7b07d03c64591e05f8667754d3264_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl XVIII": "m.076s5"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.076s5)) time.event.end_date)",
      "actions": [
        "get_relations(m.076s5)",
        "get_neighbors(m.076s5,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0_gt_px",
          "answer_type": "Entity",
          "entity_name": "2003 AFC Championship Game"
        }
      ]
    },
    {
      "question": "which fictional character lives in seventh sphere of sacred band of stepsons?",
      "qid": "4300742000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Seventh sphere": "m.0cb9qd6",
        "Sacred Band of Stepsons": "m.0b_wsry"
      },
      "s_expression": "(AND fictional_universe.fictional_character (JOIN fictional_universe.fictional_character.places_lived (AND (JOIN fictional_universe.fictional_setting.setting_type m.0cb9qd6) (JOIN (R fictional_universe.fictional_universe.locations) m.0b_wsry))))",
      "actions": [
        "get_relations(m.0cb9qd6)",
        "get_neighbors(m.0cb9qd6,fictional_universe.type_of_fictional_setting.settings)",
        "get_relations(m.0b_wsry)",
        "get_neighbors(m.0b_wsry,fictional_universe.fictional_universe.locations)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,fictional_universe.fictional_setting.characters_that_have_lived_here)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bxtt5p",
          "entity_name": "Askelon of Meridian"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c0b19n",
          "entity_name": "Cime"
        }
      ]
    },
    {
      "question": "what is the camera storage type utilized by samsung l73 and the digital camera with iso setting of 320?",
      "qid": "4302372011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Samsung L73": "m.03q2mxt",
        "320": "m.04nrl4h"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.04nrl4h)) (JOIN (R digicams.digital_camera.supported_storage_types) m.03q2mxt)))",
      "actions": [
        "get_relations(m.04nrl4h)",
        "get_neighbors(m.04nrl4h,digicams.camera_iso.cameras)",
        "get_relations(#0)",
        "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.03q2mxt)",
        "get_neighbors(m.03q2mxt,digicams.digital_camera.supported_storage_types)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tthm",
          "entity_name": "Secure Digital"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0220vm1",
          "entity_name": "SDHC Card"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01z76m",
          "entity_name": "MultiMediaCard"
        }
      ]
    },
    {
      "question": "what is the website that belongs to the category of freebase and has a web api of developers.facebook.com?",
      "qid": "4300801008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Freebase": "m.021ympy",
        "Developers.facebook.com": "m.02k9b2h"
      },
      "s_expression": "(AND internet.website (AND (JOIN (R internet.website_category.sites) (JOIN (R internet.website.category) m.021ympy)) (JOIN internet.website.api m.02k9b2h)))",
      "actions": [
        "get_relations(m.021ympy)",
        "get_neighbors(m.021ympy,internet.website.category)",
        "get_relations(#0)",
        "get_neighbors(#0,internet.website_category.sites)",
        "get_relations(m.02k9b2h)",
        "get_neighbors(m.02k9b2h,internet.api.site)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02y1vz",
          "entity_name": "Facebook"
        }
      ]
    },
    {
      "question": "drugs formulated from turkey extract containing active ingredient vincristine have what dosage form?",
      "qid": "5400022008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Turkey extract": "m.0j4hdl5",
        "Vincristine": "m.0464jg"
      },
      "s_expression": "(AND medicine.drug_dosage_form (AND (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.formulation_of m.0j4hdl5)) (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.active_ingredient_moieties m.0464jg))))",
      "actions": [
        "get_relations(m.0j4hdl5)",
        "get_neighbors(m.0j4hdl5,medicine.drug.marketed_formulations)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.drug_formulation.dosage_form)",
        "get_relations(m.0464jg)",
        "get_neighbors(m.0464jg,medicine.drug_ingredient.active_moiety_of_formulation)",
        "get_relations(#2)",
        "get_neighbors(#2,medicine.drug_formulation.dosage_form)",
        "intersection(#1,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hqyxrs",
          "entity_name": "Injectable solution"
        }
      ]
    },
    {
      "question": "asiago cheese has the same texture as which cows milk cheese?",
      "qid": "4302129016000_grailqa",
      "source": "grailqa",
      "entities": {
        "cows": "m.01xq0k1",
        "Asiago cheese": "m.02k5rl"
      },
      "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.01xq0k1) (JOIN (R food.cheese_texture.cheeses) (JOIN food.cheese_texture.cheeses m.02k5rl))))",
      "actions": [
        "get_relations(m.01xq0k1)",
        "get_neighbors(m.01xq0k1,food.cheese_milk_source.cheeses)",
        "get_relations(m.02k5rl)",
        "get_neighbors(m.02k5rl,food.cheese.texture)",
        "get_relations(#1)",
        "get_neighbors(#1,food.cheese_texture.cheeses)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01glzg",
          "entity_name": "Cabrales cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01sbt1",
          "entity_name": "Parmigiano-Reggiano"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bf81p",
          "entity_name": "Mimolette"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01_r_",
          "entity_name": "Cheddar cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05btrvc",
          "entity_name": "Pleasant Ridge Reserve"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02h89z7",
          "entity_name": "Beaufort Alpage"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03h547",
          "entity_name": "Emmental cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b228",
          "entity_name": "Comté cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06stbl",
          "entity_name": "Beaufort cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064n52z",
          "entity_name": "São Jorge cheese"
        }
      ]
    },
    {
      "question": "What psychiatrist was influenced by Baron de Montesquieu?",
      "qid": "WebQTest-347_dc16add47f1fe2c9637b9c4455a3842d_cwq",
      "source": "cwq",
      "entities": {
        "Montesquieu": "m.0f9wd",
        "Psychiatrist": "m.02p0s5r"
      },
      "s_expression": "(AND (JOIN (R influence.influence_node.influenced) m.0f9wd) (JOIN influence.influence_node.influenced (JOIN people.person.profession m.02p0s5r)))",
      "actions": [
        "get_relations(m.0f9wd)",
        "get_neighbors(m.0f9wd,influence.influence_node.influenced)",
        "get_relations(m.02p0s5r)",
        "get_neighbors(m.02p0s5r,people.profession.people_with_this_profession)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.039n1",
          "answer_type": "Entity",
          "entity_name": "Georg Wilhelm Friedrich Hegel"
        }
      ]
    },
    {
      "question": "what dug dosage form exist for drugs formulated from co2 and has active ingredient levothyroxine sodium?",
      "qid": "5400022014000_grailqa",
      "source": "grailqa",
      "entities": {
        "co2": "m.01s7k",
        "levothyroxine sodium": "m.05h3j6"
      },
      "s_expression": "(AND medicine.drug_dosage_form (AND (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.formulation_of m.01s7k)) (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.active_ingredient_moieties m.05h3j6))))",
      "actions": [
        "get_relations(m.01s7k)",
        "get_neighbors(m.01s7k,medicine.drug.marketed_formulations)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.drug_formulation.dosage_form)",
        "get_relations(m.05h3j6)",
        "get_neighbors(m.05h3j6,medicine.drug_ingredient.active_moiety_of_formulation)",
        "get_relations(#2)",
        "get_neighbors(#2,medicine.drug_formulation.dosage_form)",
        "intersection(#1,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04k94",
          "entity_name": "Liquid"
        }
      ]
    },
    {
      "question": "What was the form of government practiced by ancient Greek spartans and the Anglo Portuguese troops?",
      "qid": "WebQTrn-1542_b4c60b12ec6afdfbfe919e251ae53d02_cwq",
      "source": "cwq",
      "entities": {
        "Sparta": "m.09472",
        "anglo portuguese troops": "m.0631lxh"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.09472) (JOIN government.form_of_government.countries (JOIN military.military_combatant.belongs_to_combatant_group m.0631lxh)))",
      "actions": [
        "get_relations(m.09472)",
        "get_neighbors(m.09472,location.country.form_of_government)",
        "get_relations(m.0631lxh)",
        "get_neighbors(m.0631lxh,military.military_combatant.includes_allies)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.04szc",
          "answer_type": "Entity",
          "entity_name": "Monarchy"
        }
      ]
    },
    {
      "question": "What location with an airport that serves Kleve (district) do Turkish people originate from?",
      "qid": "WebQTest-903_d4f167187dff4ae9cc84124971e18f1a_cwq",
      "source": "cwq",
      "entities": {
        "Turkish people": "m.0hb7h_z",
        "Kleve (district)": "m.01b98m"
      },
      "s_expression": "(AND (JOIN (R people.ethnicity.geographic_distribution) m.0hb7h_z) (JOIN location.location.contains (JOIN aviation.airport.serves m.01b98m)))",
      "actions": [
        "get_relations(m.0hb7h_z)",
        "get_neighbors(m.0hb7h_z,people.ethnicity.geographic_distribution)",
        "get_relations(m.01b98m)",
        "get_neighbors(m.01b98m,location.location.nearby_airports)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.containedby)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0345h",
          "answer_type": "Entity",
          "entity_name": "Germany"
        }
      ]
    },
    {
      "question": "what osteoporosis treatments has sludge syndrome side effects?",
      "qid": "4301182000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Osteoporosis": "m.05mdx",
        "SLUDGE syndrome": "m.025yc7f"
      },
      "s_expression": "(AND medicine.medical_treatment (AND (JOIN medicine.medical_treatment.side_effects (JOIN medicine.symptom.parent_symptom m.025yc7f)) (JOIN medicine.medical_treatment.used_to_treat m.05mdx)))",
      "actions": [
        "get_relations(m.025yc7f)",
        "get_neighbors(m.025yc7f,medicine.symptom.includes_symptoms)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.symptom.side_effect_of)",
        "get_relations(m.05mdx)",
        "get_neighbors(m.05mdx,medicine.disease.treatments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.037n_c",
          "entity_name": "Teriparatide"
        }
      ]
    },
    {
      "question": "how many spacecrafts did cnes and astrium make?",
      "qid": "3201449014000_grailqa",
      "source": "grailqa",
      "entities": {
        "CNES": "m.024fy1",
        "Astrium": "m.0271m6s"
      },
      "s_expression": "(COUNT (AND spaceflight.spacecraft (AND (JOIN spaceflight.spacecraft.manufacturer m.024fy1) (JOIN spaceflight.spacecraft.manufacturer m.0271m6s))))",
      "actions": [
        "get_relations(m.024fy1)",
        "get_neighbors(m.024fy1,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "get_relations(m.0271m6s)",
        "get_neighbors(m.0271m6s,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "which musical release is produced by i stand accused and released under the label f-beat?",
      "qid": "4301990009000_grailqa",
      "source": "grailqa",
      "entities": {
        "I Stand Accused": "m.0lsv3c",
        "F-Beat": "m.0dnz3xt"
      },
      "s_expression": "(AND music.release (AND (JOIN music.release.producers (JOIN (R music.recording.producer) m.0lsv3c)) (JOIN music.release.label m.0dnz3xt)))",
      "actions": [
        "get_relations(m.0lsv3c)",
        "get_neighbors(m.0lsv3c,music.recording.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,music.producer.releases_produced)",
        "get_relations(m.0dnz3xt)",
        "get_neighbors(m.0dnz3xt,music.record_label.releases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.039gt9l",
          "entity_name": "Trust"
        }
      ]
    },
    {
      "question": "Who is the Albuquerque native who started Pixar?",
      "qid": "WebQTrn-248_dba2e1a3e85d1a978a782c4741fb75ca_cwq",
      "source": "cwq",
      "entities": {
        "Pixar": "m.0kk9v",
        "Albuquerque, NM Metropolitan Statistical Area": "m.02qgyml"
      },
      "s_expression": "(AND (JOIN (R organization.organization.founders) m.0kk9v) (JOIN influence.influence_node.influenced (JOIN people.person.place_of_birth m.02qgyml)))",
      "actions": [
        "get_relations(m.0kk9v)",
        "get_neighbors(m.0kk9v,organization.organization.founders)",
        "get_relations(m.02qgyml)",
        "get_neighbors(m.02qgyml,location.location.people_born_here)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.06y3r",
          "answer_type": "Entity",
          "entity_name": "Steve Jobs"
        }
      ]
    },
    {
      "question": "what storage type is supported by kodak cx4200 and those with color filter array of bayer?",
      "qid": "4302099010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Kodak CX4200": "m.03q2mk0",
        "bayer": "m.02r8js"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN digicams.camera_storage_type.compatible_cameras m.03q2mk0) (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.color_filter_array_type m.02r8js))))",
      "actions": [
        "get_relations(m.03q2mk0)",
        "get_neighbors(m.03q2mk0,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.02r8js)",
        "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.supported_storage_types)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tthm",
          "entity_name": "Secure Digital"
        }
      ]
    },
    {
      "question": "Which cancer did the artist of \"My Baby Understands\" die from?",
      "qid": "WebQTrn-2936_b355e80c8422a5c1e8e503c46f3e9940_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "My Baby Understands": "m.0_jwv1v"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.composer.compositions m.0_jwv1v)) (JOIN people.cause_of_death.parent_cause_of_death m.0qcr0))",
      "actions": [
        "get_relations(m.0_jwv1v)",
        "get_neighbors(m.0_jwv1v,music.composition.composer)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,people.cause_of_death.includes_causes_of_death)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.04p3w",
          "answer_type": "Entity",
          "entity_name": "Lung cancer"
        }
      ]
    },
    {
      "question": "games developed by sonicteam and distributed through sonic cafe released where?",
      "qid": "4301141008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Sonic Cafe": "m.0d009p9",
        "sonicteam": "m.06nfl"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.0d009p9) (JOIN (R cvg.cvg_developer.game_versions_developed) m.06nfl))))",
      "actions": [
        "get_relations(m.0d009p9)",
        "get_neighbors(m.0d009p9,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.06nfl)",
        "get_neighbors(m.06nfl,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_3d",
          "entity_name": "Japan"
        }
      ]
    },
    {
      "question": "What location of Harvard  University sees many residents of Finnish American ethnicity?",
      "qid": "WebQTest-207_3fa0ffc5bda6429a6934f5779b320fe0_cwq",
      "source": "cwq",
      "entities": {
        "Harvard  University": "m.03ksy",
        "Finnish American": "m.03pqwy"
      },
      "s_expression": "(AND (JOIN (R location.location.containedby) m.03ksy) (JOIN location.location.people_born_here (JOIN people.person.ethnicity m.03pqwy)))",
      "actions": [
        "get_relations(m.03ksy)",
        "get_neighbors(m.03ksy,location.location.containedby)",
        "get_relations(m.03pqwy)",
        "get_neighbors(m.03pqwy,people.ethnicity.people)",
        "get_relations(#1)",
        "get_neighbors(#1,people.person.place_of_birth)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01qh7",
          "answer_type": "Entity",
          "entity_name": "Cambridge"
        }
      ]
    },
    {
      "question": "the quote at the touch of love, everyone becomes a poet., spoken by the angel of remembrance, is on what subject?",
      "qid": "4300443011000_grailqa",
      "source": "grailqa",
      "entities": {
        "At the touch of love, everyone becomes a poet.": "m.048h16j",
        "Angel of Remembrance": "m.0h3grm9"
      },
      "s_expression": "(AND media_common.quotation_subject (AND (JOIN (R media_common.quotation.subjects) (JOIN media_common.quotation.spoken_by_character m.0h3grm9)) (JOIN (R media_common.quotation.subjects) m.048h16j)))",
      "actions": [
        "get_relations(m.0h3grm9)",
        "get_neighbors(m.0h3grm9,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.subjects)",
        "get_relations(m.048h16j)",
        "get_neighbors(m.048h16j,media_common.quotation.subjects)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.048knlz",
          "entity_name": "Love"
        }
      ]
    },
    {
      "question": "what concertos was performed the most recently?",
      "qid": "4303240002000_grailqa",
      "source": "grailqa",
      "entities": {
        "concertos": "m.0c0y7"
      },
      "s_expression": "(ARGMAX (AND music.composition (JOIN music.composition.form (JOIN music.compositional_form.superforms m.0c0y7))) music.composition.date_of_first_performance)",
      "actions": [
        "get_relations(m.0c0y7)",
        "get_neighbors(m.0c0y7,music.compositional_form.subforms)",
        "get_relations(#0)",
        "get_neighbors(#0,music.compositional_form.compositions)",
        "get_attributes(#1)",
        "argmax(#1,music.composition.date_of_first_performance)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04j50hm",
          "entity_name": "Concerto for Piano and Orchestra no. 2"
        }
      ]
    },
    {
      "question": "what is the number of infectious diseases that can be transmitted by aedes aegypti?",
      "qid": "4303160002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Aedes aegypti": "m.06y6_w"
      },
      "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.06y6_w)))))",
      "actions": [
        "get_relations(m.06y6_w)",
        "get_neighbors(m.06y6_w,medicine.vector_of_disease.disease)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
        "get_relations(#1)",
        "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "79"
        }
      ]
    },
    {
      "question": "What year was the world series won by the team whose mascot is Mrs. Met?",
      "qid": "WebQTrn-2356_852ae10314bb05a85906d9d65112e76e_cwq",
      "source": "cwq",
      "entities": {
        "World Series": "m.0fjp3",
        "Mrs. Met": "m.0w7lzvh"
      },
      "s_expression": "(ARGMIN (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.0w7lzvh)) (JOIN sports.sports_championship_event.championship m.0fjp3)) time.event.start_date)",
      "actions": [
        "get_relations(m.0w7lzvh)",
        "get_neighbors(m.0w7lzvh,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.0fjp3)",
        "get_neighbors(m.0fjp3,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmin(#3,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04jg9_",
          "answer_type": "Entity",
          "entity_name": "1969 World Series"
        }
      ]
    },
    {
      "question": "what is the storage type supported by olympus om-d e-m5 and those with color filter array of bayer?",
      "qid": "4302099001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Olympus OM-D E-M5": "m.0j1zvyk",
        "bayer": "m.02r8js"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN digicams.camera_storage_type.compatible_cameras m.0j1zvyk) (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.color_filter_array_type m.02r8js))))",
      "actions": [
        "get_relations(m.0j1zvyk)",
        "get_neighbors(m.0j1zvyk,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.02r8js)",
        "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.supported_storage_types)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tthm",
          "entity_name": "Secure Digital"
        }
      ]
    },
    {
      "question": "What was the last Superbowl the team that uses M&T Bank Stadium won?",
      "qid": "WebQTest-595_a65373d6ffaa966c347087864c895897_cwq",
      "source": "cwq",
      "entities": {
        "Superbowl": "m.06x5s",
        "M&T Bank Stadium": "m.01yq7r"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.01yq7r)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.01yq7r)",
        "get_neighbors(m.01yq7r,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0642vqv",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLVII"
        }
      ]
    },
    {
      "question": "the text at the core of catholic and honored by sacraments practitioners is what?",
      "qid": "4300898012000_grailqa",
      "source": "grailqa",
      "entities": {
        "catholic": "m.0c8wxp",
        "sacraments": "m.06xq6"
      },
      "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.0c8wxp) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.06xq6))))",
      "actions": [
        "get_relations(m.0c8wxp)",
        "get_neighbors(m.0c8wxp,religion.religion.texts)",
        "get_relations(m.06xq6)",
        "get_neighbors(m.06xq6,religion.religious_practice.practice_of)",
        "get_relations(#1)",
        "get_neighbors(#1,religion.religion.texts)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.015j7",
          "entity_name": "The Bible"
        }
      ]
    },
    {
      "question": "What is the home stadium of the team that won the 2012 World Series Championship?",
      "qid": "WebQTrn-52_87afbf2481df60df8476b920f00c4247_cwq",
      "source": "cwq",
      "entities": {
        "2012 World Series": "m.0ds8qct"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.championships m.0ds8qct)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.0ds8qct)",
        "get_neighbors(m.0ds8qct,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.01_gsg",
          "answer_type": "Entity",
          "entity_name": "AT&T Park"
        }
      ]
    },
    {
      "question": "Where is German spoken that contains an airport that serves the Kleve district?",
      "qid": "WebQTest-1117_d4f167187dff4ae9cc84124971e18f1a_cwq",
      "source": "cwq",
      "entities": {
        "German": "m.04306rv",
        "kleve district": "m.01b98m"
      },
      "s_expression": "(AND (JOIN (R language.human_language.countries_spoken_in) m.04306rv) (JOIN location.location.contains (JOIN aviation.airport.serves m.01b98m)))",
      "actions": [
        "get_relations(m.04306rv)",
        "get_neighbors(m.04306rv,language.human_language.countries_spoken_in)",
        "get_relations(m.01b98m)",
        "get_neighbors(m.01b98m,location.location.nearby_airports)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.containedby)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0345h",
          "answer_type": "Entity",
          "entity_name": "Germany"
        }
      ]
    },
    {
      "question": "When did owner Bill Neukom's sports team last win the world series?",
      "qid": "WebQTest-832_a188aff4a054e1ec66fafba1b8021f67_cwq",
      "source": "cwq",
      "entities": {
        "Bill Neukom": "m.03cyzbv"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.03cyzbv)) time.event.start_date)",
      "actions": [
        "get_relations(m.03cyzbv)",
        "get_neighbors(m.03cyzbv,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0117q3yz"
        }
      ]
    },
    {
      "question": "what is the position played by both daequan cook and the player who authored if ifs were gifts, every day would be christmas.?",
      "qid": "4300563010000_grailqa",
      "source": "grailqa",
      "entities": {
        "If ifs were gifts, every day would be Christmas.": "m.0jvfpbf",
        "Daequan Cook": "m.02q9xhh"
      },
      "s_expression": "(AND basketball.basketball_position (AND (JOIN basketball.basketball_position.players (JOIN (R media_common.quotation.author) m.0jvfpbf)) (JOIN basketball.basketball_position.players m.02q9xhh)))",
      "actions": [
        "get_relations(m.0jvfpbf)",
        "get_neighbors(m.0jvfpbf,media_common.quotation.author)",
        "get_relations(#0)",
        "get_neighbors(#0,basketball.basketball_player.position_s)",
        "get_relations(m.02q9xhh)",
        "get_neighbors(m.02q9xhh,basketball.basketball_player.position_s)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0355dz",
          "entity_name": "Small forward"
        }
      ]
    },
    {
      "question": "What type of cancer killed the writer of the lyric for \"Down Deep Inside?",
      "qid": "WebQTrn-2936_2d9ee86b602c5e7b7a18f53ffa10f1ee_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "Down Deep Inside": "m.0l0zr4"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.lyricist.lyrics_written m.0l0zr4)) (JOIN people.cause_of_death.parent_cause_of_death m.0qcr0))",
      "actions": [
        "get_relations(m.0l0zr4)",
        "get_neighbors(m.0l0zr4,music.composition.lyricist)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,people.cause_of_death.includes_causes_of_death)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.04p3w",
          "answer_type": "Entity",
          "entity_name": "Lung cancer"
        }
      ]
    },
    {
      "question": "where can you get games developed by nintendo on vc?",
      "qid": "498000501_graphquestions",
      "source": "graphquestions",
      "entities": {
        "Nintendo": "m.059wk",
        "vc": "m.07sg3j"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.developer m.059wk) (JOIN cvg.game_version.distributed_through m.07sg3j))))",
      "actions": [
        "get_relations(m.059wk)",
        "get_neighbors(m.059wk,cvg.cvg_developer.game_versions_developed)",
        "get_relations(m.07sg3j)",
        "get_neighbors(m.07sg3j,cvg.computer_game_distribution_system.games_distributed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02j9z",
          "entity_name": "Europe"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_3d",
          "entity_name": "Japan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059g4",
          "entity_name": "North America"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0chghy",
          "entity_name": "Australia"
        }
      ]
    },
    {
      "question": "how many religions practice protestantism and anglicans?",
      "qid": "3204573009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Protestantism": "m.05sfs",
        "anglicans": "m.0n2g"
      },
      "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.05sfs) (JOIN (R religion.religion.practices) m.0n2g))))",
      "actions": [
        "get_relations(m.05sfs)",
        "get_neighbors(m.05sfs,religion.religion.practices)",
        "get_relations(m.0n2g)",
        "get_neighbors(m.0n2g,religion.religion.practices)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "which olympic event was officially contested in the sarajevo winter olympics,as well as other olympic games in albertville?",
      "qid": "4300161006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Albertville": "m.0gz4f",
        "sarajevo winter olympics": "m.0sx92"
      },
      "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.0gz4f)) (JOIN olympics.olympic_event.olympic_games_contested m.0sx92)))",
      "actions": [
        "get_relations(m.0gz4f)",
        "get_neighbors(m.0gz4f,olympics.olympic_host_city.olympics_hosted)",
        "get_relations(#0)",
        "get_neighbors(#0,olympics.olympic_games.events)",
        "get_relations(m.0sx92)",
        "get_neighbors(m.0sx92,olympics.olympic_games.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_v0",
          "entity_name": "Women's 1000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqf4",
          "entity_name": "Men's Individual Normal Hill"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_t4",
          "entity_name": "Women's 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpx1",
          "entity_name": "Women's Slalom"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpxf",
          "entity_name": "Women's Downhill"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpyc",
          "entity_name": "Women's Giant Slalom"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqcn",
          "entity_name": "Women's Singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqdl",
          "entity_name": "Men's 500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqf_",
          "entity_name": "Men's 10000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_xm",
          "entity_name": "Men's 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zhzln",
          "entity_name": "Men's 5000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07nxg0q",
          "entity_name": "Men's Nordic Combined, Individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07r8jsc",
          "entity_name": "Men's Cross-country, 30km"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07rcjwr",
          "entity_name": "Men's Large hill individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bj4fg7",
          "entity_name": "Men's singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07sgjwh",
          "entity_name": "Women's 5km"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wq88",
          "entity_name": "Men's 20 km Individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zj03w",
          "entity_name": "Women's Singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zj032",
          "entity_name": "Men's Singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqfq",
          "entity_name": "Women's 3000 m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_rx",
          "entity_name": "Women's 500 m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_x2",
          "entity_name": "Men's 1000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpy5",
          "entity_name": "Men's 10 km Sprint"
        }
      ]
    },
    {
      "question": "how many contents about interview tips are produced by the producer of npr all things considered?",
      "qid": "4303008006000_grailqa",
      "source": "grailqa",
      "entities": {
        "interview tips": "m.01jdpf",
        "npr all things considered": "m.01ysm8"
      },
      "s_expression": "(COUNT (AND broadcast.content (AND (JOIN (R broadcast.genre.content) m.01jdpf) (JOIN (R broadcast.producer.produces) (JOIN broadcast.producer.produces m.01ysm8)))))",
      "actions": [
        "get_relations(m.01jdpf)",
        "get_neighbors(m.01jdpf,broadcast.genre.content)",
        "get_relations(m.01ysm8)",
        "get_neighbors(m.01ysm8,broadcast.content.producer)",
        "get_relations(#1)",
        "get_neighbors(#1,broadcast.producer.produces)",
        "intersection(#0,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "which political ideology does the national party south africa and victorian state election, 2010 follow?",
      "qid": "4302370014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Victorian state election, 2010": "m.02z2pzc",
        "National Party South Africa": "m.05sz_yt"
      },
      "s_expression": "(AND government.political_ideology (AND (JOIN government.political_ideology.political_parties (JOIN (R government.parliamentary_election.government_formed_by) m.02z2pzc)) (JOIN (R government.political_party.ideology) m.05sz_yt)))",
      "actions": [
        "get_relations(m.02z2pzc)",
        "get_neighbors(m.02z2pzc,government.parliamentary_election.government_formed_by)",
        "get_relations(#0)",
        "get_neighbors(#0,government.political_party.ideology)",
        "get_relations(m.05sz_yt)",
        "get_neighbors(m.05sz_yt,government.political_party.ideology)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01yqp",
          "entity_name": "Conservatism"
        }
      ]
    },
    {
      "question": "what cloud, of the family c (low-level) cloud family, has the maximum minimum altitude?",
      "qid": "4303227001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Family C (low-level)": "m.01xt7_5"
      },
      "s_expression": "(ARGMAX (AND meteorology.cloud (JOIN (R meteorology.cloud.cloud_family) (JOIN meteorology.cloud.classification m.01xt7_5))) meteorology.cloud.minimum_altitude)",
      "actions": [
        "get_relations(m.01xt7_5)",
        "get_neighbors(m.01xt7_5,meteorology.cloud_classification.clouds)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.cloud.cloud_family)",
        "get_attributes(#1)",
        "argmax(#1,meteorology.cloud.minimum_altitude)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0csh5",
          "entity_name": "Cumulus"
        }
      ]
    },
    {
      "question": "what science discipline does sofia kovalevskaia conduct research in?",
      "qid": "4302233007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Science": "m.06mq7",
        "sofia kovalevskaia": "m.0qgq5"
      },
      "s_expression": "(AND education.field_of_study (AND (JOIN (R education.field_of_study.subdisciplines) m.06mq7) (JOIN (R education.field_of_study.subdiscipline_of) (JOIN (R education.academic.research_areas) m.0qgq5))))",
      "actions": [
        "get_relations(m.06mq7)",
        "get_neighbors(m.06mq7,education.field_of_study.subdisciplines)",
        "get_relations(m.0qgq5)",
        "get_neighbors(m.0qgq5,education.academic.research_areas)",
        "get_relations(#1)",
        "get_neighbors(#1,education.field_of_study.subdiscipline_of)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.09pz7",
          "entity_name": "Natural science"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09vvxv",
          "entity_name": "Formal science"
        }
      ]
    },
    {
      "question": "What cancer type did Natural Mystic's composer die from?",
      "qid": "WebQTrn-3531_707aed4fd620affc8161ec7c0a94dd5b_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "Natural Mystic": "m.0zh1gnt"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.composer.compositions m.0zh1gnt)) (JOIN people.cause_of_death.parent_cause_of_death m.0qcr0))",
      "actions": [
        "get_relations(m.0zh1gnt)",
        "get_neighbors(m.0zh1gnt,music.composition.composer)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,people.cause_of_death.includes_causes_of_death)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.046wcr",
          "answer_type": "Entity",
          "entity_name": "Acral lentiginous melanoma"
        },
        {
          "answer_argument": "m.04kndz2",
          "answer_type": "Entity",
          "entity_name": "Metastatic Melanoma"
        }
      ]
    },
    {
      "question": "what is the number of infectious diseases that can be transmitted by bat species?",
      "qid": "4303160010000_grailqa",
      "source": "grailqa",
      "entities": {
        "bat species": "m.01h44"
      },
      "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.01h44)))))",
      "actions": [
        "get_relations(m.01h44)",
        "get_neighbors(m.01h44,medicine.vector_of_disease.disease)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
        "get_relations(#1)",
        "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "79"
        }
      ]
    },
    {
      "question": "what is a common german cuisine dish that contains pork belly?",
      "qid": "4301356003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Pork belly": "m.058ksc",
        "german cuisine": "m.038rz"
      },
      "s_expression": "(AND food.type_of_dish (JOIN food.type_of_dish.dishes (AND (JOIN food.dish.ingredients m.058ksc) (JOIN (R dining.cuisine.dishes) m.038rz))))",
      "actions": [
        "get_relations(m.058ksc)",
        "get_neighbors(m.058ksc,food.ingredient.dishes)",
        "get_relations(m.038rz)",
        "get_neighbors(m.038rz,dining.cuisine.dishes)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,food.dish.type_of_dish1)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0kdzn",
          "entity_name": "Sausage"
        }
      ]
    },
    {
      "question": "Sports team owner Wyc Grousbeck first won a championship in what year?",
      "qid": "WebQTrn-2333_6bddb2cfae99a6fca8b5bb40631d71eb_cwq",
      "source": "cwq",
      "entities": {
        "Wyc Grousbeck": "m.0b7hk2"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.0b7hk2)) time.event.start_date)",
      "actions": [
        "get_relations(m.0b7hk2)",
        "get_neighbors(m.0b7hk2,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0cs2n0",
          "answer_type": "Entity",
          "entity_name": "1957 NBA Finals"
        }
      ]
    },
    {
      "question": "what is total amount of spacecraft's that german aerospace center and agency manufacture?",
      "qid": "3201449012000_grailqa",
      "source": "grailqa",
      "entities": {
        "German Aerospace Center": "m.02_9td",
        "agency": "m.02t63"
      },
      "s_expression": "(COUNT (AND spaceflight.spacecraft (AND (JOIN spaceflight.spacecraft.manufacturer m.02_9td) (JOIN spaceflight.spacecraft.manufacturer m.02t63))))",
      "actions": [
        "get_relations(m.02_9td)",
        "get_neighbors(m.02_9td,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "get_relations(m.02t63)",
        "get_neighbors(m.02t63,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "how many active websites does simply hired, inc. own?",
      "qid": "3206340002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Active": "m.02hsn4g",
        "Simply Hired, Inc.": "m.0rynfrt"
      },
      "s_expression": "(COUNT (AND internet.website (AND (JOIN internet.website.status m.02hsn4g) (JOIN (R internet.website_owner.websites_owned) m.0rynfrt))))",
      "actions": [
        "get_relations(m.02hsn4g)",
        "get_neighbors(m.02hsn4g,internet.website_status.sites)",
        "get_relations(m.0rynfrt)",
        "get_neighbors(m.0rynfrt,internet.website_owner.websites_owned)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what is the number of infectious diseases that are transmitted by the anopheles gambiae?",
      "qid": "4303160001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Anopheles gambiae": "m.0bk43r"
      },
      "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.0bk43r)))))",
      "actions": [
        "get_relations(m.0bk43r)",
        "get_neighbors(m.0bk43r,medicine.vector_of_disease.disease)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
        "get_relations(#1)",
        "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "30"
        }
      ]
    },
    {
      "question": "what cheese with a semi-soft texture is sourced from water buffalo and cows?",
      "qid": "4301155002000_grailqa",
      "source": "grailqa",
      "entities": {
        "cows": "m.01xq0k1",
        "Water buffalo": "m.0g0zc",
        "semi-soft": "m.02h83jd"
      },
      "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.01xq0k1) (AND (JOIN food.cheese.source_of_milk m.0g0zc) (JOIN food.cheese.texture m.02h83jd))))",
      "actions": [
        "get_relations(m.01xq0k1)",
        "get_neighbors(m.01xq0k1,food.cheese_milk_source.cheeses)",
        "get_relations(m.0g0zc)",
        "get_neighbors(m.0g0zc,food.cheese_milk_source.cheeses)",
        "get_relations(m.02h83jd)",
        "get_neighbors(m.02h83jd,food.cheese_texture.cheeses)",
        "intersection(#1,#2)",
        "intersection(#0,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.055w7",
          "entity_name": "Mozzarella"
        }
      ]
    },
    {
      "question": "What time zone is shared by Virginia and areas near the Toronto Pearson International Airport?",
      "qid": "WebQTrn-3099_5411ee5b895e479b24ac562f2ac9b3f3_cwq",
      "source": "cwq",
      "entities": {
        "Virginia": "m.07z1m",
        "Toronto Pearson International Airport": "m.06k9l7"
      },
      "s_expression": "(AND (JOIN (R location.location.time_zones) m.07z1m) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.06k9l7)))",
      "actions": [
        "get_relations(m.07z1m)",
        "get_neighbors(m.07z1m,location.location.time_zones)",
        "get_relations(m.06k9l7)",
        "get_neighbors(m.06k9l7,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02hcv8",
          "answer_type": "Entity",
          "entity_name": "Eastern Time Zone"
        }
      ]
    },
    {
      "question": "which parts of the world are games developed by nintendo available on virtual console?",
      "qid": "498000400_graphquestions",
      "source": "graphquestions",
      "entities": {
        "Nintendo": "m.059wk",
        "Virtual Console": "m.07sg3j"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.developer m.059wk) (JOIN cvg.game_version.distributed_through m.07sg3j))))",
      "actions": [
        "get_relations(m.059wk)",
        "get_neighbors(m.059wk,cvg.cvg_developer.game_versions_developed)",
        "get_relations(m.07sg3j)",
        "get_neighbors(m.07sg3j,cvg.computer_game_distribution_system.games_distributed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02j9z",
          "entity_name": "Europe"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03_3d",
          "entity_name": "Japan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059g4",
          "entity_name": "North America"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0chghy",
          "entity_name": "Australia"
        }
      ]
    },
    {
      "question": "in the model 2014 ford focus, what are the automotive classes of hyundai atos?",
      "qid": "4300308001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Hyundai Atos": "m.04kr6b",
        "2014 Ford Focus": "m.0_v8m4q"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN (R automotive.model.automotive_class) m.04kr6b) (JOIN automotive.automotive_class.examples (JOIN automotive.model.model_years m.0_v8m4q))))",
      "actions": [
        "get_relations(m.04kr6b)",
        "get_neighbors(m.04kr6b,automotive.model.automotive_class)",
        "get_relations(m.0_v8m4q)",
        "get_neighbors(m.0_v8m4q,automotive.model_year.model)",
        "get_relations(#1)",
        "get_neighbors(#1,automotive.model.automotive_class)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01cmcs",
          "entity_name": "Hatchback"
        }
      ]
    },
    {
      "question": "what museums share their type with the emphietsoglou gallery museum and kunsthalle bremen?",
      "qid": "5400031013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Emphietsoglou Gallery Museum": "m.04071n2",
        "Kunsthalle Bremen": "m.0bkjbb"
      },
      "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.04071n2) (JOIN architecture.type_of_museum.museums m.0bkjbb)))))",
      "actions": [
        "get_relations(m.04071n2)",
        "get_neighbors(m.04071n2,architecture.museum.type_of_museum)",
        "get_relations(m.0bkjbb)",
        "get_neighbors(m.0bkjbb,architecture.museum.type_of_museum)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,architecture.type_of_museum.museums)",
        "get_relations(#3)",
        "get_neighbors(#3,architecture.museum.type_of_museum)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gz",
          "entity_name": "Modern art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c9td2",
          "entity_name": "National museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9jkk",
          "entity_name": "Architecture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgh_k",
          "entity_name": "History museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgjgh",
          "entity_name": "Natural history museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0jvjpx6",
          "entity_name": "Antiquities museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026w5hv",
          "entity_name": "Contemporary art gallery"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pn3n6",
          "entity_name": "Historic house museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0528d17",
          "entity_name": "Photography Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kt8qr",
          "entity_name": "Culture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gt",
          "entity_name": "Archaeology museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059x_pp",
          "entity_name": "Archaeological Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wvyw7",
          "entity_name": "Design museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027v0wz",
          "entity_name": "University museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059vqps",
          "entity_name": "Ancient Art Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9gbh",
          "entity_name": "Jewish museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j58y",
          "entity_name": "Science museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0w_y7rb",
          "entity_name": "Asian art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99t0",
          "entity_name": "Decorative art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0djx8f",
          "entity_name": "Children's museum"
        }
      ]
    },
    {
      "question": "Where does the sports team whose home arena is Sports Authority Field at Mile High play?",
      "qid": "WebQTrn-2684_5ceec784a68a7d54ead4e89ec49aa0e4_cwq",
      "source": "cwq",
      "entities": {
        "Sports Authority Field at Mile High": "m.02hxv8"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.arena_stadium m.02hxv8)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.02hxv8)",
        "get_neighbors(m.02hxv8,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.02hxv8",
          "answer_type": "Entity",
          "entity_name": "Sports Authority Field at Mile High"
        }
      ]
    },
    {
      "question": "state the number of religious texts of feast of assumption among the texts on lutheran church.",
      "qid": "4303883010000_grailqa",
      "source": "grailqa",
      "entities": {
        "lutheran church": "m.04pk9",
        "Feast of Assumption": "m.0_mrbts"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of (JOIN (R time.holiday.featured_in_religions) m.0_mrbts)) (JOIN (R religion.religion.texts) m.04pk9))))",
      "actions": [
        "get_relations(m.0_mrbts)",
        "get_neighbors(m.0_mrbts,time.holiday.featured_in_religions)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religion.texts)",
        "get_relations(m.04pk9)",
        "get_neighbors(m.04pk9,religion.religion.texts)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "What type of government is used in the country of Japan and where Baldur von Schirach was born?",
      "qid": "WebQTest-1742_3f76d491e90682cc29e3de2546e1f9c5_cwq",
      "source": "cwq",
      "entities": {
        "Japan": "m.03_3d",
        "Baldur von Schirach": "m.0143sn"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.03_3d) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.0143sn)))",
      "actions": [
        "get_relations(m.03_3d)",
        "get_neighbors(m.03_3d,location.country.form_of_government)",
        "get_relations(m.0143sn)",
        "get_neighbors(m.0143sn,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20"
        }
      ]
    },
    {
      "question": "what do the breeds of governor moscow and utonagan share in terms of temperament?",
      "qid": "4300459010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Governor Moscow": "m.0j1t2s6",
        "Utonagan": "m.054kbj"
      },
      "s_expression": "(AND biology.breed_temperament (AND (JOIN (R biology.animal_breed.temperament) (JOIN (R biology.pedigreed_animal.breed) m.0j1t2s6)) (JOIN (R biology.animal_breed.temperament) m.054kbj)))",
      "actions": [
        "get_relations(m.0j1t2s6)",
        "get_neighbors(m.0j1t2s6,biology.pedigreed_animal.breed)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.054kbj)",
        "get_neighbors(m.054kbj,biology.animal_breed.temperament)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04krk8w",
          "entity_name": "Even Tempered"
        }
      ]
    },
    {
      "question": "how many contents about sports films are produced by the producer of wait wait... don't tell me?",
      "qid": "4303008001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Sports films": "m.01z02hx",
        "wait wait... don't tell me": "m.041z1gp"
      },
      "s_expression": "(COUNT (AND broadcast.content (AND (JOIN (R broadcast.genre.content) m.01z02hx) (JOIN (R broadcast.producer.produces) (JOIN broadcast.producer.produces m.041z1gp)))))",
      "actions": [
        "get_relations(m.01z02hx)",
        "get_neighbors(m.01z02hx,broadcast.genre.content)",
        "get_relations(m.041z1gp)",
        "get_neighbors(m.041z1gp,broadcast.content.producer)",
        "get_relations(#1)",
        "get_neighbors(#1,broadcast.producer.produces)",
        "intersection(#0,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "list down all the military units which participated in the gettysburg battle and are from the same place as 1st louisiana native guard?",
      "qid": "250000501_graphquestions",
      "source": "graphquestions",
      "entities": {
        "gettysburg battle": "m.01jnm",
        "1st Louisiana Native Guard": "m.0hr6dl9"
      },
      "s_expression": "(AND base.americancivilwar.military_unit (AND (JOIN military.military_unit.place_of_origin (JOIN (R military.military_unit.place_of_origin) m.0hr6dl9)) (JOIN base.americancivilwar.military_unit.conflicts_participated_in m.01jnm)))",
      "actions": [
        "get_relations(m.0hr6dl9)",
        "get_neighbors(m.0hr6dl9,military.military_unit.place_of_origin)",
        "get_relations(#0)",
        "get_neighbors(#0,military.military_unit_place_of_origin.military_units)",
        "get_relations(m.01jnm)",
        "get_neighbors(m.01jnm,base.americancivilwar.battle.military_units_involved_in_this_conflict)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04gjww9",
          "entity_name": "10th Louisiana Infantry"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l684",
          "entity_name": "15th Louisiana Infantry Regiment"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l66_",
          "entity_name": "14th Louisiana Infantry Regiment"
        }
      ]
    },
    {
      "question": "what automotive classes of checker marathon had been modeled after the 2014 ford focus?",
      "qid": "4300308002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Checker Marathon": "m.072xlw",
        "2014 Ford Focus": "m.0_v8m4q"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN (R automotive.model.automotive_class) m.072xlw) (JOIN automotive.automotive_class.examples (JOIN automotive.model.model_years m.0_v8m4q))))",
      "actions": [
        "get_relations(m.072xlw)",
        "get_neighbors(m.072xlw,automotive.model.automotive_class)",
        "get_relations(m.0_v8m4q)",
        "get_neighbors(m.0_v8m4q,automotive.model_year.model)",
        "get_relations(#1)",
        "get_neighbors(#1,automotive.model.automotive_class)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.016gvg",
          "entity_name": "Station Wagon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.021mp2",
          "entity_name": "Sedan"
        }
      ]
    },
    {
      "question": "what is the religion that is part of protestantism and has the same practices as hinduism?",
      "qid": "4300140005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Protestantism": "m.05sfs",
        "Hinduism": "m.03j6c"
      },
      "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.03j6c)) (JOIN religion.religion.is_part_of m.05sfs)))",
      "actions": [
        "get_relations(m.03j6c)",
        "get_neighbors(m.03j6c,religion.religion.practices)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religious_practice.practice_of)",
        "get_relations(m.05sfs)",
        "get_neighbors(m.05sfs,religion.religion.includes)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.072w0",
          "entity_name": "Seventh-day Adventist Church"
        }
      ]
    },
    {
      "question": "what breed has the same temperament as tahltan bear dog and staffordshire bull terrier?",
      "qid": "4300795011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Tahltan Bear Dog": "m.0gh46s",
        "Staffordshire Bull Terrier": "m.01kv93"
      },
      "s_expression": "(AND biology.animal_breed (JOIN biology.animal_breed.temperament (AND (JOIN (R biology.animal_breed.temperament) m.0gh46s) (JOIN biology.breed_temperament.breeds m.01kv93))))",
      "actions": [
        "get_relations(m.0gh46s)",
        "get_neighbors(m.0gh46s,biology.animal_breed.temperament)",
        "get_relations(m.01kv93)",
        "get_neighbors(m.01kv93,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,biology.breed_temperament.breeds)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02cj3",
          "entity_name": "Dachshund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05698d",
          "entity_name": "Mudhol Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0khhs",
          "entity_name": "Chihuahua"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gx1zf",
          "entity_name": "Billy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01nw62",
          "entity_name": "Rottweiler"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07dvrh",
          "entity_name": "Dogue de Bordeaux"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0km5c",
          "entity_name": "German Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01s7fj",
          "entity_name": "Shih Tzu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01x5q1",
          "entity_name": "Jämthund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0403wp9",
          "entity_name": "Muggin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0410k_5",
          "entity_name": "Treeing Tennessee Brindle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04gp8k",
          "entity_name": "English Mastiff"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08mgkp",
          "entity_name": "American Staghound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01hxnh",
          "entity_name": "Bullmastiff"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01p33b",
          "entity_name": "Mudi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026qz0j",
          "entity_name": "Polish Hunting Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027dn39",
          "entity_name": "Gran Mastín de Borínquen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pp4mc",
          "entity_name": "Bohemian Shepherd"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qx4jn",
          "entity_name": "IrishJacks"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0410kz_",
          "entity_name": "Schapendoes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04mhks",
          "entity_name": "Jagdterrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05py4h",
          "entity_name": "Old Danish Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0632tn",
          "entity_name": "Norwegian Buhund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07n97g",
          "entity_name": "Romanian Mioritic Shepherd Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08pb1g",
          "entity_name": "Australian Stumpy Tail Cattle Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08r319",
          "entity_name": "Bavarian Mountain Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b3s8y",
          "entity_name": "Czechoslovakian Wolfdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bq064",
          "entity_name": "Bakharwal dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0fxnhn",
          "entity_name": "Perro de Presa Mallorquin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.017t3p",
          "entity_name": "Airedale Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01_gx_",
          "entity_name": "Yorkshire Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026nbpz",
          "entity_name": "Mountain View Cur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026s0q_",
          "entity_name": "Bosnian Coarse-haired Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02f1fz",
          "entity_name": "West Highland White Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02gf0p",
          "entity_name": "Australian Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02x2kwx",
          "entity_name": "Transylvanian Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03bt6h",
          "entity_name": "Hamiltonstövare"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03n1dn",
          "entity_name": "Fila Brasileiro"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04m4bq",
          "entity_name": "American Staffordshire Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04sxdd8",
          "entity_name": "Stichelhaar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04y09b",
          "entity_name": "Landseer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051ppn",
          "entity_name": "Glen of Imaal Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0622q7",
          "entity_name": "Olde English Bulldogge"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079p_1",
          "entity_name": "Mountain Cur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08qytw",
          "entity_name": "Finnish Lapphund"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02xlqx",
          "entity_name": "Basset Fauve de Bretagne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0354by",
          "entity_name": "Grand Basset Griffon Vendéen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.049jr6",
          "entity_name": "American Pit Bull Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05h19n",
          "entity_name": "Bull Terrier (Miniature)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02rxz2k",
          "entity_name": "Bucovina Shepherd Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cqg0t",
          "entity_name": "Akita"
        }
      ]
    },
    {
      "question": "What movies in the same genre as Abracadabra was Adam Sandler in?",
      "qid": "WebQTrn-1677_eccab81d41f566ce2b4f020c37219ae5_cwq",
      "source": "cwq",
      "entities": {
        "Adam Sandler": "m.0pz91",
        "Abracadabra": "g.11b6_n6p_h"
      },
      "s_expression": "(AND (JOIN (R film.producer.film) m.0pz91) (JOIN film.film.genre (JOIN film.film_genre.films_in_this_genre g.11b6_n6p_h)))",
      "actions": [
        "get_relations(m.0pz91)",
        "get_neighbors(m.0pz91,film.producer.film)",
        "get_relations(g.11b6_n6p_h)",
        "get_neighbors(g.11b6_n6p_h,film.film.genre)",
        "get_relations(#1)",
        "get_neighbors(#1,film.film_genre.films_in_this_genre)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.010rdrd1"
        },
        {
          "answer_argument": "m.02m7tn"
        }
      ]
    },
    {
      "question": "what trio was performed the most recently?",
      "qid": "4303240013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Trio": "m.0b_stsk"
      },
      "s_expression": "(ARGMAX (AND music.composition (JOIN music.composition.form (JOIN music.compositional_form.superforms m.0b_stsk))) music.composition.date_of_first_performance)",
      "actions": [
        "get_relations(m.0b_stsk)",
        "get_neighbors(m.0b_stsk,music.compositional_form.subforms)",
        "get_relations(#0)",
        "get_neighbors(#0,music.compositional_form.compositions)",
        "get_attributes(#1)",
        "argmax(#1,music.composition.date_of_first_performance)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bkqlz",
          "entity_name": "Piano Trio in A minor"
        }
      ]
    },
    {
      "question": "what martial art is in the same category as taekwon do and has weapon?",
      "qid": "4301064006000_grailqa",
      "source": "grailqa",
      "entities": {
        "taekwon do": "m.07gyv",
        "Weapon": "m.03nh838"
      },
      "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.07gyv)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.03nh838)))",
      "actions": [
        "get_relations(m.07gyv)",
        "get_neighbors(m.07gyv,martial_arts.martial_art.category)",
        "get_relations(#0)",
        "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
        "get_relations(m.03nh838)",
        "get_neighbors(m.03nh838,martial_arts.martial_art_category.martial_arts)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03bx9vm",
          "entity_name": "Pencak Silat"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0153hr",
          "entity_name": "Silat Melayu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.055rn5",
          "entity_name": "Kuk Sool Won"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06k44z",
          "entity_name": "Modern Arnis"
        }
      ]
    },
    {
      "question": "what martial art involving hybrid is in the same category as kurash?",
      "qid": "4301064011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Kurash": "m.01w2pl",
        "Hybrid": "m.03nzdm_"
      },
      "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.01w2pl)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.03nzdm_)))",
      "actions": [
        "get_relations(m.01w2pl)",
        "get_neighbors(m.01w2pl,martial_arts.martial_art.category)",
        "get_relations(#0)",
        "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
        "get_relations(m.03nzdm_)",
        "get_neighbors(m.03nzdm_,martial_arts.martial_art_category.martial_arts)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03bs3p",
          "entity_name": "Sanshou"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02618d8",
          "entity_name": "Russian All-Round Fighting"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.048yh",
          "entity_name": "Krav Maga"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b65c",
          "entity_name": "Hwa Rang Do"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06jm_r",
          "entity_name": "Bartitsu"
        }
      ]
    },
    {
      "question": "what is the core text of mormon and honored by bible study practitioners?",
      "qid": "4300898011000_grailqa",
      "source": "grailqa",
      "entities": {
        "mormon": "m.058x5",
        "Bible study": "m.05gd62"
      },
      "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.058x5) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.05gd62))))",
      "actions": [
        "get_relations(m.058x5)",
        "get_neighbors(m.058x5,religion.religion.texts)",
        "get_relations(m.05gd62)",
        "get_neighbors(m.05gd62,religion.religious_practice.practice_of)",
        "get_relations(#1)",
        "get_neighbors(#1,religion.religion.texts)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.015j7",
          "entity_name": "The Bible"
        }
      ]
    },
    {
      "question": "The team that won the 1934 Stanley Cup Finals played where?",
      "qid": "WebQTest-1027_c7184854344e79b315450f754c86e3da_cwq",
      "source": "cwq",
      "entities": {
        "1934 Stanley Cup Finals": "m.03by1ck"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.championships m.03by1ck)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.03by1ck)",
        "get_neighbors(m.03by1ck,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.02nshs",
          "answer_type": "Entity",
          "entity_name": "United Center"
        }
      ]
    },
    {
      "question": "what cheese made from milk of cows has the same texture as époisses de bourgogne does?",
      "qid": "4302129014000_grailqa",
      "source": "grailqa",
      "entities": {
        "cows": "m.01xq0k1",
        "Époisses de Bourgogne": "m.097psp"
      },
      "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.01xq0k1) (JOIN (R food.cheese_texture.cheeses) (JOIN food.cheese_texture.cheeses m.097psp))))",
      "actions": [
        "get_relations(m.01xq0k1)",
        "get_neighbors(m.01xq0k1,food.cheese_milk_source.cheeses)",
        "get_relations(m.097psp)",
        "get_neighbors(m.097psp,food.cheese.texture)",
        "get_relations(#1)",
        "get_neighbors(#1,food.cheese_texture.cheeses)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03h_z8",
          "entity_name": "Munster cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026zczj",
          "entity_name": "Red Hawk cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0805x3",
          "entity_name": "Pont-l'Évêque cheese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09cqcr",
          "entity_name": "Langres cheese"
        }
      ]
    },
    {
      "question": "When was the last time that the team with mascot named K. C. Wolf win the Superbowl?",
      "qid": "WebQTrn-3623_0d5d5af4360a4142d71dadc491d77fe5_cwq",
      "source": "cwq",
      "entities": {
        "K. C. Wolf": "m.09pz97"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.09pz97)) time.event.end_date)",
      "actions": [
        "get_relations(m.09pz97)",
        "get_neighbors(m.09pz97,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.076mc",
          "answer_type": "Entity",
          "entity_name": "Super Bowl IV"
        }
      ]
    },
    {
      "question": "the reliant and predecessor eagle vista are what class of automobiles?",
      "qid": "4301079004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Eagle Vista": "m.075sj8",
        "reliant": "m.02gfkn"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples (JOIN (R automotive.model.predecessor) m.075sj8)) (JOIN automotive.automotive_class.examples m.02gfkn)))",
      "actions": [
        "get_relations(m.075sj8)",
        "get_neighbors(m.075sj8,automotive.model.predecessor)",
        "get_relations(#0)",
        "get_neighbors(#0,automotive.model.automotive_class)",
        "get_relations(m.02gfkn)",
        "get_neighbors(m.02gfkn,automotive.model.automotive_class)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.021mp2",
          "entity_name": "Sedan"
        }
      ]
    },
    {
      "question": "Who was influenced by Gill Gates that invented Facebook and Wikipedia?",
      "qid": "WebQTrn-2245_ab73a95a9fdda4b0144e9cc7949e13b1_cwq",
      "source": "cwq",
      "entities": {
        "facebook": "m.0hmyfsv",
        "gill gates": "m.017nt"
      },
      "s_expression": "(AND (JOIN (R organization.organization.founders) m.0hmyfsv) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.017nt)))",
      "actions": [
        "get_relations(m.0hmyfsv)",
        "get_neighbors(m.0hmyfsv,organization.organization.founders)",
        "get_relations(m.017nt)",
        "get_neighbors(m.017nt,influence.influence_node.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.086dny",
          "answer_type": "Entity",
          "entity_name": "Mark Zuckerberg"
        }
      ]
    },
    {
      "question": "which core text of judaism do male circumcision practitioners honor?",
      "qid": "4300898015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Judaism": "m.03_gx",
        "male circumcision": "m.01zky"
      },
      "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.03_gx) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.01zky))))",
      "actions": [
        "get_relations(m.03_gx)",
        "get_neighbors(m.03_gx,religion.religion.texts)",
        "get_relations(m.01zky)",
        "get_neighbors(m.01zky,religion.religious_practice.practice_of)",
        "get_relations(#1)",
        "get_neighbors(#1,religion.religion.texts)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gn9",
          "entity_name": "Tanakh"
        }
      ]
    },
    {
      "question": "Where do most people live in the country that the Chausie breed comes from?",
      "qid": "WebQTrn-3037_839fa68cda37e890bb3eed45714fcc43_cwq",
      "source": "cwq",
      "entities": {
        "Chausie": "m.03_27x"
      },
      "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN biology.breed_origin.breeds_originating_here m.03_27x)) topic_server.population_number)",
      "actions": [
        "get_relations(m.03_27x)",
        "get_neighbors(m.03_27x,biology.animal_breed.place_of_origin)",
        "get_relations(#0)",
        "get_neighbors(#0,location.location.contains)",
        "get_attributes(#1)",
        "argmax(#1,topic_server.population_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.080msrv",
          "answer_type": "Entity",
          "entity_name": "Greater Cairo"
        }
      ]
    },
    {
      "question": "The 1986 World Series championship won their first World Series in what year?",
      "qid": "WebQTrn-2356_14f8825251f4fac1508fc8d1174fcd38_cwq",
      "source": "cwq",
      "entities": {
        "World Series": "m.0fjp3",
        "1986 World Series": "m.01q9lc"
      },
      "s_expression": "(ARGMIN (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.01q9lc)) (JOIN sports.sports_championship_event.championship m.0fjp3)) time.event.start_date)",
      "actions": [
        "get_relations(m.01q9lc)",
        "get_neighbors(m.01q9lc,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.0fjp3)",
        "get_neighbors(m.0fjp3,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmin(#3,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04jg9_",
          "answer_type": "Entity",
          "entity_name": "1969 World Series"
        }
      ]
    },
    {
      "question": "the same rocket manufacturer who manufactured zenit-2 and zenit created what other rocket?\nsaturn int-20, delta iii, delta ii...",
      "qid": "4300129015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Zenit-2": "m.05t0zhb",
        "Zenit": "m.033xpj"
      },
      "s_expression": "(AND spaceflight.rocket (JOIN spaceflight.rocket.manufacturer (AND (JOIN (R spaceflight.rocket.manufacturer) m.05t0zhb) (JOIN spaceflight.rocket_manufacturer.rockets_manufactured m.033xpj))))",
      "actions": [
        "get_relations(m.05t0zhb)",
        "get_neighbors(m.05t0zhb,spaceflight.rocket.manufacturer)",
        "get_relations(m.033xpj)",
        "get_neighbors(m.033xpj,spaceflight.rocket.manufacturer)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,spaceflight.rocket_manufacturer.rockets_manufactured)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0nbm4x1",
          "entity_name": "Zenit 3"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03mvcl",
          "entity_name": "Kosmos-3M"
        }
      ]
    },
    {
      "question": "Russia is the largest nation in the place in which Ruritania is.?",
      "qid": "WebQTest-523_7df8cb1d6655be1b311c324761de106b_cwq",
      "source": "cwq",
      "entities": {
        "Ruritania": "m.02jxl9"
      },
      "s_expression": "(ARGMAX (JOIN (R base.locations.continents.countries_within) (JOIN fictional_universe.fictional_setting.contains m.02jxl9)) topic_server.population_number)",
      "actions": [
        "get_relations(m.02jxl9)",
        "get_neighbors(m.02jxl9,fictional_universe.fictional_setting.contained_by)",
        "get_relations(#0)",
        "get_neighbors(#0,base.locations.continents.countries_within)",
        "get_attributes(#1)",
        "argmax(#1,topic_server.population_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.06bnz",
          "answer_type": "Entity",
          "entity_name": "Russia"
        }
      ]
    },
    {
      "question": "what isos from nikon corp. does nikon coolpix s700 support?",
      "qid": "4304013015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Nikon Coolpix S700": "m.03q2q_4",
        "nikon corp.": "m.03pmfw"
      },
      "s_expression": "(AND digicams.camera_iso (AND (JOIN digicams.camera_iso.cameras m.03q2q_4) (JOIN (R digicams.digital_camera.iso_setting) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.03pmfw))))",
      "actions": [
        "get_relations(m.03q2q_4)",
        "get_neighbors(m.03q2q_4,digicams.digital_camera.iso_setting)",
        "get_relations(m.03pmfw)",
        "get_neighbors(m.03pmfw,digicams.camera_sensor_manufacturer.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.iso_setting)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04l497s",
          "entity_name": "2000"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04nrl44",
          "entity_name": "160"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04nrl4h",
          "entity_name": "320"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04p7pwg",
          "entity_name": "130"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04pf295",
          "entity_name": "120"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_x",
          "entity_name": "100"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_g",
          "entity_name": "400"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_p",
          "entity_name": "200"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg4v",
          "entity_name": "3200"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg51",
          "entity_name": "1600"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg58",
          "entity_name": "800"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04npjzb",
          "entity_name": "1000"
        }
      ]
    },
    {
      "question": "When was that last time the champion of the 2012 World Series win the World Series?",
      "qid": "WebQTrn-710_87afbf2481df60df8476b920f00c4247_cwq",
      "source": "cwq",
      "entities": {
        "2012 World Series": "m.0ds8qct"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.0ds8qct)) time.event.start_date)",
      "actions": [
        "get_relations(m.0ds8qct)",
        "get_neighbors(m.0ds8qct,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0117q3yz"
        }
      ]
    },
    {
      "question": "Name the baseball stadium used by the home team in the city which also includes Hilltop Park.?",
      "qid": "WebQTrn-1326_1afd5634cb719e3b77b4345510599ca8_cwq",
      "source": "cwq",
      "entities": {
        "Hilltop Park": "m.039nhz"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.arena_stadium m.039nhz)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.039nhz)",
        "get_neighbors(m.039nhz,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.01_gsg",
          "answer_type": "Entity",
          "entity_name": "AT&T Park"
        }
      ]
    },
    {
      "question": "At what event that ended first did the dastardly, no-good Baltimore Ravens unfortunately win the Super Bowl?",
      "qid": "WebQTest-837_0f56b49cc2257ee6ecffc17f5a53198c_cwq",
      "source": "cwq",
      "entities": {
        "Baltimore Ravens": "m.01ct6",
        "Super Bowl": "m.06x5s"
      },
      "s_expression": "(ARGMIN (AND (JOIN (R sports.sports_team.championships) m.01ct6) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.01ct6)",
        "get_neighbors(m.01ct6,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#0,#1)",
        "get_attributes(#2)",
        "argmin(#2,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.076yq"
        }
      ]
    },
    {
      "question": "judaism and seventh-day adventist are practiced by how many religious practices?",
      "qid": "3204573011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Judaism": "m.03_gx",
        "seventh-day adventist": "m.072w0"
      },
      "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.03_gx) (JOIN (R religion.religion.practices) m.072w0))))",
      "actions": [
        "get_relations(m.03_gx)",
        "get_neighbors(m.03_gx,religion.religion.practices)",
        "get_relations(m.072w0)",
        "get_neighbors(m.072w0,religion.religion.practices)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "eero simoncelli conducts research in which mathematical biology discipline?",
      "qid": "4302233009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Mathematical Biology": "m.0b7ctsw",
        "Eero Simoncelli": "m.0dv73bm"
      },
      "s_expression": "(AND education.field_of_study (AND (JOIN (R education.field_of_study.subdisciplines) m.0b7ctsw) (JOIN (R education.field_of_study.subdiscipline_of) (JOIN (R education.academic.research_areas) m.0dv73bm))))",
      "actions": [
        "get_relations(m.0b7ctsw)",
        "get_neighbors(m.0b7ctsw,education.field_of_study.subdisciplines)",
        "get_relations(m.0dv73bm)",
        "get_neighbors(m.0dv73bm,education.academic.research_areas)",
        "get_relations(#1)",
        "get_neighbors(#1,education.field_of_study.subdiscipline_of)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.026l24y",
          "entity_name": "Computational Science and Engineering"
        }
      ]
    },
    {
      "question": "what number of contents about gadgets are produced by the producer of the brian lehrer show?",
      "qid": "4303008003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Gadgets": "m.03mkv4m",
        "The Brian Lehrer Show": "m.03d4z3j"
      },
      "s_expression": "(COUNT (AND broadcast.content (AND (JOIN (R broadcast.genre.content) m.03mkv4m) (JOIN (R broadcast.producer.produces) (JOIN broadcast.producer.produces m.03d4z3j)))))",
      "actions": [
        "get_relations(m.03mkv4m)",
        "get_neighbors(m.03mkv4m,broadcast.genre.content)",
        "get_relations(m.03d4z3j)",
        "get_neighbors(m.03d4z3j,broadcast.content.producer)",
        "get_relations(#1)",
        "get_neighbors(#1,broadcast.producer.produces)",
        "intersection(#0,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what isos does the camera samsung i85 support from unknown?",
      "qid": "4304013005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Samsung i85": "m.03q2kj0",
        "Unknown": "m.01xrf_0"
      },
      "s_expression": "(AND digicams.camera_iso (AND (JOIN digicams.camera_iso.cameras m.03q2kj0) (JOIN (R digicams.digital_camera.iso_setting) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.01xrf_0))))",
      "actions": [
        "get_relations(m.03q2kj0)",
        "get_neighbors(m.03q2kj0,digicams.digital_camera.iso_setting)",
        "get_relations(m.01xrf_0)",
        "get_neighbors(m.01xrf_0,digicams.camera_sensor_manufacturer.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.iso_setting)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_x",
          "entity_name": "100"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0220vx9",
          "entity_name": "80"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_7",
          "entity_name": "Auto"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_g",
          "entity_name": "400"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_p",
          "entity_name": "200"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg51",
          "entity_name": "1600"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg58",
          "entity_name": "800"
        }
      ]
    },
    {
      "question": "how many amusement parks do hong kong disneyland and tokyo disneyland have?",
      "qid": "3206299001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Tokyo Disneyland": "m.044z1n",
        "Hong Kong Disneyland": "m.022zvr"
      },
      "s_expression": "(COUNT (AND amusement_parks.amusement_park_area (AND (JOIN amusement_parks.amusement_park_area.parks m.044z1n) (JOIN amusement_parks.amusement_park_area.parks m.022zvr))))",
      "actions": [
        "get_relations(m.044z1n)",
        "get_neighbors(m.044z1n,amusement_parks.park.areas)",
        "get_relations(m.022zvr)",
        "get_neighbors(m.022zvr,amusement_parks.park.areas)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "3"
        }
      ]
    },
    {
      "question": "What type of cancer killed the lyricist of \"I Shot the Sheriff\"?",
      "qid": "WebQTrn-3531_be189388c5a40fb0a0422033c08caef2_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "I Shot the Sheriff": "m.04dr87"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.lyricist.lyrics_written m.04dr87)) (JOIN people.cause_of_death.parent_cause_of_death m.0qcr0))",
      "actions": [
        "get_relations(m.04dr87)",
        "get_neighbors(m.04dr87,music.composition.lyricist)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,people.cause_of_death.includes_causes_of_death)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.046wcr",
          "answer_type": "Entity",
          "entity_name": "Acral lentiginous melanoma"
        },
        {
          "answer_argument": "m.04kndz2",
          "answer_type": "Entity",
          "entity_name": "Metastatic Melanoma"
        }
      ]
    },
    {
      "question": "The artist who sang What You Give Away has what type of breast cancer?",
      "qid": "WebQTest-2014_a10962f9ed14a93c7d7bc6c938605eda_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "What You Give Away": "m.0dnxvzv"
      },
      "s_expression": "(AND (JOIN (R medicine.notable_person_with_medical_condition.condition) (JOIN music.featured_artist.recordings m.0dnxvzv)) (JOIN medicine.disease.parent_disease m.0qcr0))",
      "actions": [
        "get_relations(m.0dnxvzv)",
        "get_neighbors(m.0dnxvzv,music.recording.featured_artists)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.notable_person_with_medical_condition.condition)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,medicine.disease.includes_diseases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.03z_9l",
          "answer_type": "Entity",
          "entity_name": "Meningioma"
        }
      ]
    },
    {
      "question": "what are automotive classes of mondial in the model of 1999 dodge charger concept?",
      "qid": "4300308013000_grailqa",
      "source": "grailqa",
      "entities": {
        "mondial": "m.04f4mp",
        "1999 Dodge Charger Concept": "m.0f7xbh"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN (R automotive.model.automotive_class) m.04f4mp) (JOIN automotive.automotive_class.examples (JOIN automotive.model.model_years m.0f7xbh))))",
      "actions": [
        "get_relations(m.04f4mp)",
        "get_neighbors(m.04f4mp,automotive.model.automotive_class)",
        "get_relations(m.0f7xbh)",
        "get_neighbors(m.0f7xbh,automotive.model_year.model)",
        "get_relations(#1)",
        "get_neighbors(#1,automotive.model.automotive_class)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01d1dj",
          "entity_name": "Coupé"
        }
      ]
    },
    {
      "question": "find the camera storage type that is supported by pentax optio s60 and the digital camera with iso setting of 2500.",
      "qid": "4302372013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Pentax Optio S60": "m.03q2lk_",
        "2500": "m.0h27q8w"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.0h27q8w)) (JOIN (R digicams.digital_camera.supported_storage_types) m.03q2lk_)))",
      "actions": [
        "get_relations(m.0h27q8w)",
        "get_neighbors(m.0h27q8w,digicams.camera_iso.cameras)",
        "get_relations(#0)",
        "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.03q2lk_)",
        "get_neighbors(m.03q2lk_,digicams.digital_camera.supported_storage_types)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tthm",
          "entity_name": "Secure Digital"
        }
      ]
    },
    {
      "question": "which musical release is produced by six underground (sneak's kicker mix) and labelled rca?",
      "qid": "4301990007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Six Underground (Sneak's Kicker mix)": "m.0t8pkd",
        "rca": "m.0181dw"
      },
      "s_expression": "(AND music.release (AND (JOIN music.release.producers (JOIN (R music.recording.producer) m.0t8pkd)) (JOIN music.release.label m.0181dw)))",
      "actions": [
        "get_relations(m.0t8pkd)",
        "get_neighbors(m.0t8pkd,music.recording.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,music.producer.releases_produced)",
        "get_relations(m.0181dw)",
        "get_neighbors(m.0181dw,music.record_label.releases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0379vk3",
          "entity_name": "Kasabian"
        }
      ]
    },
    {
      "question": "which discovery in the astronmical field was published and discovered in the observatory of dwarf planet pluto?",
      "qid": "4300765003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Published": "m.03ywyv_",
        "dwarf planet pluto": "m.0c3qy"
      },
      "s_expression": "(AND astronomy.astronomical_discovery (AND (JOIN (R astronomy.astronomical_discovery_status.objects) m.03ywyv_) (JOIN astronomy.astronomical_discovery.discovery_site (JOIN (R astronomy.astronomical_discovery.discovery_site) m.0c3qy))))",
      "actions": [
        "get_relations(m.03ywyv_)",
        "get_neighbors(m.03ywyv_,astronomy.astronomical_discovery_status.objects)",
        "get_relations(m.0c3qy)",
        "get_neighbors(m.0c3qy,astronomy.astronomical_discovery.discovery_site)",
        "get_relations(#1)",
        "get_neighbors(#1,astronomy.astronomical_observatory.discoveries)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.070g26",
          "entity_name": "7166 Kennedy"
        }
      ]
    },
    {
      "question": "how many spacecrafts did smithsonian astrophysical observatory and lockheed martin advanced technology center manufacture?",
      "qid": "3201449001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Smithsonian Astrophysical Observatory": "m.04yqfv",
        "Lockheed Martin Advanced Technology Center": "m.07ry03w"
      },
      "s_expression": "(COUNT (AND spaceflight.spacecraft (AND (JOIN spaceflight.spacecraft.manufacturer m.04yqfv) (JOIN spaceflight.spacecraft.manufacturer m.07ry03w))))",
      "actions": [
        "get_relations(m.04yqfv)",
        "get_neighbors(m.04yqfv,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "get_relations(m.07ry03w)",
        "get_neighbors(m.07ry03w,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what is the number of automotive classes which are examples of mazda and hyundai scoupe?",
      "qid": "3206121014000_grailqa",
      "source": "grailqa",
      "entities": {
        "mazda": "m.0c0szp",
        "Hyundai Scoupe": "m.06q3p9"
      },
      "s_expression": "(COUNT (AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples m.0c0szp) (JOIN automotive.automotive_class.examples m.06q3p9))))",
      "actions": [
        "get_relations(m.0c0szp)",
        "get_neighbors(m.0c0szp,automotive.model.automotive_class)",
        "get_relations(m.06q3p9)",
        "get_neighbors(m.06q3p9,automotive.model.automotive_class)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "which character with an item destroyed by hoplite had powers which included god-speed?",
      "qid": "4302209015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Hoplite": "m.0c0lmd2",
        "God-speed": "m.0c0lpp6"
      },
      "s_expression": "(AND fictional_universe.fictional_character (AND (JOIN fictional_universe.fictional_character.has_possessed (JOIN fictional_universe.fictional_object.destroyer m.0c0lmd2)) (JOIN fictional_universe.fictional_character.powers_or_abilities m.0c0lpp6)))",
      "actions": [
        "get_relations(m.0c0lmd2)",
        "get_neighbors(m.0c0lmd2,fictional_universe.fictional_object_destroyer.fictional_objects_destroyed)",
        "get_relations(#0)",
        "get_neighbors(#0,fictional_universe.fictional_object.owner)",
        "get_relations(m.0c0lpp6)",
        "get_neighbors(m.0c0lpp6,fictional_universe.character_powers.characters_with_this_ability)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bxj80p",
          "entity_name": "Tempus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c2gbnl",
          "entity_name": "Tempus, left-side leader of Niko"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hnpjhm",
          "entity_name": "Commander"
        }
      ]
    },
    {
      "question": "there exists a musical release produced by six underground (sneak's kicker mix) and labelled rca, what is it?",
      "qid": "4301990003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Six Underground (Sneak's Kicker mix)": "m.0t8pkd",
        "rca": "m.0181dw"
      },
      "s_expression": "(AND music.release (AND (JOIN music.release.producers (JOIN (R music.recording.producer) m.0t8pkd)) (JOIN music.release.label m.0181dw)))",
      "actions": [
        "get_relations(m.0t8pkd)",
        "get_neighbors(m.0t8pkd,music.recording.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,music.producer.releases_produced)",
        "get_relations(m.0181dw)",
        "get_neighbors(m.0181dw,music.record_label.releases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0379vk3",
          "entity_name": "Kasabian"
        }
      ]
    },
    {
      "question": "In the country that the Vyatka horse comes from where do most people live?",
      "qid": "WebQTest-1735_2cb97dc9d778b69fd832740909b026a9_cwq",
      "source": "cwq",
      "entities": {
        "Vyatka horse": "m.06ddh9"
      },
      "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN biology.breed_origin.breeds_originating_here m.06ddh9)) topic_server.population_number)",
      "actions": [
        "get_relations(m.06ddh9)",
        "get_neighbors(m.06ddh9,biology.animal_breed.place_of_origin)",
        "get_relations(#0)",
        "get_neighbors(#0,location.location.contains)",
        "get_attributes(#1)",
        "argmax(#1,topic_server.population_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.02wr92",
          "answer_type": "Entity",
          "entity_name": "Central Federal District"
        }
      ]
    },
    {
      "question": "which is the longest release track of recordings written by buzz burrowes?",
      "qid": "4300020006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Buzz Burrowes": "g.11btzwyb33"
      },
      "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) g.11btzwyb33))) music.release_track.length)",
      "actions": [
        "get_relations(g.11btzwyb33)",
        "get_neighbors(g.11btzwyb33,music.engineer.tracks_engineered)",
        "get_relations(#0)",
        "get_neighbors(#0,music.recording.tracks)",
        "get_attributes(#1)",
        "argmax(#1,music.release_track.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0mkg969",
          "entity_name": "I Would Have Waited Forever"
        }
      ]
    },
    {
      "question": "Where in the West Midlands was the Tight End Position Football player born?",
      "qid": "WebQTest-1432_673a50da6a5d8653f3d8cf82b62afa9c_cwq",
      "source": "cwq",
      "entities": {
        "West Midlands": "m.0dyjz",
        "Tight end": "m.02g_7z"
      },
      "s_expression": "(AND (JOIN (R base.aareas.schema.administrative_area.administrative_children) m.0dyjz) (JOIN location.location.people_born_here (JOIN american_football.football_player.position_s m.02g_7z)))",
      "actions": [
        "get_relations(m.0dyjz)",
        "get_neighbors(m.0dyjz,base.aareas.schema.administrative_area.administrative_children)",
        "get_relations(m.02g_7z)",
        "get_neighbors(m.02g_7z,american_football.football_position.players)",
        "get_relations(#1)",
        "get_neighbors(#1,people.person.place_of_birth)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0k33p",
          "answer_type": "Entity",
          "entity_name": "Birmingham"
        }
      ]
    },
    {
      "question": "where is the version developed by frontier developments and distributed through wii ware released?",
      "qid": "4301141013000_grailqa",
      "source": "grailqa",
      "entities": {
        "wii ware": "m.03hfyj6",
        "Frontier Developments": "m.069dh8"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.03hfyj6) (JOIN (R cvg.cvg_developer.game_versions_developed) m.069dh8))))",
      "actions": [
        "get_relations(m.03hfyj6)",
        "get_neighbors(m.03hfyj6,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.069dh8)",
        "get_neighbors(m.069dh8,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.075g54v",
          "entity_name": "Wii/DS NA"
        }
      ]
    },
    {
      "question": "Which super bowl was the most recent one to be won by a franchsie owner by a member of the Rooney family?",
      "qid": "WebQTest-1523_e42fb4a1fc4d571f6d9172eb77fe5b24_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "Rooney family": "m.03nrwfz"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.03nrwfz)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.03nrwfz)",
        "get_neighbors(m.03nrwfz,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04n7r5",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLIII"
        }
      ]
    },
    {
      "question": "What's the most recent event in which the sports team that won the championship in Super Bowl VI has won the Super Bowl?",
      "qid": "WebQTest-994_139cc3d497bad703a6253a51b39f0edc_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "Super Bowl VI": "m.076n1"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.076n1)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.076n1)",
        "get_neighbors(m.076n1,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.076wz",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXX"
        }
      ]
    },
    {
      "question": "what programming language paradigm is joules and another programming language of nil?",
      "qid": "4300798005000_grailqa",
      "source": "grailqa",
      "entities": {
        "joules": "m.02j2p7",
        "NIL": "m.0260ysc"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.02j2p7) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.0260ysc))))",
      "actions": [
        "get_relations(m.02j2p7)",
        "get_neighbors(m.02j2p7,computer.programming_language.language_paradigms)",
        "get_relations(m.0260ysc)",
        "get_neighbors(m.0260ysc,computer.programming_language.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.programming_language.language_paradigms)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05prj",
          "entity_name": "Object-oriented programming"
        }
      ]
    },
    {
      "question": "What is the form of government for the locations in Australia where Baldur von Schirach was born?",
      "qid": "WebQTest-1226_3f76d491e90682cc29e3de2546e1f9c5_cwq",
      "source": "cwq",
      "entities": {
        "Australia": "m.0chghy",
        "Baldur von Schirach": "m.0143sn"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0chghy) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.0143sn)))",
      "actions": [
        "get_relations(m.0chghy)",
        "get_neighbors(m.0chghy,location.country.form_of_government)",
        "get_relations(m.0143sn)",
        "get_neighbors(m.0143sn,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20",
          "answer_type": "Entity",
          "entity_name": "Constitutional monarchy"
        }
      ]
    },
    {
      "question": "When was the last World Series won by the team whose mascot is The Oriole Bird?",
      "qid": "WebQTest-1680_5f797b78d674502fb6ec9dfe332fc2f4_cwq",
      "source": "cwq",
      "entities": {
        "The Oriole Bird": "m.052tmns"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.052tmns)) time.event.end_date)",
      "actions": [
        "get_relations(m.052tmns)",
        "get_neighbors(m.052tmns,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.046_p6",
          "answer_type": "Entity",
          "entity_name": "1983 World Series"
        }
      ]
    },
    {
      "question": "how many exhibition subjects are in roger hiorns at corvi-mora?",
      "qid": "4302933010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Roger Hiorns at Corvi-Mora": "m.0ypkvrg"
      },
      "s_expression": "(COUNT (AND exhibitions.exhibition_subject (JOIN (R exhibitions.exhibition.subjects) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) (JOIN (R exhibitions.exhibition.exhibition_types) m.0ypkvrg)))))",
      "actions": [
        "get_relations(m.0ypkvrg)",
        "get_neighbors(m.0ypkvrg,exhibitions.exhibition.exhibition_types)",
        "get_relations(#0)",
        "get_neighbors(#0,exhibitions.type_of_exhibition.exhibitions_of_this_type)",
        "get_relations(#1)",
        "get_neighbors(#1,exhibitions.exhibition.subjects)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "602"
        }
      ]
    },
    {
      "question": "state the number of religious texts of all hallows among the texts on anglicans.",
      "qid": "4303883015000_grailqa",
      "source": "grailqa",
      "entities": {
        "anglicans": "m.0n2g",
        "all hallows": "m.0k0c"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of (JOIN (R time.holiday.featured_in_religions) m.0k0c)) (JOIN (R religion.religion.texts) m.0n2g))))",
      "actions": [
        "get_relations(m.0k0c)",
        "get_neighbors(m.0k0c,time.holiday.featured_in_religions)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religion.texts)",
        "get_relations(m.0n2g)",
        "get_neighbors(m.0n2g,religion.religion.texts)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "3"
        }
      ]
    },
    {
      "question": "What form of government is used by both Australia and the birthplace of Emanuel Lasker?",
      "qid": "WebQTest-493_3ce332b703593e71708a5604865c5758_cwq",
      "source": "cwq",
      "entities": {
        "Australia": "m.0chghy",
        "Emanuel Lasker": "m.01kfm7"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0chghy) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
      "actions": [
        "get_relations(m.0chghy)",
        "get_neighbors(m.0chghy,location.country.form_of_government)",
        "get_relations(m.01kfm7)",
        "get_neighbors(m.01kfm7,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q20"
        }
      ]
    },
    {
      "question": "which are automotive classes of ford falcon (xp) in the model of 2014 ford focus?",
      "qid": "4300308005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Ford Falcon (XP)": "m.02rssf0",
        "2014 Ford Focus": "m.0_v8m4q"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN (R automotive.model.automotive_class) m.02rssf0) (JOIN automotive.automotive_class.examples (JOIN automotive.model.model_years m.0_v8m4q))))",
      "actions": [
        "get_relations(m.02rssf0)",
        "get_neighbors(m.02rssf0,automotive.model.automotive_class)",
        "get_relations(m.0_v8m4q)",
        "get_neighbors(m.0_v8m4q,automotive.model_year.model)",
        "get_relations(#1)",
        "get_neighbors(#1,automotive.model.automotive_class)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.016gvg",
          "entity_name": "Station Wagon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.021mp2",
          "entity_name": "Sedan"
        }
      ]
    },
    {
      "question": "how many elements about documentary film are made by the producer of small things considered?",
      "qid": "4303008010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Documentary film": "m.0jtdp",
        "Small Things Considered": "m.05v2fbl"
      },
      "s_expression": "(COUNT (AND broadcast.content (AND (JOIN (R broadcast.genre.content) m.0jtdp) (JOIN (R broadcast.producer.produces) (JOIN broadcast.producer.produces m.05v2fbl)))))",
      "actions": [
        "get_relations(m.0jtdp)",
        "get_neighbors(m.0jtdp,broadcast.genre.content)",
        "get_relations(m.05v2fbl)",
        "get_neighbors(m.05v2fbl,broadcast.content.producer)",
        "get_relations(#1)",
        "get_neighbors(#1,broadcast.producer.produces)",
        "intersection(#0,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what religion is part of islam and has same practices with mormon?",
      "qid": "4300140011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Islam": "m.0flw86",
        "mormon": "m.058x5"
      },
      "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.058x5)) (JOIN religion.religion.is_part_of m.0flw86)))",
      "actions": [
        "get_relations(m.058x5)",
        "get_neighbors(m.058x5,religion.religion.practices)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religious_practice.practice_of)",
        "get_relations(m.0flw86)",
        "get_neighbors(m.0flw86,religion.religion.includes)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.078tg",
          "entity_name": "Sunni Islam"
        }
      ]
    },
    {
      "question": "st. thomas university and the publisher of catalyst fall under which category of schools?",
      "qid": "4301751006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Catalyst": "m.02x53_0",
        "St. Thomas University": "m.0183m_"
      },
      "s_expression": "(AND education.school_category (AND (JOIN (R education.educational_institution.school_type) (JOIN (R education.school_magazine.school) m.02x53_0)) (JOIN (R education.educational_institution.school_type) m.0183m_)))",
      "actions": [
        "get_relations(m.02x53_0)",
        "get_neighbors(m.02x53_0,education.school_magazine.school)",
        "get_relations(#0)",
        "get_neighbors(#0,education.educational_institution.school_type)",
        "get_relations(m.0183m_)",
        "get_neighbors(m.0183m_,education.educational_institution.school_type)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05jxkf",
          "entity_name": "Public university"
        }
      ]
    },
    {
      "question": "what number of automotive classes are examples of mazda and hyundai scoupe?",
      "qid": "3206121008000_grailqa",
      "source": "grailqa",
      "entities": {
        "mazda": "m.0c0szp",
        "Hyundai Scoupe": "m.06q3p9"
      },
      "s_expression": "(COUNT (AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples m.0c0szp) (JOIN automotive.automotive_class.examples m.06q3p9))))",
      "actions": [
        "get_relations(m.0c0szp)",
        "get_neighbors(m.0c0szp,automotive.model.automotive_class)",
        "get_relations(m.06q3p9)",
        "get_neighbors(m.06q3p9,automotive.model.automotive_class)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "the sly and unseen day has how many exhibition subjects?",
      "qid": "4302933002000_grailqa",
      "source": "grailqa",
      "entities": {
        "The Sly and Unseen Day": "m.0y6zk9p"
      },
      "s_expression": "(COUNT (AND exhibitions.exhibition_subject (JOIN (R exhibitions.exhibition.subjects) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) (JOIN (R exhibitions.exhibition.exhibition_types) m.0y6zk9p)))))",
      "actions": [
        "get_relations(m.0y6zk9p)",
        "get_neighbors(m.0y6zk9p,exhibitions.exhibition.exhibition_types)",
        "get_relations(#0)",
        "get_neighbors(#0,exhibitions.type_of_exhibition.exhibitions_of_this_type)",
        "get_relations(#1)",
        "get_neighbors(#1,exhibitions.exhibition.subjects)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "602"
        }
      ]
    },
    {
      "question": "timothy p hart introduced first which programming language which was influenced by another language ?",
      "qid": "4303199013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Timothy P Hart": "m.01xrtcp"
      },
      "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.01xrtcp))) computer.programming_language.introduced)",
      "actions": [
        "get_relations(m.01xrtcp)",
        "get_neighbors(m.01xrtcp,computer.programming_language_developer.programming_languages_developed)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.influenced)",
        "get_attributes(#1)",
        "argmin(#1,computer.programming_language.introduced)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01hxzg",
          "entity_name": "ISWIM"
        }
      ]
    },
    {
      "question": "What attraction in downtown Chicago hosted the 2002 Chicago Palestine Film Festival?",
      "qid": "WebQTrn-825_17a1584ae5a82e266793ecbc227c9574_cwq",
      "source": "cwq",
      "entities": {
        "Chicago": "m.01_d4",
        "2002 Chicago Palestine Film Festival": "m.010fq0jk"
      },
      "s_expression": "(AND (JOIN (R travel.travel_destination.tourist_attractions) m.01_d4) (AND (JOIN location.location.containedby m.01_d4) (JOIN location.location.events m.010fq0jk)))",
      "actions": [
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,travel.travel_destination.tourist_attractions)",
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,location.location.contains)",
        "get_relations(m.010fq0jk)",
        "get_neighbors(m.010fq0jk,time.event.locations)",
        "intersection(#1,#2)",
        "intersection(#0,#3)"
      ],
      "answer": [
        {
          "answer_argument": "m.05zv09",
          "answer_type": "Entity",
          "entity_name": "Chicago Cultural Center"
        }
      ]
    },
    {
      "question": "What are the most commonly spoken languages in the nation of origin for the Egyptian Mau?",
      "qid": "WebQTest-1608_6ca8cba7511811830a04cd64a8a4cf77_cwq",
      "source": "cwq",
      "entities": {
        "Egyptian Mau": "m.0229mb"
      },
      "s_expression": "(JOIN (R location.country.languages_spoken) (AND (JOIN (R language.human_language.main_country) common.topic) (JOIN biology.breed_origin.breeds_originating_here m.0229mb)))",
      "actions": [
        "get_relations(common.topic)",
        "get_neighbors(common.topic,language.human_language.main_country)",
        "get_relations(m.0229mb)",
        "get_neighbors(m.0229mb,biology.animal_breed.place_of_origin)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,location.country.languages_spoken)"
      ],
      "answer": [
        {
          "answer_argument": "m.012zfy",
          "answer_type": "Entity",
          "entity_name": "Siwi Language"
        },
        {
          "answer_argument": "m.02hx2cr",
          "answer_type": "Entity",
          "entity_name": "Egyptian Arabic"
        },
        {
          "answer_argument": "m.02hxbhg",
          "answer_type": "Entity",
          "entity_name": "Sa'idi Arabic"
        },
        {
          "answer_argument": "m.03wc2kf",
          "answer_type": "Entity",
          "entity_name": "Bedawi Arabic"
        }
      ]
    },
    {
      "question": "what formal science discipline does niels henrik abel conduct research in?",
      "qid": "4302233011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Formal science": "m.09vvxv",
        "Niels Henrik Abel": "m.05dvl"
      },
      "s_expression": "(AND education.field_of_study (AND (JOIN (R education.field_of_study.subdisciplines) m.09vvxv) (JOIN (R education.field_of_study.subdiscipline_of) (JOIN (R education.academic.research_areas) m.05dvl))))",
      "actions": [
        "get_relations(m.09vvxv)",
        "get_neighbors(m.09vvxv,education.field_of_study.subdisciplines)",
        "get_relations(m.05dvl)",
        "get_neighbors(m.05dvl,education.academic.research_areas)",
        "get_relations(#1)",
        "get_neighbors(#1,education.field_of_study.subdiscipline_of)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04rjg",
          "entity_name": "Mathematics"
        }
      ]
    },
    {
      "question": "how many different religious texts have christian religion and protestantism texts?",
      "qid": "3206221014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Protestantism": "m.05sfs",
        "christian religion": "m.01lp8"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of m.05sfs) (JOIN (R religion.religion.texts) m.01lp8))))",
      "actions": [
        "get_relations(m.05sfs)",
        "get_neighbors(m.05sfs,religion.religion.texts)",
        "get_relations(m.01lp8)",
        "get_neighbors(m.01lp8,religion.religion.texts)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "3"
        }
      ]
    },
    {
      "question": "Who are the \"Edith and the Kingpin\" recording artist and ike's family kids?",
      "qid": "WebQTest-1655_8fbb1ef1c5e4c7af4ac9324845d400a9_cwq",
      "source": "cwq",
      "entities": {
        "ike": "m.0dbzg",
        "Edith and the Kingpin": "m.0f2jst0"
      },
      "s_expression": "(AND (JOIN (R people.person.children) (JOIN music.featured_artist.recordings m.0f2jst0)) (JOIN people.person.parents m.0dbzg))",
      "actions": [
        "get_relations(m.0f2jst0)",
        "get_neighbors(m.0f2jst0,music.recording.featured_artists)",
        "get_relations(#0)",
        "get_neighbors(#0,people.person.children)",
        "get_relations(m.0dbzg)",
        "get_neighbors(m.0dbzg,people.person.children)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0ggl36p",
          "answer_type": "Entity",
          "entity_name": "Ronnie Turner"
        },
        {
          "answer_argument": "m.0j5dh53",
          "answer_type": "Entity",
          "entity_name": "Raymond Craig Turner"
        }
      ]
    },
    {
      "question": "Where do most people live in the country containing Al Sharqie Governorate?",
      "qid": "WebQTrn-3037_cf2c2ca737c00135df125459635a368a_cwq",
      "source": "cwq",
      "entities": {
        "al sharqie governorate": "m.02d5r_"
      },
      "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN location.country.administrative_divisions m.02d5r_)) topic_server.population_number)",
      "actions": [
        "get_relations(m.02d5r_)",
        "get_neighbors(m.02d5r_,location.administrative_division.country)",
        "get_relations(#0)",
        "get_neighbors(#0,location.location.contains)",
        "get_attributes(#1)",
        "argmax(#1,topic_server.population_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.080msrv",
          "answer_type": "Entity",
          "entity_name": "Greater Cairo"
        }
      ]
    },
    {
      "question": "which artwork on canvases was created in the era of adriaen backer?",
      "qid": "4301655005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Adriaen Backer": "m.09rs7fm",
        "canvases": "m.0jmpt"
      },
      "s_expression": "(AND visual_art.artwork (AND (JOIN visual_art.artwork.period_or_movement (JOIN visual_art.art_period_movement.associated_artists m.09rs7fm)) (JOIN visual_art.artwork.support m.0jmpt)))",
      "actions": [
        "get_relations(m.09rs7fm)",
        "get_neighbors(m.09rs7fm,visual_art.visual_artist.associated_periods_or_movements)",
        "get_relations(#0)",
        "get_neighbors(#0,visual_art.art_period_movement.associated_artworks)",
        "get_relations(m.0jmpt)",
        "get_neighbors(m.0jmpt,visual_art.visual_art_support.artworks)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kjrf2",
          "entity_name": "The Young Beggar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kh1dd",
          "entity_name": "The Musicians' Brawl"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kh1q7",
          "entity_name": "Magdalen with the Smoking Flame"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kh1xt",
          "entity_name": "St Sebastian Attended by St Irene"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09ktq9",
          "entity_name": "The Elevation of the Cross"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06nsr5s",
          "entity_name": "Portrait of Mother Jeronima de la Fuente"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03cyrsl",
          "entity_name": "The Surrender of Breda"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052s89q",
          "entity_name": "Marriage Portrait of Isaac Massa and Beatrix van der Laen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bhx66",
          "entity_name": "Young Man in a Yellow Robe"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bqq6t",
          "entity_name": "Portrait of Rembrandt van Rijn"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bqrh9",
          "entity_name": "Old Man in Oriental Garb"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bfnxrt",
          "entity_name": "The Raising of Lazarus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c1qnwz",
          "entity_name": "The Adoration of the Shepherds"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065wt25",
          "entity_name": "Boys Eating Grapes and Melon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bx8_q5",
          "entity_name": "The Fall of the Damned"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052t6lf",
          "entity_name": "Elegant Couples Courting"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09nn3pd",
          "entity_name": "A View on a High Road"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09nn3nx",
          "entity_name": "The Water Mill"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09tp_c_",
          "entity_name": "The Dream of Saint Catherine of Alexandria"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09tp_dn",
          "entity_name": "An Angel Freeing the Souls from Purgatory"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065sr0s",
          "entity_name": "The Dancing Couple"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06w85x",
          "entity_name": "Laughing Cavalier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0446j57",
          "entity_name": "Still Life with a Boy Blowing Soap-Bubbles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059_fd9",
          "entity_name": "Still Life with Fruit, Flowers, Glasses and Lobster"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059_frr",
          "entity_name": "Vase of Flowers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bhw9t",
          "entity_name": "Still-Life of Flowers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cfkvy",
          "entity_name": "Still Life with Fruit and Crystal Vase"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cflhg",
          "entity_name": "Banquet Still Life"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075jbrj",
          "entity_name": "Still Life with Dead Game"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07mw3pj",
          "entity_name": "Room Corner with Curiosities"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07mx4zk",
          "entity_name": "Vase of Flowers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09nm5lx",
          "entity_name": "Flower Still Life with a Watch"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09nm9rx",
          "entity_name": "Still Life with Game"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08sfyk",
          "entity_name": "Narcissus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b_v7n",
          "entity_name": "Andromeda Chained to the Rocks"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cftk3",
          "entity_name": "Ahimelech Giving the Sword of Goliath to David"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065wt1t",
          "entity_name": "The Annunciation"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c1pvyp",
          "entity_name": "Triple Portrait of King Charles I"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rjys5",
          "entity_name": "Susanna and the Old Men"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04_2ybq",
          "entity_name": "Susanna and the Elders"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065srzn",
          "entity_name": "Pietà"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.123b43sh",
          "entity_name": "Portrait of Queen Henrietta Maria and the Dwarf Sir Jeffrey Hudson"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.043w9g0",
          "entity_name": "The Disembarkation of Cleopatra at Tarsus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cd2r7",
          "entity_name": "Woman at the Clavicord"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bwhd31",
          "entity_name": "Self-Portrait with Beret and Turned-Up Collar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065ssqn",
          "entity_name": "Martyrdom of St. Philip"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05m5q09",
          "entity_name": "David Playing the Harp"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05prgs3",
          "entity_name": "Portrait of Abraham van Lennep"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045mbx7",
          "entity_name": "The Fortune Teller (Louvre)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065cxkf",
          "entity_name": "The Stag Hunt"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065m7qr",
          "entity_name": "The Liberation of St. Peter"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05by2vv",
          "entity_name": "The Maas at Dordrecht"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cfrbv",
          "entity_name": "Girl at a Window"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04_2_tx",
          "entity_name": "Esther and Ahasuerus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0d67lyh",
          "entity_name": "Still-Life with a Basket of Fruit on a Marble Ledge"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0wy3j77",
          "entity_name": "The Rape of the Daughters of Leucippus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gw721b",
          "entity_name": "Christ in Glory"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rglhj",
          "entity_name": "The Future Stadholder Willem II, Prince of Orange, and His Bride Princess Mary Stuart"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rj0fh",
          "entity_name": "Ecce Homo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bxk0r1",
          "entity_name": "The Wedding by Proxy of Marie de' Medici to King Henry IV"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04_2_v2",
          "entity_name": "The Sleeping Venus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05m5qbg",
          "entity_name": "St. Paul Healing the Cripple at Lystra"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04_309y",
          "entity_name": "Self-portrait"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065cxk0",
          "entity_name": "The Deer Hunt"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.043zwk2",
          "entity_name": "Infanta Margarita Teresa in a Blue Dress"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.043w8pp",
          "entity_name": "The Rape of the Sabines"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06_klwj",
          "entity_name": "Noli me tangere"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08ypkw",
          "entity_name": "Assumption of the Virgin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qw2kp",
          "entity_name": "Artemisia"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052sdzr",
          "entity_name": "Parable of the Wheat and the Tares"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bykc_",
          "entity_name": "Old Woman Dozing"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065wsmh",
          "entity_name": "The Girl with a Coin (Girl of Galicia)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03c6s1g",
          "entity_name": "Saint George and the Dragon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rgk4g",
          "entity_name": "Willem II, Prince of Orange, and his Wife Maria Stuart"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064vg9l",
          "entity_name": "Self-Portrait with Lace Collar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065wvc0",
          "entity_name": "The Proposition"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063zp70",
          "entity_name": "Susanna and the Elders"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bqjpg",
          "entity_name": "Flora"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052t69d",
          "entity_name": "Vertumnus and Pomona"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0d67wt8",
          "entity_name": "Still-Life with Fruit, Parrot, and Nautilus Pitcher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rhks_",
          "entity_name": "Charles I and His Wife Henrietta Maria with Their Eldest Children Charles and James"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05m5pr2",
          "entity_name": "Venus and Adonis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rhlnd",
          "entity_name": "Vision of the Blessed Herman Joseph"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065m7tv",
          "entity_name": "Salome"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rhs30",
          "entity_name": "Portrait of James Stuart, Duke of Richmond"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063p_vq",
          "entity_name": "Lucretia"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09scghy",
          "entity_name": "Assumption of the Virgin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06_kgzn",
          "entity_name": "Christ in the House of Martha and Mary"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04_2z87",
          "entity_name": "Judith Beheading Holofernes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065m7qy",
          "entity_name": "The Martyrdom of Saint Sebastian"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9yr4",
          "entity_name": "The Entombment"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bfmqp8",
          "entity_name": "Juno"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qw2gy",
          "entity_name": "The Prodigal Son in the Tavern"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065srp5",
          "entity_name": "Peasants Before an Inn"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052pg4m",
          "entity_name": "Portrait of a Lady"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063pq3l",
          "entity_name": "Portrait of the Lomellini Family"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065m7v0",
          "entity_name": "Cupid Sleeping"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065srhr",
          "entity_name": "Children Teaching a Cat to Dance"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065cv28",
          "entity_name": "Arctic Adventure"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yxlx0",
          "entity_name": "The Wedding of Samson"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cdtl0",
          "entity_name": "The Town Hall of Amsterdam"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.078w0l8",
          "entity_name": "Portrait of a Man"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04yyb9",
          "entity_name": "The Burial of St. Petronilla"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1q2xhdvff",
          "entity_name": "Portrait of Titus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07wrthw",
          "entity_name": "Dedication of a New Vestal Virgin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03ccb2n",
          "entity_name": "The Conspiracy of Claudius Civilis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.072qrss",
          "entity_name": "David and Uriah"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cy_j7",
          "entity_name": "Return of the Prodigal Son"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064vggw",
          "entity_name": "Self-Portrait"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cy_jf",
          "entity_name": "Two Women at a Window"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rnpwp",
          "entity_name": "St. Francis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027nlnr",
          "entity_name": "Prometheus Being Chained by Vulcan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04_2zpw",
          "entity_name": "Judith and her Maidservant"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05w3kh_",
          "entity_name": "Saint Francis in Meditation"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.043w9k_",
          "entity_name": "Entrance of Alexander into Babylon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cz23v",
          "entity_name": "Portrait of an Elderly Lady"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b44qdz",
          "entity_name": "Charles I with M. de St Antoine"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bfmqyl",
          "entity_name": "Portrait of a Boy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rhjwy",
          "entity_name": "Self-Portrait as Paris"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05n25cd",
          "entity_name": "Peacocks"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0d6vnp",
          "entity_name": "A Lady Writing a Letter"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05m5pgm",
          "entity_name": "Count Willem II of Holland Granting Privileges"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065ssbd",
          "entity_name": "Drunken Silenus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05px3cc",
          "entity_name": "Landscape with a Huntsman and Dead Game"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1hc0hc1zq",
          "entity_name": "Jacob Wrestling with the Angel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052t07r",
          "entity_name": "Concert"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065sszw",
          "entity_name": "Mary Magdalene in the Desert"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.121zpfnj",
          "entity_name": "La infanta Margarita"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065ss5v",
          "entity_name": "St. Francis of Assisi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rhjxf",
          "entity_name": "Self Portrait with a Sunflower"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05m5pgf",
          "entity_name": "Young Woman Warming Her Hands"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bfmq_g",
          "entity_name": "Saint Bartholomew"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kjrrq",
          "entity_name": "Four Figures on a Step"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07nb6_w",
          "entity_name": "Ships Tossed in a Gale"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063fgq5",
          "entity_name": "Without Ceres and Bacchus, Venus would Freeze"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c1qnwj",
          "entity_name": "Christ Crowned with Thorns"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06_d6fv",
          "entity_name": "A Fantastic Cave with Odysseus and Calypso"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kjrkj",
          "entity_name": "The Little Fruit Seller"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.070stcn",
          "entity_name": "The Three Graces"
        }
      ]
    },
    {
      "question": "What movie starring Adam Sandler that is categorized as cartoon pornography?",
      "qid": "WebQTrn-1677_45a71163e7876e1ca8b7c88e38999705_cwq",
      "source": "cwq",
      "entities": {
        "Adam Sandler": "m.0pz91",
        "Cartoon pornography": "m.08phz7"
      },
      "s_expression": "(AND (JOIN (R film.producer.film) m.0pz91) (JOIN film.film.genre (JOIN media_common.media_genre.child_genres m.08phz7)))",
      "actions": [
        "get_relations(m.0pz91)",
        "get_neighbors(m.0pz91,film.producer.film)",
        "get_relations(m.08phz7)",
        "get_neighbors(m.08phz7,media_common.media_genre.parent_genre)",
        "get_relations(#1)",
        "get_neighbors(#1,film.film_genre.films_in_this_genre)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.010rdrd1"
        },
        {
          "answer_argument": "m.02m7tn"
        }
      ]
    },
    {
      "question": "what olympic event was contested officially in 2002 winter olympics and other olympic games in sochi?",
      "qid": "4300161007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Sochi": "m.0m465",
        "2002 Winter Olympics": "m.09n48"
      },
      "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.0m465)) (JOIN olympics.olympic_event.olympic_games_contested m.09n48)))",
      "actions": [
        "get_relations(m.0m465)",
        "get_neighbors(m.0m465,olympics.olympic_host_city.olympics_hosted)",
        "get_relations(#0)",
        "get_neighbors(#0,olympics.olympic_games.events)",
        "get_relations(m.09n48)",
        "get_neighbors(m.09n48,olympics.olympic_games.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqfb",
          "entity_name": "Women's Parallel Giant Slalom"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_v0",
          "entity_name": "Women's 1000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqb_",
          "entity_name": "Men's Aerials"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqc2",
          "entity_name": "Men's Moguls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqf4",
          "entity_name": "Men's Individual Normal Hill"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_t4",
          "entity_name": "Women's 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqft",
          "entity_name": "Women's 5000 m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpww",
          "entity_name": "Men's Downhill"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpx1",
          "entity_name": "Women's Slalom"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpxf",
          "entity_name": "Women's Downhill"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpyc",
          "entity_name": "Women's Giant Slalom"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqcn",
          "entity_name": "Women's Singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqdl",
          "entity_name": "Men's 500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqf_",
          "entity_name": "Men's 10000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_xm",
          "entity_name": "Men's 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zhzln",
          "entity_name": "Men's 5000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bj4fg7",
          "entity_name": "Men's singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wq96",
          "entity_name": "Women's 10 km"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wq88",
          "entity_name": "Men's 20 km Individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqd0",
          "entity_name": "Women's 1000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqbt",
          "entity_name": "Women's Moguls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqbq",
          "entity_name": "Women's Aerials"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zj03w",
          "entity_name": "Women's Singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zj032",
          "entity_name": "Men's Singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqfq",
          "entity_name": "Women's 3000 m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqdd",
          "entity_name": "Men's 1000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_rx",
          "entity_name": "Women's 500 m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqd3",
          "entity_name": "Women's 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_x2",
          "entity_name": "Men's 1000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqf7",
          "entity_name": "Women's Halfpipe"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wq8v",
          "entity_name": "Women's 7.5 km Sprint"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9nmy",
          "entity_name": "Men's Halfpipe"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqg5",
          "entity_name": "Men's 500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpx7",
          "entity_name": "Women's Super-G"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqdh",
          "entity_name": "Men's 1500 m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpy5",
          "entity_name": "Men's 10 km Sprint"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wq82",
          "entity_name": "Men's 12.5 km Pursuit"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wq8g",
          "entity_name": "Women's 10 km Pursuit"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wq8n",
          "entity_name": "Women's 15 km Individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wpwp",
          "entity_name": "Men's Super-G"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wq9l",
          "entity_name": "Women's Individual Sprint"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqb4",
          "entity_name": "Men's Individual Sprint"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqd9",
          "entity_name": "Women's 500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqds",
          "entity_name": "Men's Skeleton"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqdw",
          "entity_name": "Women's Skeleton"
        }
      ]
    },
    {
      "question": "nikon coolpix l11 camera from unknown supports which iso?",
      "qid": "4304013012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Nikon Coolpix L11": "m.03q2ndc",
        "Unknown": "m.01xrf_0"
      },
      "s_expression": "(AND digicams.camera_iso (AND (JOIN digicams.camera_iso.cameras m.03q2ndc) (JOIN (R digicams.digital_camera.iso_setting) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.01xrf_0))))",
      "actions": [
        "get_relations(m.03q2ndc)",
        "get_neighbors(m.03q2ndc,digicams.digital_camera.iso_setting)",
        "get_relations(m.01xrf_0)",
        "get_neighbors(m.01xrf_0,digicams.camera_sensor_manufacturer.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.iso_setting)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_x",
          "entity_name": "100"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0220vx9",
          "entity_name": "80"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_7",
          "entity_name": "Auto"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_g",
          "entity_name": "400"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_p",
          "entity_name": "200"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg58",
          "entity_name": "800"
        }
      ]
    },
    {
      "question": "how many models of amstrad cpc computers used zilog z80 processors?",
      "qid": "3205922006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Amstrad CPC": "m.0xkl",
        "Zilog Z80": "m.0898v"
      },
      "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.0xkl) (JOIN computer.computer.processor m.0898v))))",
      "actions": [
        "get_relations(m.0xkl)",
        "get_neighbors(m.0xkl,computer.computer.includes_models)",
        "get_relations(m.0898v)",
        "get_neighbors(m.0898v,computer.computer_processor.used_in_computers)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "3"
        }
      ]
    },
    {
      "question": "What was the last Superbowl won by the team who won the XXXIII Superbowl?",
      "qid": "WebQTest-969_e656ec7f88e2c80b8a642130969318ba_cwq",
      "source": "cwq",
      "entities": {
        "Superbowl": "m.06x5s",
        "XXXIII Superbowl": "m.076y0"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.076y0)) (JOIN time.event.instance_of_recurring_event m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.076y0)",
        "get_neighbors(m.076y0,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,time.recurring_event.instances)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.076y0",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXXIII"
        }
      ]
    },
    {
      "question": "Which year did the sports team at M&T Bank Stadium, win the Superbowl?",
      "qid": "WebQTrn-2136_a65373d6ffaa966c347087864c895897_cwq",
      "source": "cwq",
      "entities": {
        "superbowl": "m.06x5s",
        "M&T Bank Stadium": "m.01yq7r"
      },
      "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.01yq7r)) (JOIN sports.sports_championship_event.championship m.06x5s))",
      "actions": [
        "get_relations(m.01yq7r)",
        "get_neighbors(m.01yq7r,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0642vqv",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLVII"
        },
        {
          "answer_argument": "m.076yq",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXXV"
        }
      ]
    },
    {
      "question": "Where was the author of Without End born that is also where the Euro 2012 Tournament was held?",
      "qid": "WebQTrn-463_713dda38bbe5ea8fe852a72a1b44f067_cwq",
      "source": "cwq",
      "entities": {
        "euro 2012": "m.06t1s0",
        "Without End": "m.04xq3nb"
      },
      "s_expression": "(AND (JOIN (R time.event.locations) m.06t1s0) (JOIN location.location.people_born_here (JOIN book.author.book_editions_published m.04xq3nb)))",
      "actions": [
        "get_relations(m.06t1s0)",
        "get_neighbors(m.06t1s0,time.event.locations)",
        "get_relations(m.04xq3nb)",
        "get_neighbors(m.04xq3nb,book.book_edition.author_editor)",
        "get_relations(#1)",
        "get_neighbors(#1,people.person.place_of_birth)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0d7_n",
          "answer_type": "Entity",
          "entity_name": "Lviv"
        }
      ]
    },
    {
      "question": "What kind of guitar did the composer of \"Sillyworld\" play?",
      "qid": "WebQTest-1279_6f318bb15282b38b936eaaaebaf2fccd_cwq",
      "source": "cwq",
      "entities": {
        "Guitar": "m.0342h",
        "Sillyworld": "m.027rysw"
      },
      "s_expression": "(AND (JOIN (R music.group_member.instruments_played) (JOIN music.composer.compositions m.027rysw)) (JOIN music.instrument.family m.0342h))",
      "actions": [
        "get_relations(m.027rysw)",
        "get_neighbors(m.027rysw,music.composition.composer)",
        "get_relations(#0)",
        "get_neighbors(#0,music.group_member.instruments_played)",
        "get_relations(m.0342h)",
        "get_neighbors(m.0342h,music.instrument.variation)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.018vs",
          "answer_type": "Entity",
          "entity_name": "Bass guitar"
        }
      ]
    },
    {
      "question": "which dog breeds have the same temperament as basset hounds and guejae gae?",
      "qid": "4300795007000_grailqa",
      "source": "grailqa",
      "entities": {
        "basset hounds": "m.0hw_s",
        "Guejae Gae": "m.026067b"
      },
      "s_expression": "(AND biology.animal_breed (JOIN biology.animal_breed.temperament (AND (JOIN (R biology.animal_breed.temperament) m.0hw_s) (JOIN biology.breed_temperament.breeds m.026067b))))",
      "actions": [
        "get_relations(m.0hw_s)",
        "get_neighbors(m.0hw_s,biology.animal_breed.temperament)",
        "get_relations(m.026067b)",
        "get_neighbors(m.026067b,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,biology.breed_temperament.breeds)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02r4blp",
          "entity_name": "Braque d'Auvergne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0km3f",
          "entity_name": "Labrador Retriever"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0182yx",
          "entity_name": "Shetland Sheepdog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0183xd",
          "entity_name": "Vizsla"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01hzb8",
          "entity_name": "Great Pyrenees"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pm38",
          "entity_name": "Clumber Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01s7fj",
          "entity_name": "Shih Tzu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02cyl6",
          "entity_name": "Maltese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03cq_p",
          "entity_name": "Kerry Blue Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03d12",
          "entity_name": "Greyhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l5cy",
          "entity_name": "Spinone Italiano"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03ydd_",
          "entity_name": "Havanese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04dm6",
          "entity_name": "Komondor"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04nmst",
          "entity_name": "King Charles Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05y236",
          "entity_name": "New Guinea singing dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08626",
          "entity_name": "Whippet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08f_zh",
          "entity_name": "Pont-Audemer Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bjrtp",
          "entity_name": "Cirneco dell'Etna"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bllpv",
          "entity_name": "Puggle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dpx6y",
          "entity_name": "German Longhaired Pointer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gt5n2",
          "entity_name": "Cretan Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0nr94",
          "entity_name": "Bichon Frise"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01d7mc",
          "entity_name": "Black and Tan Coonhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01dj7",
          "entity_name": "Beagle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pyhj",
          "entity_name": "Shiloh Shepherd Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026qz0j",
          "entity_name": "Polish Hunting Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02p1d4",
          "entity_name": "St. Bernard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pxllv",
          "entity_name": "Blue Picardy Spaniel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02z2jdn",
          "entity_name": "Beagador"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03606n",
          "entity_name": "Sapsali"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03h71r",
          "entity_name": "Bouvier des Flandres"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06llrr",
          "entity_name": "Carolina Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.076_8",
          "entity_name": "Scottish Deerhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08c5h8",
          "entity_name": "Brazilian Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.093z2k",
          "entity_name": "Carlin Pinscher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kkkg",
          "entity_name": "Istrian Coarse-haired Hound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c3k58",
          "entity_name": "Pražský Krysařík"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gh46s",
          "entity_name": "Tahltan Bear Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0lbw4",
          "entity_name": "Great Dane"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0m1ct",
          "entity_name": "Wirehaired Pointing Griffon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0ysvz",
          "entity_name": "Louisiana Catahoula Leopard Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01z404",
          "entity_name": "Newfoundland"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02l61f",
          "entity_name": "Rough Collie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qllrh",
          "entity_name": "Porcelaine"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qr3y_",
          "entity_name": "Northern Inuit Dog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03g_78s",
          "entity_name": "Gaddi Kutta"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04sxch4",
          "entity_name": "Pocket Beagle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051ppn",
          "entity_name": "Glen of Imaal Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06w066",
          "entity_name": "English Foxhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.071jj",
          "entity_name": "Siberian Husky"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gz1d",
          "entity_name": "English Setter"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.018z4d",
          "entity_name": "Bloodhound"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03cr7fw",
          "entity_name": "Morkie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05pyhd",
          "entity_name": "Tibetan Terrier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.035w0_",
          "entity_name": "Perro de Presa Canario"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01j0g",
          "entity_name": "Borzoi"
        }
      ]
    },
    {
      "question": "When did the sports team whose mascot is Mrs. Met most recently win the World Series?",
      "qid": "WebQTest-1556_852ae10314bb05a85906d9d65112e76e_cwq",
      "source": "cwq",
      "entities": {
        "Mrs. Met": "m.0w7lzvh"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.0w7lzvh)) time.event.end_date)",
      "actions": [
        "get_relations(m.0w7lzvh)",
        "get_neighbors(m.0w7lzvh,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.01q9lc",
          "answer_type": "Entity",
          "entity_name": "1986 World Series"
        }
      ]
    },
    {
      "question": "What type of cancer did the topic of the image Huell and Aaron Proctor died of?",
      "qid": "WebQTrn-1011_92a01d17f86f5a765083c2346b6dd615_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "aaron proctor": "m.04pq5pw"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN common.topic.image m.04pq5pw)) (JOIN medicine.disease.parent_disease m.0qcr0))",
      "actions": [
        "get_relations(m.04pq5pw)",
        "get_neighbors(m.04pq5pw,common.image.appears_in_topic_gallery)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,medicine.disease.includes_diseases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0m32h",
          "answer_type": "Entity",
          "entity_name": "Prostate cancer"
        }
      ]
    },
    {
      "question": "who designed a bipropellant rocket engine with unsymmetrical dimethylhydrazine and pressure-fed engine?",
      "qid": "4300753008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Pressure-fed engine": "m.04qqrz",
        "Unsymmetrical dimethylhydrazine": "m.017q1y"
      },
      "s_expression": "(AND spaceflight.rocket_engine_designer (JOIN spaceflight.rocket_engine_designer.rocket_engines (AND (JOIN (R spaceflight.rocket_engine_cycle.rocket_engines) m.04qqrz) (JOIN (R spaceflight.rocket_engine_fuel.rocket_engines) m.017q1y))))",
      "actions": [
        "get_relations(m.04qqrz)",
        "get_neighbors(m.04qqrz,spaceflight.rocket_engine_cycle.rocket_engines)",
        "get_relations(m.017q1y)",
        "get_neighbors(m.017q1y,spaceflight.rocket_engine_fuel.rocket_engines)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,spaceflight.rocket_engine.designed_by)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05_t5k",
          "entity_name": "Aleksei Mihailovich Isaev"
        }
      ]
    },
    {
      "question": "there exists an olympic event that was contested officially in 1984 summer olympic games and other olympic games in bejing, what is it?",
      "qid": "4300161001000_grailqa",
      "source": "grailqa",
      "entities": {
        "bejing": "m.01914",
        "1984 summer olympic games": "m.0l6ny"
      },
      "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.01914)) (JOIN olympics.olympic_event.olympic_games_contested m.0l6ny)))",
      "actions": [
        "get_relations(m.01914)",
        "get_neighbors(m.01914,olympics.olympic_host_city.olympics_hosted)",
        "get_relations(#0)",
        "get_neighbors(#0,olympics.olympic_games.events)",
        "get_relations(m.0l6ny)",
        "get_neighbors(m.0l6ny,olympics.olympic_games.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk384",
          "entity_name": "Women's Long jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3lm",
          "entity_name": "Women's Discus throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk31r",
          "entity_name": "Men's Floor exercises"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2n3",
          "entity_name": "Women's 200m individual medley"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk29n",
          "entity_name": "Men's Boxing, Featherweight 54 - 57 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2k4",
          "entity_name": "Women's Uneven bars"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3jl",
          "entity_name": "Men's Track cycling, Points Race"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2h8",
          "entity_name": "Women's Floor exercises"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9mpm",
          "entity_name": "Men's Sailboard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2mh",
          "entity_name": "Women's Balance Beam"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3j8",
          "entity_name": "Women's 200m butterfly"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2l7",
          "entity_name": "Women's 25m pistol"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk305",
          "entity_name": "Women's 50m rifle 3 positions"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk33s",
          "entity_name": "Men's 10m air rifle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk35h",
          "entity_name": "Men's 50m rifle 3 positions"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3c3",
          "entity_name": "Women's 10m air rifle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3hh",
          "entity_name": "Men's Skeet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qy",
          "entity_name": "Women's Athletics, 800m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32c",
          "entity_name": "Women's Athletics, 200m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk342",
          "entity_name": "Men's 50km walk"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3cx",
          "entity_name": "Men's Épée individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3m7",
          "entity_name": "Men's Boxing, 48 - 51kg (flyweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2w9",
          "entity_name": "Women's 400m individual medley"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2nl",
          "entity_name": "Women's Athletics, 400m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2pj",
          "entity_name": "Women's Athletics, 100m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2b3",
          "entity_name": "Women's Archery, individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2_w",
          "entity_name": "Men's Track cycling, Sprint individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30n",
          "entity_name": "Men's Road cycling, individual road race"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3cl",
          "entity_name": "Men's Shot put"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2ks",
          "entity_name": "Men's C-1 1000m (canoe single)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk326",
          "entity_name": "Men's 200m breaststroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2pv",
          "entity_name": "Men's Javelin throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2hx",
          "entity_name": "Men's 1500m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2pc",
          "entity_name": "Men's Discus throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2dy",
          "entity_name": "Women's Shot put"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079yv82",
          "entity_name": "Finn Class"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk368",
          "entity_name": "Women's High jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9lcn",
          "entity_name": "Women's 3 metre springboard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9ld0",
          "entity_name": "Men's 3 metre springboard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9ld6",
          "entity_name": "Women's 10 metre platform"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk282",
          "entity_name": "Men's Volleyball"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk29t",
          "entity_name": "Men's Parallel bars"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2c_",
          "entity_name": "Men's Gymnastics, individual all-round"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2dm",
          "entity_name": "Women's Foil individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2f7",
          "entity_name": "Men's 50m pistol"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2gh",
          "entity_name": "Eventing, individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2hl",
          "entity_name": "Men's Athletics, 100m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2jp",
          "entity_name": "Men's Athletics, 5000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2lq",
          "entity_name": "Men's Foil individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2mz",
          "entity_name": "Men's Marathon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qm",
          "entity_name": "Men's Athletics, 400m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qs",
          "entity_name": "Men's 100m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2rd",
          "entity_name": "Men's Pole vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2sn",
          "entity_name": "Women's 100m backstroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2tl",
          "entity_name": "Men's Athletics, 400m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2tx",
          "entity_name": "Women's 400m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2x7",
          "entity_name": "Men's Pommel horse"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2xq",
          "entity_name": "Men's Sabre individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2yb",
          "entity_name": "Jumping, individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2yh",
          "entity_name": "Men's Athletics, 200m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2zl",
          "entity_name": "Men's Horizontal bar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk300",
          "entity_name": "Men's Hammer throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30h",
          "entity_name": "Men's Athletics, 110m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30t",
          "entity_name": "Men's 400m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32_",
          "entity_name": "Men's Triple jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32p",
          "entity_name": "Men's High jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk334",
          "entity_name": "Men's 25m rapid fire pistol"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk33m",
          "entity_name": "Women's 200m breaststroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk35z",
          "entity_name": "Men's Modern pentathlon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39d",
          "entity_name": "Men's Vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39q",
          "entity_name": "Women's 100m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39w",
          "entity_name": "Men's Athletics, 10000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3b5",
          "entity_name": "Men's Athletics, 800m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3bh",
          "entity_name": "Men's 100m backstroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3d6",
          "entity_name": "Men's 50m rifle prone"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3dj",
          "entity_name": "Men's Decathlon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3fm",
          "entity_name": "Men's 3000m steeplechase"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3kp",
          "entity_name": "Men's Rings"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3l9",
          "entity_name": "Men's Single sculls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3n5",
          "entity_name": "Men's Athletics, 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0k1nqc0",
          "entity_name": "Individual Dressage"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3jx",
          "entity_name": "Women's K-1 500m (kayak single)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3n0",
          "entity_name": "Women's Road cycling, individual road race"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2rq",
          "entity_name": "Women's 800m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk28q",
          "entity_name": "Women's 200m backstroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2mn",
          "entity_name": "Women's Athletics, 100m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2nx",
          "entity_name": "Men's 200m butterfly"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3ht",
          "entity_name": "Men's Boxing, Super Heavyweight +91kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3p3",
          "entity_name": "Men's Judo, - 60 kg Men (extra lightweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3pf",
          "entity_name": "Men's 100m butterfly"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2b8",
          "entity_name": "Men's Boxing, Bantamweight 51 - 54kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2c1",
          "entity_name": "Men's Judo, 73 - 81kg (half-middleweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3h5",
          "entity_name": "Women's Javelin throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2lk",
          "entity_name": "Men's 200m backstroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk35t",
          "entity_name": "Men's Boxing, - Light Flyweight -48kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk371",
          "entity_name": "Men's 20km walk"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3px",
          "entity_name": "Men's Boxing, Lightweight 57 - 60kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3nh",
          "entity_name": "Women's Volleyball"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk339",
          "entity_name": "Men's K-1 1000m (kayak single)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3gq",
          "entity_name": "Men's 200m individual medley"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2n8",
          "entity_name": "Men's 400m individual medley"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2z3",
          "entity_name": "Women's Vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3nb",
          "entity_name": "Women's Gymnastics, individual all-round"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2c6",
          "entity_name": "Men's Boxing, Light Heavyweight 75 - 81kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2nr",
          "entity_name": "Men's Track cycling, Individual Pursuit"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3g2",
          "entity_name": "Men's 100m breaststroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk38m",
          "entity_name": "Men's Archery, individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2vj",
          "entity_name": "Women's Athletics, 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03w8gdr",
          "entity_name": "Men's 200m Freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3ls",
          "entity_name": "Women's 200m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk376",
          "entity_name": "Men's K-1 500m (kayak single)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3f9",
          "entity_name": "Women's 100m breaststroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk29z",
          "entity_name": "Women's Rhythmic gymnastics, individual all-round"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2nf",
          "entity_name": "Men's Boxing, Heavyweight 81 - 91kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3nz",
          "entity_name": "Women's 100m butterfly"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2sz",
          "entity_name": "Women's Athletics, 400m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3g7",
          "entity_name": "Women's Single Sculls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2jv",
          "entity_name": "Men's C-1 500m (canoe single)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk33y",
          "entity_name": "Women's Athletics, Marathon"
        }
      ]
    },
    {
      "question": "how many programming language paradigms are there for eiffel and dolittle?",
      "qid": "3205793014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Eiffel": "m.02p6w",
        "Dolittle": "m.0x1xg32"
      },
      "s_expression": "(COUNT (AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.02p6w) (JOIN computer.programming_language_paradigm.languages m.0x1xg32))))",
      "actions": [
        "get_relations(m.02p6w)",
        "get_neighbors(m.02p6w,computer.programming_language.language_paradigms)",
        "get_relations(m.0x1xg32)",
        "get_neighbors(m.0x1xg32,computer.programming_language.language_paradigms)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "the bipropellant rocket engine with liquid hydrogen and staged combustion cycle is designed by who?",
      "qid": "4300753001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Staged combustion cycle": "m.04qqmt",
        "Liquid hydrogen": "m.0g0nz"
      },
      "s_expression": "(AND spaceflight.rocket_engine_designer (JOIN spaceflight.rocket_engine_designer.rocket_engines (AND (JOIN (R spaceflight.rocket_engine_cycle.rocket_engines) m.04qqmt) (JOIN (R spaceflight.rocket_engine_fuel.rocket_engines) m.0g0nz))))",
      "actions": [
        "get_relations(m.04qqmt)",
        "get_neighbors(m.04qqmt,spaceflight.rocket_engine_cycle.rocket_engines)",
        "get_relations(m.0g0nz)",
        "get_neighbors(m.0g0nz,spaceflight.rocket_engine_fuel.rocket_engines)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,spaceflight.rocket_engine.designed_by)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01vhl6",
          "entity_name": "Rocketdyne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03c_441",
          "entity_name": "Chemical Automatics Design Bureau"
        }
      ]
    },
    {
      "question": "what is the musical recording with the greatest length that is a track of musical release component released by trance nation 20?",
      "qid": "4301467001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Trance Nation 20": "m.03jfzq8"
      },
      "s_expression": "(ARGMAX (AND music.recording (JOIN (R music.release.track) (JOIN (R music.album.releases) m.03jfzq8))) music.recording.length)",
      "actions": [
        "get_relations(m.03jfzq8)",
        "get_neighbors(m.03jfzq8,music.album.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.track)",
        "get_attributes(#1)",
        "argmax(#1,music.recording.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0168q_7",
          "entity_name": "SI-N+R-JE (Genix remix)"
        }
      ]
    },
    {
      "question": "what is the programming language paradigm used by factor and another programming language influenced by algol?",
      "qid": "4300798000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Factor": "m.03m7hp",
        "ALGOL": "m.0q1x"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.03m7hp) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.0q1x))))",
      "actions": [
        "get_relations(m.03m7hp)",
        "get_neighbors(m.03m7hp,computer.programming_language.language_paradigms)",
        "get_relations(m.0q1x)",
        "get_neighbors(m.0q1x,computer.programming_language.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.programming_language.language_paradigms)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01h1_2",
          "entity_name": "Comparison of multi-paradigm programming languages"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ykw",
          "entity_name": "Functional programming"
        }
      ]
    },
    {
      "question": "what are the different breeds that are from republic of brazil have the same temperament as the manchester terrier?",
      "qid": "4303460005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Manchester Terrier": "m.074g8y",
        "republic of brazil": "m.015fr"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.015fr)) (JOIN (R biology.animal_breed.temperament) m.074g8y))))",
      "actions": [
        "get_relations(m.015fr)",
        "get_neighbors(m.015fr,biology.breed_origin.breeds_originating_here)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.074g8y)",
        "get_neighbors(m.074g8y,biology.animal_breed.temperament)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "3"
        }
      ]
    },
    {
      "question": "Team mascot Thunder and his team play where?",
      "qid": "WebQTrn-2684_5136af6b390b0496a438c60c7f206a98_cwq",
      "source": "cwq",
      "entities": {
        "Thunder": "m.0_h1qbn"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.team_mascot m.0_h1qbn)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.0_h1qbn)",
        "get_neighbors(m.0_h1qbn,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.02hxv8",
          "answer_type": "Entity",
          "entity_name": "Sports Authority Field at Mile High"
        }
      ]
    },
    {
      "question": "When did the sports team who won the 2007-2008 Premier League championship have their first victory?",
      "qid": "WebQTrn-1018_5ec0304dbb715858e564cb8426b7e4f7_cwq",
      "source": "cwq",
      "entities": {
        "2007-2008 premier league": "m.02qjps3"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.02qjps3)) time.event.end_date)",
      "actions": [
        "get_relations(m.02qjps3)",
        "get_neighbors(m.02qjps3,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04gk9y8",
          "answer_type": "Entity",
          "entity_name": "1976–77 FA Cup"
        }
      ]
    },
    {
      "question": "what is the name of the character that has the ability of godspeed had an item that was eventually destroyed by swordsmen?",
      "qid": "4302209007000_grailqa",
      "source": "grailqa",
      "entities": {
        "swordsmen": "m.0cnb192",
        "Godspeed": "m.0c3g359"
      },
      "s_expression": "(AND fictional_universe.fictional_character (AND (JOIN fictional_universe.fictional_character.has_possessed (JOIN fictional_universe.fictional_object.destroyer m.0cnb192)) (JOIN fictional_universe.fictional_character.powers_or_abilities m.0c3g359)))",
      "actions": [
        "get_relations(m.0cnb192)",
        "get_neighbors(m.0cnb192,fictional_universe.fictional_object_destroyer.fictional_objects_destroyed)",
        "get_relations(#0)",
        "get_neighbors(#0,fictional_universe.fictional_object.owner)",
        "get_relations(m.0c3g359)",
        "get_neighbors(m.0c3g359,fictional_universe.character_powers.characters_with_this_ability)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bxj80p",
          "entity_name": "Tempus"
        }
      ]
    },
    {
      "question": "the character that resides in the aircraft of sonic team's sonic the hedgehog universe is named what?",
      "qid": "4300742013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Aircraft": "m.0k5j",
        "Sonic Team's Sonic the Hedgehog Universe": "m.0cnb3nv"
      },
      "s_expression": "(AND fictional_universe.fictional_character (JOIN fictional_universe.fictional_character.places_lived (AND (JOIN fictional_universe.fictional_setting.setting_type m.0k5j) (JOIN (R fictional_universe.fictional_universe.locations) m.0cnb3nv))))",
      "actions": [
        "get_relations(m.0k5j)",
        "get_neighbors(m.0k5j,fictional_universe.type_of_fictional_setting.settings)",
        "get_relations(m.0cnb3nv)",
        "get_neighbors(m.0cnb3nv,fictional_universe.fictional_universe.locations)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,fictional_universe.fictional_setting.characters_that_have_lived_here)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01r4bw",
          "entity_name": "Big the Cat"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02hlp4",
          "entity_name": "Chaos"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.015dxd",
          "entity_name": "Knuckles the Echidna"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07656",
          "entity_name": "Sonic the Hedgehog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01mx1l",
          "entity_name": "Amy Rose"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02nyqs",
          "entity_name": "E-102 Gamma"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01rk30",
          "entity_name": "Doctor Ivo Robotnik"
        }
      ]
    },
    {
      "question": "how many texts on protestantism are there which are religious texts of jerusalem day?",
      "qid": "4303883011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Protestantism": "m.05sfs",
        "Jerusalem Day": "m.02zzqk"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of (JOIN (R time.holiday.featured_in_religions) m.02zzqk)) (JOIN (R religion.religion.texts) m.05sfs))))",
      "actions": [
        "get_relations(m.02zzqk)",
        "get_neighbors(m.02zzqk,time.holiday.featured_in_religions)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religion.texts)",
        "get_relations(m.05sfs)",
        "get_neighbors(m.05sfs,religion.religion.texts)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "which department of university of göttingen does thomas barker work in?",
      "qid": "4301362003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Thomas Barker": "m.0zg86vc",
        "University of Göttingen": "m.018pb9"
      },
      "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.0zg86vc)) (JOIN (R education.university.departments) m.018pb9)))",
      "actions": [
        "get_relations(m.0zg86vc)",
        "get_neighbors(m.0zg86vc,education.academic.research_areas)",
        "get_relations(#0)",
        "get_neighbors(#0,education.field_of_study.academic_departments)",
        "get_relations(m.018pb9)",
        "get_neighbors(m.018pb9,education.university.departments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dgff9l",
          "entity_name": "University of Göttingen Faculty of Mathematics and Computer Science"
        }
      ]
    },
    {
      "question": "when was the last dallas cowboys super bowl win",
      "qid": "WebQTrn-387_webqsp",
      "source": "webqsp",
      "entities": {
        "dallas cowboys": "m.02896"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) m.02896) (JOIN sports.sports_championship_event.champion m.02896)) time.event.end_date)",
      "actions": [
        "get_relations(m.02896)",
        "get_neighbors(m.02896,sports.sports_team.championships)",
        "get_relations(m.02896)",
        "get_neighbors(m.02896,sports.sports_team.championships)",
        "intersection(#0,#1)",
        "get_attributes(#2)",
        "argmax(#2,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.076wz",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXX"
        }
      ]
    },
    {
      "question": "what number of breeds in the russian share a similar temperament with the rajapalayam?",
      "qid": "4303460011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Rajapalayam": "m.05kz7n",
        "russian": "m.06bnz"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.06bnz)) (JOIN (R biology.animal_breed.temperament) m.05kz7n))))",
      "actions": [
        "get_relations(m.06bnz)",
        "get_neighbors(m.06bnz,biology.breed_origin.breeds_originating_here)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.05kz7n)",
        "get_neighbors(m.05kz7n,biology.animal_breed.temperament)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "Find the sports team that calls AT&T Park, when was the last time they won a world series?",
      "qid": "WebQTrn-710_c1d5c9c777c291a80c29c70ec43c45ad_cwq",
      "source": "cwq",
      "entities": {
        "AT&T Park": "m.01_gsg"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.01_gsg)) time.event.start_date)",
      "actions": [
        "get_relations(m.01_gsg)",
        "get_neighbors(m.01_gsg,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0117q3yz"
        }
      ]
    },
    {
      "question": "what drugs have panax ginseng fruit as an active ingredient and are also made from phenol/diphenhydramine?",
      "qid": "5400022003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Phenol/Diphenhydramine": "m.0jxrk_0",
        "Panax ginseng fruit": "m.0jxp2xd"
      },
      "s_expression": "(AND medicine.drug_dosage_form (AND (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.formulation_of m.0jxrk_0)) (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.active_ingredient_moieties m.0jxp2xd))))",
      "actions": [
        "get_relations(m.0jxrk_0)",
        "get_neighbors(m.0jxrk_0,medicine.drug.marketed_formulations)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.drug_formulation.dosage_form)",
        "get_relations(m.0jxp2xd)",
        "get_neighbors(m.0jxp2xd,medicine.drug_ingredient.active_moiety_of_formulation)",
        "get_relations(#2)",
        "get_neighbors(#2,medicine.drug_formulation.dosage_form)",
        "intersection(#1,#3)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04k94",
          "entity_name": "Liquid"
        }
      ]
    },
    {
      "question": "What was the last Stanley Cup won by the 2014 Stanley Cup champions?",
      "qid": "WebQTrn-209_1fd347fd5826d3b5ddf343900f672d16_cwq",
      "source": "cwq",
      "entities": {
        "2014 stanley cup": "m.010fdzhp"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.010fdzhp)) time.event.end_date)",
      "actions": [
        "get_relations(m.010fdzhp)",
        "get_neighbors(m.010fdzhp,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.010fdzhp",
          "answer_type": "Entity",
          "entity_name": "2014 Stanley Cup Finals"
        }
      ]
    },
    {
      "question": "the chrysler town and country and the model with predecesser škoda felicia is included in what class of automobiles?",
      "qid": "4301079006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Škoda Felicia": "m.07kk2p",
        "chrysler town and country": "m.089z__"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples (JOIN (R automotive.model.predecessor) m.07kk2p)) (JOIN automotive.automotive_class.examples m.089z__)))",
      "actions": [
        "get_relations(m.07kk2p)",
        "get_neighbors(m.07kk2p,automotive.model.predecessor)",
        "get_relations(#0)",
        "get_neighbors(#0,automotive.model.automotive_class)",
        "get_relations(m.089z__)",
        "get_neighbors(m.089z__,automotive.model.automotive_class)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02swz_",
          "entity_name": "Compact car"
        }
      ]
    },
    {
      "question": "When was the last time the team with Bailey as its mascot win the Stanley Cup?",
      "qid": "WebQTrn-209_96d16482c34e6502b6e243a02006467d_cwq",
      "source": "cwq",
      "entities": {
        "Bailey": "m.0j2h90q"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.0j2h90q)) time.event.end_date)",
      "actions": [
        "get_relations(m.0j2h90q)",
        "get_neighbors(m.0j2h90q,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.010fdzhp",
          "answer_type": "Entity",
          "entity_name": "2014 Stanley Cup Finals"
        }
      ]
    },
    {
      "question": "what programming language paradigm is water programming language and another programming language of tex?",
      "qid": "4300798003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Water programming language": "m.03qtl5",
        "TeX": "m.07dh_"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.03qtl5) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.07dh_))))",
      "actions": [
        "get_relations(m.03qtl5)",
        "get_neighbors(m.03qtl5,computer.programming_language.language_paradigms)",
        "get_relations(m.07dh_)",
        "get_neighbors(m.07dh_,computer.programming_language.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.programming_language.language_paradigms)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05prj",
          "entity_name": "Object-oriented programming"
        }
      ]
    },
    {
      "question": "What was the last time the sports team owned by Phillip Anschutz win a playoff series?",
      "qid": "WebQTest-1711_0e9d32b91aee2b2625672f6bbbec2a5d_cwq",
      "source": "cwq",
      "entities": {
        "phillip anschutz": "m.02fzwl"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.02fzwl)) time.event.end_date)",
      "actions": [
        "get_relations(m.02fzwl)",
        "get_neighbors(m.02fzwl,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.010fdzhp",
          "answer_type": "Entity",
          "entity_name": "2014 Stanley Cup Finals"
        }
      ]
    },
    {
      "question": "what parent industry do the construction material and the industry in which union operates have in common?",
      "qid": "4301917008000_grailqa",
      "source": "grailqa",
      "entities": {
        "union": "m.054w78",
        "construction material": "m.01jnzj"
      },
      "s_expression": "(AND business.industry (AND (JOIN (R business.industry.child_industry) (JOIN business.industry.trade_unions m.054w78)) (JOIN (R business.industry.child_industry) m.01jnzj)))",
      "actions": [
        "get_relations(m.054w78)",
        "get_neighbors(m.054w78,business.trade_union.industry)",
        "get_relations(#0)",
        "get_neighbors(#0,business.industry.child_industry)",
        "get_relations(m.01jnzj)",
        "get_neighbors(m.01jnzj,business.industry.child_industry)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0126b6d7",
          "entity_name": "Ballyclare Limited"
        }
      ]
    },
    {
      "question": "which military groups were from the same place as 1st louisiana native guard and were at the gettysburg battle?",
      "qid": "250000301_graphquestions",
      "source": "graphquestions",
      "entities": {
        "gettysburg battle": "m.01jnm",
        "1st Louisiana Native Guard": "m.0hr6dl9"
      },
      "s_expression": "(AND base.americancivilwar.military_unit (AND (JOIN military.military_unit.place_of_origin (JOIN (R military.military_unit.place_of_origin) m.0hr6dl9)) (JOIN base.americancivilwar.military_unit.conflicts_participated_in m.01jnm)))",
      "actions": [
        "get_relations(m.0hr6dl9)",
        "get_neighbors(m.0hr6dl9,military.military_unit.place_of_origin)",
        "get_relations(#0)",
        "get_neighbors(#0,military.military_unit_place_of_origin.military_units)",
        "get_relations(m.01jnm)",
        "get_neighbors(m.01jnm,base.americancivilwar.battle.military_units_involved_in_this_conflict)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04gjww9",
          "entity_name": "10th Louisiana Infantry"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l684",
          "entity_name": "15th Louisiana Infantry Regiment"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l66_",
          "entity_name": "14th Louisiana Infantry Regiment"
        }
      ]
    },
    {
      "question": "When did the sports team whose mascot is named Lucky the Leprechaun win their first championship?",
      "qid": "WebQTrn-2333_12f6cc11b208923d4a4976466bb4fd34_cwq",
      "source": "cwq",
      "entities": {
        "Lucky the Leprechaun": "m.03hb1rs"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.03hb1rs)) time.event.start_date)",
      "actions": [
        "get_relations(m.03hb1rs)",
        "get_neighbors(m.03hb1rs,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0cs2n0",
          "answer_type": "Entity",
          "entity_name": "1957 NBA Finals"
        }
      ]
    },
    {
      "question": "what isos from matsushita electric industrial does panasonic lumix dmc-tz2 support?",
      "qid": "4304013009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Panasonic Lumix DMC-TZ2": "m.03q2m1x",
        "matsushita electric industrial": "m.0nk5b"
      },
      "s_expression": "(AND digicams.camera_iso (AND (JOIN digicams.camera_iso.cameras m.03q2m1x) (JOIN (R digicams.digital_camera.iso_setting) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.0nk5b))))",
      "actions": [
        "get_relations(m.03q2m1x)",
        "get_neighbors(m.03q2m1x,digicams.digital_camera.iso_setting)",
        "get_relations(m.0nk5b)",
        "get_neighbors(m.0nk5b,digicams.camera_sensor_manufacturer.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.iso_setting)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_x",
          "entity_name": "100"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_g",
          "entity_name": "400"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrf_p",
          "entity_name": "200"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg4v",
          "entity_name": "3200"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01xrg58",
          "entity_name": "800"
        }
      ]
    },
    {
      "question": "what religion is party of monotheistic religions and has same practices with mo?",
      "qid": "4300140016000_grailqa",
      "source": "grailqa",
      "entities": {
        "monotheistic religions": "m.04xy3",
        "Mo": "m.0vprvyx"
      },
      "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.0vprvyx)) (JOIN religion.religion.is_part_of m.04xy3)))",
      "actions": [
        "get_relations(m.0vprvyx)",
        "get_neighbors(m.0vprvyx,religion.religion.practices)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religious_practice.practice_of)",
        "get_relations(m.04xy3)",
        "get_neighbors(m.04xy3,religion.religion.includes)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01cjt",
          "entity_name": "Bahá'í Faith"
        }
      ]
    },
    {
      "question": "how many different macintosh se models used motorola 68030 processors?",
      "qid": "3205922005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Macintosh SE": "m.023tnt",
        "Motorola 68030": "m.0538r"
      },
      "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.023tnt) (JOIN computer.computer.processor m.0538r))))",
      "actions": [
        "get_relations(m.023tnt)",
        "get_neighbors(m.023tnt,computer.computer.includes_models)",
        "get_relations(m.0538r)",
        "get_neighbors(m.0538r,computer.computer_processor.used_in_computers)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "When did Fenway Sports Group's sports team last win the champions league?",
      "qid": "WebQTest-608_13b4ce19d2cb8cabdeb5cdc09d2aaa18_cwq",
      "source": "cwq",
      "entities": {
        "Football League Cup": "m.012dbw",
        "Fenway Sports Group": "m.04lf9rh"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.04lf9rh)) (JOIN sports.sports_championship_event.championship m.012dbw)) time.event.end_date)",
      "actions": [
        "get_relations(m.04lf9rh)",
        "get_neighbors(m.04lf9rh,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.012dbw)",
        "get_neighbors(m.012dbw,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0h_b67k",
          "answer_type": "Entity",
          "entity_name": "2012 Football League Cup Final"
        }
      ]
    },
    {
      "question": "the lancia artena in the model of 1999 dodge charger concept is of what automotive class?",
      "qid": "4300308011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Lancia Artena": "m.03cy09v",
        "1999 Dodge Charger Concept": "m.0f7xbh"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN (R automotive.model.automotive_class) m.03cy09v) (JOIN automotive.automotive_class.examples (JOIN automotive.model.model_years m.0f7xbh))))",
      "actions": [
        "get_relations(m.03cy09v)",
        "get_neighbors(m.03cy09v,automotive.model.automotive_class)",
        "get_relations(m.0f7xbh)",
        "get_neighbors(m.0f7xbh,automotive.model_year.model)",
        "get_relations(#1)",
        "get_neighbors(#1,automotive.model.automotive_class)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01d1dj",
          "entity_name": "Coupé"
        }
      ]
    },
    {
      "question": "When is the last time the team whose mascot is called Crazy Cab win the World Series?",
      "qid": "WebQTrn-710_e3d40457273785e46c5b71732713a5f4_cwq",
      "source": "cwq",
      "entities": {
        "crazy cab": "m.02q_hzh"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.02q_hzh)) time.event.start_date)",
      "actions": [
        "get_relations(m.02q_hzh)",
        "get_neighbors(m.02q_hzh,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0117q3yz"
        }
      ]
    },
    {
      "question": "When did mascot Hooper's sports team last with the Championship?",
      "qid": "WebQTest-895_396fb95abab62a5ce0481081f7096633_cwq",
      "source": "cwq",
      "entities": {
        "Hooper": "m.0cw50b"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.0cw50b)) time.event.start_date)",
      "actions": [
        "get_relations(m.0cw50b)",
        "get_neighbors(m.0cw50b,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.07p0zz",
          "answer_type": "Entity",
          "entity_name": "2004 NBA Finals"
        }
      ]
    },
    {
      "question": "how many protestantism texts are religious texts of jerusalem day?",
      "qid": "4303883000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Protestantism": "m.05sfs",
        "Jerusalem Day": "m.02zzqk"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of (JOIN (R time.holiday.featured_in_religions) m.02zzqk)) (JOIN (R religion.religion.texts) m.05sfs))))",
      "actions": [
        "get_relations(m.02zzqk)",
        "get_neighbors(m.02zzqk,time.holiday.featured_in_religions)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religion.texts)",
        "get_relations(m.05sfs)",
        "get_neighbors(m.05sfs,religion.religion.texts)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what is the total number of spacecrafts manufactured by jet propulsion lab and ball aerospace and technologies corp.?",
      "qid": "3201449004000_grailqa",
      "source": "grailqa",
      "entities": {
        "ball aerospace and technologies corp.": "m.02dxz4",
        "jet propulsion lab": "m.0467p"
      },
      "s_expression": "(COUNT (AND spaceflight.spacecraft (AND (JOIN spaceflight.spacecraft.manufacturer m.02dxz4) (JOIN spaceflight.spacecraft.manufacturer m.0467p))))",
      "actions": [
        "get_relations(m.02dxz4)",
        "get_neighbors(m.02dxz4,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "get_relations(m.0467p)",
        "get_neighbors(m.0467p,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "Where does the team owned by Rocky Wirtz play their home games?",
      "qid": "WebQTest-1027_0c7d6d924e1144e3a8b992486ad37c01_cwq",
      "source": "cwq",
      "entities": {
        "Rocky Wirtz": "m.03cb8z2"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.professional_sports_team.owner_s m.03cb8z2)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.03cb8z2)",
        "get_neighbors(m.03cb8z2,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.02nshs",
          "answer_type": "Entity",
          "entity_name": "United Center"
        }
      ]
    },
    {
      "question": "What Superbowl was won by the team with the \"Baltimore Fight Song\"?",
      "qid": "WebQTest-837_d95da5fb8a16d81fe56cd4ce00843254_cwq",
      "source": "cwq",
      "entities": {
        "Superbowl": "m.06x5s",
        "baltimore fight song": "m.0hn47qp"
      },
      "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.fight_song m.0hn47qp)) (JOIN sports.sports_championship_event.championship m.06x5s))",
      "actions": [
        "get_relations(m.0hn47qp)",
        "get_neighbors(m.0hn47qp,sports.fight_song.sports_team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0642vqv"
        },
        {
          "answer_argument": "m.076yq"
        }
      ]
    },
    {
      "question": "how many texts on protestantism relate to christmas day?",
      "qid": "4303883002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Protestantism": "m.05sfs",
        "christmas day": "m.01vq3"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of (JOIN (R time.holiday.featured_in_religions) m.01vq3)) (JOIN (R religion.religion.texts) m.05sfs))))",
      "actions": [
        "get_relations(m.01vq3)",
        "get_neighbors(m.01vq3,time.holiday.featured_in_religions)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religion.texts)",
        "get_relations(m.05sfs)",
        "get_neighbors(m.05sfs,religion.religion.texts)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "3"
        }
      ]
    },
    {
      "question": "When was the team whose owner is Thomas S. Ricketts last in the world series?",
      "qid": "WebQTrn-682_3375e1e8b25b781ca4421bc3615b1d53_cwq",
      "source": "cwq",
      "entities": {
        "Thomas S. Ricketts": "m.04jf15w"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.04jf15w)) time.event.start_date)",
      "actions": [
        "get_relations(m.04jf15w)",
        "get_neighbors(m.04jf15w,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04tg8s",
          "answer_type": "Entity",
          "entity_name": "1908 World Series"
        }
      ]
    },
    {
      "question": "what is the total number of spacecrafts manufactured by the smithsonian astrophysical observatory and lockheed martin advanced technology center",
      "qid": "3201449011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Smithsonian Astrophysical Observatory": "m.04yqfv",
        "Lockheed Martin Advanced Technology Center": "m.07ry03w"
      },
      "s_expression": "(COUNT (AND spaceflight.spacecraft (AND (JOIN spaceflight.spacecraft.manufacturer m.04yqfv) (JOIN spaceflight.spacecraft.manufacturer m.07ry03w))))",
      "actions": [
        "get_relations(m.04yqfv)",
        "get_neighbors(m.04yqfv,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "get_relations(m.07ry03w)",
        "get_neighbors(m.07ry03w,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "the fictional character who lives in mountain range of thieves' world fictional shared universe is whom?",
      "qid": "4300742010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Mountain range": "m.04wxr",
        "Thieves' World fictional shared universe": "m.0b_tw43"
      },
      "s_expression": "(AND fictional_universe.fictional_character (JOIN fictional_universe.fictional_character.places_lived (AND (JOIN fictional_universe.fictional_setting.setting_type m.04wxr) (JOIN (R fictional_universe.fictional_universe.locations) m.0b_tw43))))",
      "actions": [
        "get_relations(m.04wxr)",
        "get_neighbors(m.04wxr,fictional_universe.type_of_fictional_setting.settings)",
        "get_relations(m.0b_tw43)",
        "get_neighbors(m.0b_tw43,fictional_universe.fictional_universe.locations)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,fictional_universe.fictional_setting.characters_that_have_lived_here)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bxtyd0",
          "entity_name": "Roxane, Nisibisi witch"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bxw64s",
          "entity_name": "Adrastus Ajami"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g4scz1",
          "entity_name": "Critias"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gf7ydg",
          "entity_name": "Tamzen"
        }
      ]
    },
    {
      "question": "what temperament does the breed of conejo wycollar boy and norwegian lundehund share?",
      "qid": "4300459001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Conejo Wycollar Boy": "m.0j1t2ng",
        "Norwegian Lundehund": "m.01z0mh"
      },
      "s_expression": "(AND biology.breed_temperament (AND (JOIN (R biology.animal_breed.temperament) (JOIN (R biology.pedigreed_animal.breed) m.0j1t2ng)) (JOIN (R biology.animal_breed.temperament) m.01z0mh)))",
      "actions": [
        "get_relations(m.0j1t2ng)",
        "get_neighbors(m.0j1t2ng,biology.pedigreed_animal.breed)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.01z0mh)",
        "get_neighbors(m.01z0mh,biology.animal_breed.temperament)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kqp3l",
          "entity_name": "Alert"
        }
      ]
    },
    {
      "question": "what is the programming language influenced by a + and the program language paradigm used by c++ programming language?",
      "qid": "4300798009000_grailqa",
      "source": "grailqa",
      "entities": {
        "c++ programming language": "m.0jgqg",
        "a +": "m.03m66l"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.0jgqg) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.03m66l))))",
      "actions": [
        "get_relations(m.0jgqg)",
        "get_neighbors(m.0jgqg,computer.programming_language.language_paradigms)",
        "get_relations(m.03m66l)",
        "get_neighbors(m.03m66l,computer.programming_language.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.programming_language.language_paradigms)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02ykw",
          "entity_name": "Functional programming"
        }
      ]
    },
    {
      "question": "which most recently formed cyclone was of the same category as tropical storm mitch?",
      "qid": "4303808006000_grailqa",
      "source": "grailqa",
      "entities": {
        "tropical storm mitch": "m.01ppzj"
      },
      "s_expression": "(ARGMAX (AND meteorology.tropical_cyclone (JOIN meteorology.tropical_cyclone.category (JOIN (R meteorology.tropical_cyclone.category) m.01ppzj))) meteorology.tropical_cyclone.formed)",
      "actions": [
        "get_relations(m.01ppzj)",
        "get_neighbors(m.01ppzj,meteorology.tropical_cyclone.category)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
        "get_attributes(#1)",
        "argmax(#1,meteorology.tropical_cyclone.formed)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0y52xn7",
          "entity_name": "Cyclone Phailin"
        }
      ]
    },
    {
      "question": "what text serves as the core of judaism and is honored by male circumcision practitioners?",
      "qid": "4300898008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Judaism": "m.03_gx",
        "male circumcision": "m.01zky"
      },
      "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.03_gx) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.01zky))))",
      "actions": [
        "get_relations(m.03_gx)",
        "get_neighbors(m.03_gx,religion.religion.texts)",
        "get_relations(m.01zky)",
        "get_neighbors(m.01zky,religion.religious_practice.practice_of)",
        "get_relations(#1)",
        "get_neighbors(#1,religion.religion.texts)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gn9",
          "entity_name": "Tanakh"
        }
      ]
    },
    {
      "question": "what political ideology does patriot party and canadian federal election, 2008 follow?",
      "qid": "4302370010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Canadian federal election, 2008": "m.0b1_7g",
        "patriot party": "m.07tcqg"
      },
      "s_expression": "(AND government.political_ideology (AND (JOIN government.political_ideology.political_parties (JOIN (R government.parliamentary_election.government_formed_by) m.0b1_7g)) (JOIN (R government.political_party.ideology) m.07tcqg)))",
      "actions": [
        "get_relations(m.0b1_7g)",
        "get_neighbors(m.0b1_7g,government.parliamentary_election.government_formed_by)",
        "get_relations(#0)",
        "get_neighbors(#0,government.political_party.ideology)",
        "get_relations(m.07tcqg)",
        "get_neighbors(m.07tcqg,government.political_party.ideology)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03g4vb",
          "entity_name": "Liberal conservatism"
        }
      ]
    },
    {
      "question": "When was the last time the champion of the 2012 Stanley Cup Final win the playoff series?",
      "qid": "WebQTest-1711_97114c52c2bf3a660f08f6938e38ce27_cwq",
      "source": "cwq",
      "entities": {
        "2012 stanley cup final": "m.0jt52pz"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.0jt52pz)) time.event.end_date)",
      "actions": [
        "get_relations(m.0jt52pz)",
        "get_neighbors(m.0jt52pz,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.010fdzhp",
          "answer_type": "Entity",
          "entity_name": "2014 Stanley Cup Finals"
        }
      ]
    },
    {
      "question": "what vocal music is the most recently performed?",
      "qid": "4303240010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Vocal music": "m.0y4f8"
      },
      "s_expression": "(ARGMAX (AND music.composition (JOIN music.composition.form (JOIN music.compositional_form.superforms m.0y4f8))) music.composition.date_of_first_performance)",
      "actions": [
        "get_relations(m.0y4f8)",
        "get_neighbors(m.0y4f8,music.compositional_form.subforms)",
        "get_relations(#0)",
        "get_neighbors(#0,music.compositional_form.compositions)",
        "get_attributes(#1)",
        "argmax(#1,music.composition.date_of_first_performance)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0ryvyt2",
          "entity_name": "Oscar"
        }
      ]
    },
    {
      "question": "cascade hops and centennial use how many beer styles?",
      "qid": "3202749006000_grailqa",
      "source": "grailqa",
      "entities": {
        "cascade hops": "m.05q46t2",
        "Centennial": "m.0115clqx"
      },
      "s_expression": "(COUNT (AND base.lightweight.beer_style (AND (JOIN (R base.lightweight.beer_hop.beer_styles_used_in) m.05q46t2) (JOIN (R base.lightweight.beer_hop.beer_styles_used_in) m.0115clqx))))",
      "actions": [
        "get_relations(m.05q46t2)",
        "get_neighbors(m.05q46t2,base.lightweight.beer_hop.beer_styles_used_in)",
        "get_relations(m.0115clqx)",
        "get_neighbors(m.0115clqx,base.lightweight.beer_hop.beer_styles_used_in)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "4"
        }
      ]
    },
    {
      "question": "what is the core text of protestantism and honored by evensong practitioners?",
      "qid": "4300898001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Protestantism": "m.05sfs",
        "evensong": "m.04xcw5"
      },
      "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.05sfs) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.04xcw5))))",
      "actions": [
        "get_relations(m.05sfs)",
        "get_neighbors(m.05sfs,religion.religion.texts)",
        "get_relations(m.04xcw5)",
        "get_neighbors(m.04xcw5,religion.religious_practice.practice_of)",
        "get_relations(#1)",
        "get_neighbors(#1,religion.religion.texts)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.015j7",
          "entity_name": "The Bible"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05crg",
          "entity_name": "New Testament"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05ld9",
          "entity_name": "Old Testament"
        }
      ]
    },
    {
      "question": "which proteus infections treatments come with the side effects of sludge syndrome?",
      "qid": "4301182012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Proteus Infections": "m.07y4xp2",
        "SLUDGE syndrome": "m.025yc7f"
      },
      "s_expression": "(AND medicine.medical_treatment (AND (JOIN medicine.medical_treatment.side_effects (JOIN medicine.symptom.parent_symptom m.025yc7f)) (JOIN medicine.medical_treatment.used_to_treat m.07y4xp2)))",
      "actions": [
        "get_relations(m.025yc7f)",
        "get_neighbors(m.025yc7f,medicine.symptom.includes_symptoms)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.symptom.side_effect_of)",
        "get_relations(m.07y4xp2)",
        "get_neighbors(m.07y4xp2,medicine.disease.treatments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01zfw",
          "entity_name": "Ciprofloxacin"
        }
      ]
    },
    {
      "question": "what is the common parent industry of cut and sew apparel manufacturing and the industry in which union operates?",
      "qid": "4301917007000_grailqa",
      "source": "grailqa",
      "entities": {
        "union": "m.054w78",
        "Cut and Sew Apparel Manufacturing": "m.03q9xh9"
      },
      "s_expression": "(AND business.industry (AND (JOIN (R business.industry.child_industry) (JOIN business.industry.trade_unions m.054w78)) (JOIN (R business.industry.child_industry) m.03q9xh9)))",
      "actions": [
        "get_relations(m.054w78)",
        "get_neighbors(m.054w78,business.trade_union.industry)",
        "get_relations(#0)",
        "get_neighbors(#0,business.industry.child_industry)",
        "get_relations(m.03q9xh9)",
        "get_neighbors(m.03q9xh9,business.industry.child_industry)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9xj1",
          "entity_name": "Men's and Boys' Cut and Sew Apparel Manufacturing"
        }
      ]
    },
    {
      "question": "of the computers that used celeron 530 processors, how many were extensa models?",
      "qid": "3205922008000_grailqa",
      "source": "grailqa",
      "entities": {
        "extensa": "m.04yd9nh",
        "Celeron 530": "m.05129v8"
      },
      "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.04yd9nh) (JOIN computer.computer.processor m.05129v8))))",
      "actions": [
        "get_relations(m.04yd9nh)",
        "get_neighbors(m.04yd9nh,computer.computer.includes_models)",
        "get_relations(m.05129v8)",
        "get_neighbors(m.05129v8,computer.computer_processor.used_in_computers)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "how many different dog breeds from the canada have a similar temperament as abull terrier?",
      "qid": "4303460000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Bull Terrier": "m.05h0h0",
        "Canada": "m.0d060g"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.0d060g)) (JOIN (R biology.animal_breed.temperament) m.05h0h0))))",
      "actions": [
        "get_relations(m.0d060g)",
        "get_neighbors(m.0d060g,biology.breed_origin.breeds_originating_here)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.05h0h0)",
        "get_neighbors(m.05h0h0,biology.animal_breed.temperament)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "4"
        }
      ]
    },
    {
      "question": "how many different breeds from serbia share the same temperament as the smooth fox terrier?",
      "qid": "4303460008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Smooth Fox Terrier": "m.03_vlr",
        "Serbia": "m.077qn"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.077qn)) (JOIN (R biology.animal_breed.temperament) m.03_vlr))))",
      "actions": [
        "get_relations(m.077qn)",
        "get_neighbors(m.077qn,biology.breed_origin.breeds_originating_here)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.03_vlr)",
        "get_neighbors(m.03_vlr,biology.animal_breed.temperament)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "What form of government is used both in Spain and in the birthplace of AntÃ£o Martins Homem?",
      "qid": "WebQTrn-3180_89e002ff7250ffeee9ef6f385a7a0658_cwq",
      "source": "cwq",
      "entities": {
        "Spain": "m.06mkj",
        "antã£o martins homem": "g.122wbmv4"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.06mkj) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here g.122wbmv4)))",
      "actions": [
        "get_relations(m.06mkj)",
        "get_neighbors(m.06mkj,location.country.form_of_government)",
        "get_relations(g.122wbmv4)",
        "get_neighbors(g.122wbmv4,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.04szc",
          "answer_type": "Entity",
          "entity_name": "Monarchy"
        }
      ]
    },
    {
      "question": "what number of spacecrafts did german aerospace center and astrium manufacture?",
      "qid": "3201449002000_grailqa",
      "source": "grailqa",
      "entities": {
        "German Aerospace Center": "m.02_9td",
        "Astrium": "m.0271m6s"
      },
      "s_expression": "(COUNT (AND spaceflight.spacecraft (AND (JOIN spaceflight.spacecraft.manufacturer m.02_9td) (JOIN spaceflight.spacecraft.manufacturer m.0271m6s))))",
      "actions": [
        "get_relations(m.02_9td)",
        "get_neighbors(m.02_9td,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "get_relations(m.0271m6s)",
        "get_neighbors(m.0271m6s,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "People from the country that contains Red Sea Governorate mostly live where?",
      "qid": "WebQTrn-3037_c0495334f4678f947149a7a30d8e49a0_cwq",
      "source": "cwq",
      "entities": {
        "Red Sea Governorate": "m.02d5mf"
      },
      "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN location.country.administrative_divisions m.02d5mf)) topic_server.population_number)",
      "actions": [
        "get_relations(m.02d5mf)",
        "get_neighbors(m.02d5mf,location.administrative_division.country)",
        "get_relations(#0)",
        "get_neighbors(#0,location.location.contains)",
        "get_attributes(#1)",
        "argmax(#1,topic_server.population_number)"
      ],
      "answer": [
        {
          "answer_argument": "m.080msrv",
          "answer_type": "Entity",
          "entity_name": "Greater Cairo"
        }
      ]
    },
    {
      "question": "what temperaments do both the presa canario and the english foxhound have in common?",
      "qid": "3205485012000_grailqa",
      "source": "grailqa",
      "entities": {
        "presa canario": "m.035w0_",
        "English Foxhound": "m.06w066"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds m.035w0_) (JOIN (R biology.animal_breed.temperament) m.06w066))))",
      "actions": [
        "get_relations(m.035w0_)",
        "get_neighbors(m.035w0_,biology.animal_breed.temperament)",
        "get_relations(m.06w066)",
        "get_neighbors(m.06w066,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "which types of storage are compatible with canon 1d mark iii as well as color filter array of foveon x3 sensor?",
      "qid": "4302099005000_grailqa",
      "source": "grailqa",
      "entities": {
        "canon 1d mark iii": "m.02pmy2l",
        "Foveon X3 sensor": "m.02g86w"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN digicams.camera_storage_type.compatible_cameras m.02pmy2l) (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.color_filter_array_type m.02g86w))))",
      "actions": [
        "get_relations(m.02pmy2l)",
        "get_neighbors(m.02pmy2l,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.02g86w)",
        "get_neighbors(m.02g86w,digicams.camera_color_filter_array_type.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.supported_storage_types)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01rlj7",
          "entity_name": "CompactFlash"
        }
      ]
    },
    {
      "question": "what is the musical release labelled by columbia records and produced by every angel?",
      "qid": "4301990010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Every Angel": "m.0qf0v0",
        "columbia records": "m.015_1q"
      },
      "s_expression": "(AND music.release (AND (JOIN music.release.producers (JOIN (R music.recording.producer) m.0qf0v0)) (JOIN music.release.label m.015_1q)))",
      "actions": [
        "get_relations(m.0qf0v0)",
        "get_neighbors(m.0qf0v0,music.recording.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,music.producer.releases_produced)",
        "get_relations(m.015_1q)",
        "get_neighbors(m.015_1q,music.record_label.releases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01n49gc",
          "entity_name": "Chain Gang of Love"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03787h_",
          "entity_name": "Pretty in Black"
        }
      ]
    },
    {
      "question": "which political ideology does labour party and new south wales state election, 2007 follow?",
      "qid": "4302370009000_grailqa",
      "source": "grailqa",
      "entities": {
        "New South Wales state election, 2007": "m.09yzpy",
        "Labour Party": "m.01m_p5"
      },
      "s_expression": "(AND government.political_ideology (AND (JOIN government.political_ideology.political_parties (JOIN (R government.parliamentary_election.government_formed_by) m.09yzpy)) (JOIN (R government.political_party.ideology) m.01m_p5)))",
      "actions": [
        "get_relations(m.09yzpy)",
        "get_neighbors(m.09yzpy,government.parliamentary_election.government_formed_by)",
        "get_relations(#0)",
        "get_neighbors(#0,government.political_party.ideology)",
        "get_relations(m.01m_p5)",
        "get_neighbors(m.01m_p5,government.political_party.ideology)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.06qnz",
          "entity_name": "Social democracy"
        }
      ]
    },
    {
      "question": "what was nick horvath's position in which the player who authored it's just something to have on my resume for when i go back into reality. someday i might have to put down a basketball and have a regular 9-to-5 like everybody else. also played?",
      "qid": "4300563011000_grailqa",
      "source": "grailqa",
      "entities": {
        "It's just something to have on my resume for when I go back into reality. Someday I might have to put down a basketball and have a regular 9-to-5 like everybody else.": "m.04g5jj5",
        "Nick Horvath": "m.026y5j5"
      },
      "s_expression": "(AND basketball.basketball_position (AND (JOIN basketball.basketball_position.players (JOIN (R media_common.quotation.author) m.04g5jj5)) (JOIN basketball.basketball_position.players m.026y5j5)))",
      "actions": [
        "get_relations(m.04g5jj5)",
        "get_neighbors(m.04g5jj5,media_common.quotation.author)",
        "get_relations(#0)",
        "get_neighbors(#0,basketball.basketball_player.position_s)",
        "get_relations(m.026y5j5)",
        "get_neighbors(m.026y5j5,basketball.basketball_player.position_s)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02_ssl",
          "entity_name": "Center"
        }
      ]
    },
    {
      "question": "peoples republic of china has been affected by which cyclones in the same category as hurricane ike?",
      "qid": "4300198005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Hurricane Ike": "m.04jnnpy",
        "peoples republic of china": "m.0d05w3"
      },
      "s_expression": "(AND meteorology.tropical_cyclone (AND (JOIN (R meteorology.tropical_cyclone_category.tropical_cyclones) (JOIN (R meteorology.tropical_cyclone.category) m.04jnnpy)) (JOIN meteorology.tropical_cyclone.affected_areas m.0d05w3)))",
      "actions": [
        "get_relations(m.04jnnpy)",
        "get_neighbors(m.04jnnpy,meteorology.tropical_cyclone.category)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
        "get_relations(m.0d05w3)",
        "get_neighbors(m.0d05w3,meteorology.cyclone_affected_area.cyclones)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0w7kbx8",
          "entity_name": "Typhoon Soulik"
        }
      ]
    },
    {
      "question": "In which year was the Super Bowl won by the sports team whose fight song was Seven Nation Army?",
      "qid": "WebQTest-837_6b1c0c0fb24a34937f450fdc16a3387b_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "Seven Nation Army": "m.07fpnw"
      },
      "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.fight_song m.07fpnw)) (JOIN sports.sports_championship_event.championship m.06x5s))",
      "actions": [
        "get_relations(m.07fpnw)",
        "get_neighbors(m.07fpnw,sports.fight_song.sports_team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0642vqv"
        },
        {
          "answer_argument": "m.076yq"
        }
      ]
    },
    {
      "question": "there exists a musical release produced by riptide (reprise) and labelled capital records, what is it?",
      "qid": "4301990012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Riptide (Reprise)": "m.0nxqft",
        "capital records": "m.017l96"
      },
      "s_expression": "(AND music.release (AND (JOIN music.release.producers (JOIN (R music.recording.producer) m.0nxqft)) (JOIN music.release.label m.017l96)))",
      "actions": [
        "get_relations(m.0nxqft)",
        "get_neighbors(m.0nxqft,music.recording.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,music.producer.releases_produced)",
        "get_relations(m.017l96)",
        "get_neighbors(m.017l96,music.record_label.releases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.039rty8",
          "entity_name": "Decade"
        }
      ]
    },
    {
      "question": "how many camera iso capability is the iso setting used by hp photosmart e337 and olympus stylus 1050 sw?",
      "qid": "3205827001000_grailqa",
      "source": "grailqa",
      "entities": {
        "HP Photosmart E337": "m.03q2r6b",
        "Olympus Stylus 1050 SW": "m.04wkgpt"
      },
      "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.03q2r6b) (JOIN (R digicams.digital_camera.iso_setting) m.04wkgpt))))",
      "actions": [
        "get_relations(m.03q2r6b)",
        "get_neighbors(m.03q2r6b,digicams.digital_camera.iso_setting)",
        "get_relations(m.04wkgpt)",
        "get_neighbors(m.04wkgpt,digicams.digital_camera.iso_setting)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "4"
        }
      ]
    },
    {
      "question": "What was the name of the debut album of the artist who went on a concert tour called Fair Warning Tour?",
      "qid": "WebQTest-944_22ea79bcc4bf3fac03f3c1e6928751cc_cwq",
      "source": "cwq",
      "entities": {
        "Fair Warning Tour": "m.03cq111"
      },
      "s_expression": "(ARGMIN (JOIN (R music.artist.album) (JOIN music.artist.concert_tours m.03cq111)) music.album.release_date)",
      "actions": [
        "get_relations(m.03cq111)",
        "get_neighbors(m.03cq111,music.concert_tour.artist)",
        "get_relations(#0)",
        "get_neighbors(#0,music.artist.album)",
        "get_attributes(#1)",
        "argmin(#1,music.album.release_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0vs85p3",
          "answer_type": "Entity",
          "entity_name": "Ain't Talkin' 'Bout Love"
        }
      ]
    },
    {
      "question": "during the era of frans ykens, which pieces of artwork were produced on a canvases medium?",
      "qid": "4301655002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Frans Ykens": "m.0gc_vt",
        "canvases": "m.0jmpt"
      },
      "s_expression": "(AND visual_art.artwork (AND (JOIN visual_art.artwork.period_or_movement (JOIN visual_art.art_period_movement.associated_artists m.0gc_vt)) (JOIN visual_art.artwork.support m.0jmpt)))",
      "actions": [
        "get_relations(m.0gc_vt)",
        "get_neighbors(m.0gc_vt,visual_art.visual_artist.associated_periods_or_movements)",
        "get_relations(#0)",
        "get_neighbors(#0,visual_art.art_period_movement.associated_artworks)",
        "get_relations(m.0jmpt)",
        "get_neighbors(m.0jmpt,visual_art.visual_art_support.artworks)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kjrf2",
          "entity_name": "The Young Beggar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kh1dd",
          "entity_name": "The Musicians' Brawl"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kh1q7",
          "entity_name": "Magdalen with the Smoking Flame"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kh1xt",
          "entity_name": "St Sebastian Attended by St Irene"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09ktq9",
          "entity_name": "The Elevation of the Cross"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06nsr5s",
          "entity_name": "Portrait of Mother Jeronima de la Fuente"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03cyrsl",
          "entity_name": "The Surrender of Breda"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052s89q",
          "entity_name": "Marriage Portrait of Isaac Massa and Beatrix van der Laen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bhx66",
          "entity_name": "Young Man in a Yellow Robe"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bqq6t",
          "entity_name": "Portrait of Rembrandt van Rijn"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bqrh9",
          "entity_name": "Old Man in Oriental Garb"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bfnxrt",
          "entity_name": "The Raising of Lazarus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c1qnwz",
          "entity_name": "The Adoration of the Shepherds"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065wt25",
          "entity_name": "Boys Eating Grapes and Melon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bx8_q5",
          "entity_name": "The Fall of the Damned"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052t6lf",
          "entity_name": "Elegant Couples Courting"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09nn3pd",
          "entity_name": "A View on a High Road"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09nn3nx",
          "entity_name": "The Water Mill"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09tp_c_",
          "entity_name": "The Dream of Saint Catherine of Alexandria"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09tp_dn",
          "entity_name": "An Angel Freeing the Souls from Purgatory"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065sr0s",
          "entity_name": "The Dancing Couple"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06w85x",
          "entity_name": "Laughing Cavalier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0446j57",
          "entity_name": "Still Life with a Boy Blowing Soap-Bubbles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059_fd9",
          "entity_name": "Still Life with Fruit, Flowers, Glasses and Lobster"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059_frr",
          "entity_name": "Vase of Flowers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bhw9t",
          "entity_name": "Still-Life of Flowers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cfkvy",
          "entity_name": "Still Life with Fruit and Crystal Vase"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cflhg",
          "entity_name": "Banquet Still Life"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075jbrj",
          "entity_name": "Still Life with Dead Game"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07mw3pj",
          "entity_name": "Room Corner with Curiosities"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07mx4zk",
          "entity_name": "Vase of Flowers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09nm5lx",
          "entity_name": "Flower Still Life with a Watch"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09nm9rx",
          "entity_name": "Still Life with Game"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08sfyk",
          "entity_name": "Narcissus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b_v7n",
          "entity_name": "Andromeda Chained to the Rocks"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cftk3",
          "entity_name": "Ahimelech Giving the Sword of Goliath to David"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065wt1t",
          "entity_name": "The Annunciation"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c1pvyp",
          "entity_name": "Triple Portrait of King Charles I"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rjys5",
          "entity_name": "Susanna and the Old Men"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04_2ybq",
          "entity_name": "Susanna and the Elders"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065srzn",
          "entity_name": "Pietà"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.123b43sh",
          "entity_name": "Portrait of Queen Henrietta Maria and the Dwarf Sir Jeffrey Hudson"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.043w9g0",
          "entity_name": "The Disembarkation of Cleopatra at Tarsus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cd2r7",
          "entity_name": "Woman at the Clavicord"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bwhd31",
          "entity_name": "Self-Portrait with Beret and Turned-Up Collar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065ssqn",
          "entity_name": "Martyrdom of St. Philip"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05m5q09",
          "entity_name": "David Playing the Harp"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05prgs3",
          "entity_name": "Portrait of Abraham van Lennep"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045mbx7",
          "entity_name": "The Fortune Teller (Louvre)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065cxkf",
          "entity_name": "The Stag Hunt"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065m7qr",
          "entity_name": "The Liberation of St. Peter"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05by2vv",
          "entity_name": "The Maas at Dordrecht"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cfrbv",
          "entity_name": "Girl at a Window"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04_2_tx",
          "entity_name": "Esther and Ahasuerus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0d67lyh",
          "entity_name": "Still-Life with a Basket of Fruit on a Marble Ledge"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0wy3j77",
          "entity_name": "The Rape of the Daughters of Leucippus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gw721b",
          "entity_name": "Christ in Glory"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rglhj",
          "entity_name": "The Future Stadholder Willem II, Prince of Orange, and His Bride Princess Mary Stuart"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rj0fh",
          "entity_name": "Ecce Homo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bxk0r1",
          "entity_name": "The Wedding by Proxy of Marie de' Medici to King Henry IV"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04_2_v2",
          "entity_name": "The Sleeping Venus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05m5qbg",
          "entity_name": "St. Paul Healing the Cripple at Lystra"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04_309y",
          "entity_name": "Self-portrait"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065cxk0",
          "entity_name": "The Deer Hunt"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.043zwk2",
          "entity_name": "Infanta Margarita Teresa in a Blue Dress"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.043w8pp",
          "entity_name": "The Rape of the Sabines"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06_klwj",
          "entity_name": "Noli me tangere"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08ypkw",
          "entity_name": "Assumption of the Virgin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qw2kp",
          "entity_name": "Artemisia"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052sdzr",
          "entity_name": "Parable of the Wheat and the Tares"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bykc_",
          "entity_name": "Old Woman Dozing"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065wsmh",
          "entity_name": "The Girl with a Coin (Girl of Galicia)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03c6s1g",
          "entity_name": "Saint George and the Dragon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rgk4g",
          "entity_name": "Willem II, Prince of Orange, and his Wife Maria Stuart"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064vg9l",
          "entity_name": "Self-Portrait with Lace Collar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065wvc0",
          "entity_name": "The Proposition"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063zp70",
          "entity_name": "Susanna and the Elders"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bqjpg",
          "entity_name": "Flora"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052t69d",
          "entity_name": "Vertumnus and Pomona"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0d67wt8",
          "entity_name": "Still-Life with Fruit, Parrot, and Nautilus Pitcher"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rhks_",
          "entity_name": "Charles I and His Wife Henrietta Maria with Their Eldest Children Charles and James"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05m5pr2",
          "entity_name": "Venus and Adonis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rhlnd",
          "entity_name": "Vision of the Blessed Herman Joseph"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065m7tv",
          "entity_name": "Salome"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rhs30",
          "entity_name": "Portrait of James Stuart, Duke of Richmond"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063p_vq",
          "entity_name": "Lucretia"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09scghy",
          "entity_name": "Assumption of the Virgin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06_kgzn",
          "entity_name": "Christ in the House of Martha and Mary"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04_2z87",
          "entity_name": "Judith Beheading Holofernes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065m7qy",
          "entity_name": "The Martyrdom of Saint Sebastian"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9yr4",
          "entity_name": "The Entombment"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bfmqp8",
          "entity_name": "Juno"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qw2gy",
          "entity_name": "The Prodigal Son in the Tavern"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065srp5",
          "entity_name": "Peasants Before an Inn"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052pg4m",
          "entity_name": "Portrait of a Lady"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063pq3l",
          "entity_name": "Portrait of the Lomellini Family"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065m7v0",
          "entity_name": "Cupid Sleeping"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065srhr",
          "entity_name": "Children Teaching a Cat to Dance"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065cv28",
          "entity_name": "Arctic Adventure"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yxlx0",
          "entity_name": "The Wedding of Samson"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cdtl0",
          "entity_name": "The Town Hall of Amsterdam"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.078w0l8",
          "entity_name": "Portrait of a Man"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04yyb9",
          "entity_name": "The Burial of St. Petronilla"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1q2xhdvff",
          "entity_name": "Portrait of Titus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07wrthw",
          "entity_name": "Dedication of a New Vestal Virgin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03ccb2n",
          "entity_name": "The Conspiracy of Claudius Civilis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.072qrss",
          "entity_name": "David and Uriah"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cy_j7",
          "entity_name": "Return of the Prodigal Son"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064vggw",
          "entity_name": "Self-Portrait"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cy_jf",
          "entity_name": "Two Women at a Window"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rnpwp",
          "entity_name": "St. Francis"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027nlnr",
          "entity_name": "Prometheus Being Chained by Vulcan"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04_2zpw",
          "entity_name": "Judith and her Maidservant"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05w3kh_",
          "entity_name": "Saint Francis in Meditation"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.043w9k_",
          "entity_name": "Entrance of Alexander into Babylon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cz23v",
          "entity_name": "Portrait of an Elderly Lady"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b44qdz",
          "entity_name": "Charles I with M. de St Antoine"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bfmqyl",
          "entity_name": "Portrait of a Boy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rhjwy",
          "entity_name": "Self-Portrait as Paris"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05n25cd",
          "entity_name": "Peacocks"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0d6vnp",
          "entity_name": "A Lady Writing a Letter"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05m5pgm",
          "entity_name": "Count Willem II of Holland Granting Privileges"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065ssbd",
          "entity_name": "Drunken Silenus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05px3cc",
          "entity_name": "Landscape with a Huntsman and Dead Game"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1hc0hc1zq",
          "entity_name": "Jacob Wrestling with the Angel"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052t07r",
          "entity_name": "Concert"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065sszw",
          "entity_name": "Mary Magdalene in the Desert"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.121zpfnj",
          "entity_name": "La infanta Margarita"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065ss5v",
          "entity_name": "St. Francis of Assisi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09rhjxf",
          "entity_name": "Self Portrait with a Sunflower"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05m5pgf",
          "entity_name": "Young Woman Warming Her Hands"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bfmq_g",
          "entity_name": "Saint Bartholomew"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kjrrq",
          "entity_name": "Four Figures on a Step"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07nb6_w",
          "entity_name": "Ships Tossed in a Gale"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063fgq5",
          "entity_name": "Without Ceres and Bacchus, Venus would Freeze"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c1qnwj",
          "entity_name": "Christ Crowned with Thorns"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06_d6fv",
          "entity_name": "A Fantastic Cave with Odysseus and Calypso"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kjrkj",
          "entity_name": "The Little Fruit Seller"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.070stcn",
          "entity_name": "The Three Graces"
        }
      ]
    },
    {
      "question": "on the third day and jet records were produced by who?",
      "qid": "4301847005000_grailqa",
      "source": "grailqa",
      "entities": {
        "On the Third Day": "m.031ql_f",
        "Jet Records": "m.04hynj"
      },
      "s_expression": "(AND music.producer (AND (JOIN (R music.release.producers) (JOIN music.release.label m.04hynj)) (JOIN (R music.release.producers) m.031ql_f)))",
      "actions": [
        "get_relations(m.04hynj)",
        "get_neighbors(m.04hynj,music.record_label.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.producers)",
        "get_relations(m.031ql_f)",
        "get_neighbors(m.031ql_f,music.release.producers)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0473q",
          "entity_name": "Jeff Lynne"
        }
      ]
    },
    {
      "question": "which most recently formed cyclone was of the same category as hurricane gloria?",
      "qid": "4303808012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Hurricane Gloria": "m.03wcnw"
      },
      "s_expression": "(ARGMAX (AND meteorology.tropical_cyclone (JOIN meteorology.tropical_cyclone.category (JOIN (R meteorology.tropical_cyclone.category) m.03wcnw))) meteorology.tropical_cyclone.formed)",
      "actions": [
        "get_relations(m.03wcnw)",
        "get_neighbors(m.03wcnw,meteorology.tropical_cyclone.category)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
        "get_attributes(#1)",
        "argmax(#1,meteorology.tropical_cyclone.formed)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.011jnng3",
          "entity_name": "Hurricane Iselle"
        }
      ]
    },
    {
      "question": "the fictional character who lives in lemuria of jojo's bizarre adventure is whom?",
      "qid": "4300742003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Lemuria": "m.0dc60vr",
        "JoJo's Bizarre Adventure": "m.0ndbcwn"
      },
      "s_expression": "(AND fictional_universe.fictional_character (JOIN fictional_universe.fictional_character.places_lived (AND (JOIN fictional_universe.fictional_setting.setting_type m.0dc60vr) (JOIN (R fictional_universe.fictional_universe.locations) m.0ndbcwn))))",
      "actions": [
        "get_relations(m.0dc60vr)",
        "get_neighbors(m.0dc60vr,fictional_universe.type_of_fictional_setting.settings)",
        "get_relations(m.0ndbcwn)",
        "get_neighbors(m.0ndbcwn,fictional_universe.fictional_universe.locations)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,fictional_universe.fictional_setting.characters_that_have_lived_here)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0262164",
          "entity_name": "Sheldon Hawkes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01d5g",
          "entity_name": "Bruce Wayne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.08070t",
          "entity_name": "Peter Clemenza"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gbv76r",
          "entity_name": "Stevie Nichols"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0h7y2f",
          "entity_name": "Claire Bennet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1217c9h2",
          "entity_name": "Emma Coolidge"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c0b19n",
          "entity_name": "Cime"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.122qmg44",
          "entity_name": "Daphne Millbrook"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025t7qs",
          "entity_name": "Mac Taylor"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gghrw2",
          "entity_name": "Kaito Nakamura"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0h28lx9",
          "entity_name": "Joss Carter"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0h2c7kt",
          "entity_name": "John Reese"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09npt5t",
          "entity_name": "Dana Barrett"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cmdvzt",
          "entity_name": "Jo Danville"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.012bzfhl",
          "entity_name": "Jo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.010lcfrc",
          "entity_name": "Richie"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gghrt7",
          "entity_name": "Ishi Nakamura"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.121764rk",
          "entity_name": "null"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qszr5",
          "entity_name": "Adam Ross"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gbv5h0",
          "entity_name": "Mason Greyback"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pn5g9",
          "entity_name": "Sid Hammerback"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.122161km",
          "entity_name": "null"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0285h49",
          "entity_name": "Donald Flack, Jr."
        }
      ]
    },
    {
      "question": "games developed by gameloft and distributed through wii ware released where?",
      "qid": "4301141004000_grailqa",
      "source": "grailqa",
      "entities": {
        "wii ware": "m.03hfyj6",
        "Gameloft": "m.064f29"
      },
      "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.03hfyj6) (JOIN (R cvg.cvg_developer.game_versions_developed) m.064f29))))",
      "actions": [
        "get_relations(m.03hfyj6)",
        "get_neighbors(m.03hfyj6,cvg.computer_game_distribution_system.games_distributed)",
        "get_relations(m.064f29)",
        "get_neighbors(m.064f29,cvg.cvg_developer.game_versions_developed)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,cvg.game_version.regions)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.075g54v",
          "entity_name": "Wii/DS NA"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07xh1_f",
          "entity_name": "JAP"
        }
      ]
    },
    {
      "question": "which website that belongs to the category of pixiv has web api of developers.facebook.com?",
      "qid": "4300801001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Pixiv": "m.05mvphw",
        "Developers.facebook.com": "m.02k9b2h"
      },
      "s_expression": "(AND internet.website (AND (JOIN (R internet.website_category.sites) (JOIN (R internet.website.category) m.05mvphw)) (JOIN internet.website.api m.02k9b2h)))",
      "actions": [
        "get_relations(m.05mvphw)",
        "get_neighbors(m.05mvphw,internet.website.category)",
        "get_relations(#0)",
        "get_neighbors(#0,internet.website_category.sites)",
        "get_relations(m.02k9b2h)",
        "get_neighbors(m.02k9b2h,internet.api.site)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02y1vz",
          "entity_name": "Facebook"
        }
      ]
    },
    {
      "question": "In which year did the athletic organization that claimed victory in the 1994 NBA Finals win its first championship?",
      "qid": "WebQTrn-1531_d2aef4ecb09bef9772b1862c9853f3a9_cwq",
      "source": "cwq",
      "entities": {
        "1994 NBA Finals": "m.08x9cq"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.08x9cq)) time.event.start_date)",
      "actions": [
        "get_relations(m.08x9cq)",
        "get_neighbors(m.08x9cq,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.08x9cq",
          "answer_type": "Entity",
          "entity_name": "1994 NBA Finals"
        }
      ]
    },
    {
      "question": "what subject does the quote if we americans are to survive it will have to be because we choose and elect and defend to be first of all americans; to present to the world one homogeneous and unbroken front, whether of white americans or black ones or purple or blue or green. if we in america have reached that point in our desperate culture when we must murder children, no matter for what reason or what color, we don't deserve to survive, and probably won t. as spoken by the angel of remembrance refer to?",
      "qid": "4300443002000_grailqa",
      "source": "grailqa",
      "entities": {
        "If we Americans are to survive it will have to be because we choose and elect and defend to be first of all Americans; to present to the world one homogeneous and unbroken front, whether of white Americans or black ones or purple or blue or green. If we in America have reached that point in our desperate culture when we must murder children, no matter for what reason or what color, we don't deserve to survive, and probably won t.": "m.048hr86",
        "Angel of Remembrance": "m.0h3grm9"
      },
      "s_expression": "(AND media_common.quotation_subject (AND (JOIN (R media_common.quotation.subjects) (JOIN media_common.quotation.spoken_by_character m.0h3grm9)) (JOIN (R media_common.quotation.subjects) m.048hr86)))",
      "actions": [
        "get_relations(m.0h3grm9)",
        "get_neighbors(m.0h3grm9,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.subjects)",
        "get_relations(m.048hr86)",
        "get_neighbors(m.048hr86,media_common.quotation.subjects)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.09c7w0",
          "entity_name": "United States of America"
        }
      ]
    },
    {
      "question": "What type of breast cancer afflicted the lyricist who penned \"Diamond Ring?\"?",
      "qid": "WebQTest-2014_6481b599ef221fd69b2da8daceccf529_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "Diamond Ring": "m.010xqf_p"
      },
      "s_expression": "(AND (JOIN (R medicine.notable_person_with_medical_condition.condition) (JOIN music.lyricist.lyrics_written m.010xqf_p)) (JOIN medicine.disease.parent_disease m.0qcr0))",
      "actions": [
        "get_relations(m.010xqf_p)",
        "get_neighbors(m.010xqf_p,music.composition.lyricist)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.notable_person_with_medical_condition.condition)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,medicine.disease.includes_diseases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.03z_9l",
          "answer_type": "Entity",
          "entity_name": "Meningioma"
        }
      ]
    },
    {
      "question": "which are automotive classes of renault gs in the model of 2014 ford focus?",
      "qid": "4300308004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Renault GS": "m.04mwzjs",
        "2014 Ford Focus": "m.0_v8m4q"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN (R automotive.model.automotive_class) m.04mwzjs) (JOIN automotive.automotive_class.examples (JOIN automotive.model.model_years m.0_v8m4q))))",
      "actions": [
        "get_relations(m.04mwzjs)",
        "get_neighbors(m.04mwzjs,automotive.model.automotive_class)",
        "get_relations(m.0_v8m4q)",
        "get_neighbors(m.0_v8m4q,automotive.model_year.model)",
        "get_relations(#1)",
        "get_neighbors(#1,automotive.model.automotive_class)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.021mp2",
          "entity_name": "Sedan"
        }
      ]
    },
    {
      "question": "there are how many exhibition subjects in brit insurance designs awards 2010?",
      "qid": "4302933008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Brit Insurance Designs Awards 2010": "m.0ch_sw2"
      },
      "s_expression": "(COUNT (AND exhibitions.exhibition_subject (JOIN (R exhibitions.exhibition.subjects) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) (JOIN (R exhibitions.exhibition.exhibition_types) m.0ch_sw2)))))",
      "actions": [
        "get_relations(m.0ch_sw2)",
        "get_neighbors(m.0ch_sw2,exhibitions.exhibition.exhibition_types)",
        "get_relations(#0)",
        "get_neighbors(#0,exhibitions.type_of_exhibition.exhibitions_of_this_type)",
        "get_relations(#1)",
        "get_neighbors(#1,exhibitions.exhibition.subjects)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "22"
        }
      ]
    },
    {
      "question": "list down all the military units which participated in the battle of gettysburg and are from the same place as 1st louisiana native guard?",
      "qid": "250000500_graphquestions",
      "source": "graphquestions",
      "entities": {
        "Battle of Gettysburg": "m.01jnm",
        "1st Louisiana Native Guard": "m.0hr6dl9"
      },
      "s_expression": "(AND base.americancivilwar.military_unit (AND (JOIN military.military_unit.place_of_origin (JOIN (R military.military_unit.place_of_origin) m.0hr6dl9)) (JOIN base.americancivilwar.military_unit.conflicts_participated_in m.01jnm)))",
      "actions": [
        "get_relations(m.0hr6dl9)",
        "get_neighbors(m.0hr6dl9,military.military_unit.place_of_origin)",
        "get_relations(#0)",
        "get_neighbors(#0,military.military_unit_place_of_origin.military_units)",
        "get_relations(m.01jnm)",
        "get_neighbors(m.01jnm,base.americancivilwar.battle.military_units_involved_in_this_conflict)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04gjww9",
          "entity_name": "10th Louisiana Infantry"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l684",
          "entity_name": "15th Louisiana Infantry Regiment"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l66_",
          "entity_name": "14th Louisiana Infantry Regiment"
        }
      ]
    },
    {
      "question": "how many breed temperaments do aidi and australian sheep dog share in common?",
      "qid": "3205485013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Aidi": "m.01p2gv",
        "australian sheep dog": "m.0gz2b"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds m.01p2gv) (JOIN (R biology.animal_breed.temperament) m.0gz2b))))",
      "actions": [
        "get_relations(m.01p2gv)",
        "get_neighbors(m.01p2gv,biology.animal_breed.temperament)",
        "get_relations(m.0gz2b)",
        "get_neighbors(m.0gz2b,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "2"
        }
      ]
    },
    {
      "question": "how many msx models used r800 processors?",
      "qid": "3205922001000_grailqa",
      "source": "grailqa",
      "entities": {
        "MSX": "m.014hgy",
        "R800": "m.033z4p"
      },
      "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.014hgy) (JOIN computer.computer.processor m.033z4p))))",
      "actions": [
        "get_relations(m.014hgy)",
        "get_neighbors(m.014hgy,computer.computer.includes_models)",
        "get_relations(m.033z4p)",
        "get_neighbors(m.033z4p,computer.computer_processor.used_in_computers)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "When did the team who won the 2012 Stanley Cup Finals championship game most recently win the Stanley Cup?",
      "qid": "WebQTrn-209_97114c52c2bf3a660f08f6938e38ce27_cwq",
      "source": "cwq",
      "entities": {
        "2012 Stanley Cup Finals": "m.0jt52pz"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.0jt52pz)) time.event.end_date)",
      "actions": [
        "get_relations(m.0jt52pz)",
        "get_neighbors(m.0jt52pz,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.010fdzhp",
          "answer_type": "Entity",
          "entity_name": "2014 Stanley Cup Finals"
        }
      ]
    },
    {
      "question": "When did sports team owner James D. Stern last win a championship?",
      "qid": "WebQTrn-3707_e8b7b55c54a4b3523a2a3036bd255b1a_cwq",
      "source": "cwq",
      "entities": {
        "James D. Stern": "m.0ggb8tz"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.0ggb8tz)) time.event.start_date)",
      "actions": [
        "get_relations(m.0ggb8tz)",
        "get_neighbors(m.0ggb8tz,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.04zt01",
          "answer_type": "Entity",
          "entity_name": "1998 NBA Finals"
        }
      ]
    },
    {
      "question": "which military units who fought in the gettysburg battle come from the same place as 1st louisiana native guard?",
      "qid": "250000101_graphquestions",
      "source": "graphquestions",
      "entities": {
        "gettysburg battle": "m.01jnm",
        "1st Louisiana Native Guard": "m.0hr6dl9"
      },
      "s_expression": "(AND base.americancivilwar.military_unit (AND (JOIN military.military_unit.place_of_origin (JOIN (R military.military_unit.place_of_origin) m.0hr6dl9)) (JOIN base.americancivilwar.military_unit.conflicts_participated_in m.01jnm)))",
      "actions": [
        "get_relations(m.0hr6dl9)",
        "get_neighbors(m.0hr6dl9,military.military_unit.place_of_origin)",
        "get_relations(#0)",
        "get_neighbors(#0,military.military_unit_place_of_origin.military_units)",
        "get_relations(m.01jnm)",
        "get_neighbors(m.01jnm,base.americancivilwar.battle.military_units_involved_in_this_conflict)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04gjww9",
          "entity_name": "10th Louisiana Infantry"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l684",
          "entity_name": "15th Louisiana Infantry Regiment"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l66_",
          "entity_name": "14th Louisiana Infantry Regiment"
        }
      ]
    },
    {
      "question": "what is the name of the longest release track of recordings written by brian pugsley?",
      "qid": "4300020003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Brian Pugsley": "m.03d_z6z"
      },
      "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.03d_z6z))) music.release_track.length)",
      "actions": [
        "get_relations(m.03d_z6z)",
        "get_neighbors(m.03d_z6z,music.engineer.tracks_engineered)",
        "get_relations(#0)",
        "get_neighbors(#0,music.recording.tracks)",
        "get_attributes(#1)",
        "argmax(#1,music.release_track.length)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0mv1yrl",
          "entity_name": "Mumma"
        }
      ]
    },
    {
      "question": "what is the name of the founding father of the religious good friday, which is part of abrahamic faith?",
      "qid": "4302278008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Good Friday": "m.0fx7_",
        "abrahamic faith": "m.0f_h6"
      },
      "s_expression": "(AND religion.founding_figure (JOIN (R religion.religion.founding_figures) (AND (JOIN (R time.holiday.featured_in_religions) m.0fx7_) (JOIN religion.religion.is_part_of m.0f_h6))))",
      "actions": [
        "get_relations(m.0fx7_)",
        "get_neighbors(m.0fx7_,time.holiday.featured_in_religions)",
        "get_relations(m.0f_h6)",
        "get_neighbors(m.0f_h6,religion.religion.includes)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,religion.religion.founding_figures)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.060nc",
          "entity_name": "Paul the Apostle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045m1_",
          "entity_name": "Jesus Christ"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.071wp",
          "entity_name": "Saint Peter"
        }
      ]
    },
    {
      "question": "designing a bipropellant rocket engine with kerosene and staged combustion cycle describes what rocket engine designer?",
      "qid": "4300753007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Staged combustion cycle": "m.04qqmt",
        "Kerosene": "m.04bhf"
      },
      "s_expression": "(AND spaceflight.rocket_engine_designer (JOIN spaceflight.rocket_engine_designer.rocket_engines (AND (JOIN (R spaceflight.rocket_engine_cycle.rocket_engines) m.04qqmt) (JOIN (R spaceflight.rocket_engine_fuel.rocket_engines) m.04bhf))))",
      "actions": [
        "get_relations(m.04qqmt)",
        "get_neighbors(m.04qqmt,spaceflight.rocket_engine_cycle.rocket_engines)",
        "get_relations(m.04bhf)",
        "get_neighbors(m.04bhf,spaceflight.rocket_engine_fuel.rocket_engines)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,spaceflight.rocket_engine.designed_by)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02p_3s6",
          "entity_name": "NPO Energomash"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06pwfx",
          "entity_name": "Kuznetsov Design Bureau"
        }
      ]
    },
    {
      "question": "what martial art has the same category as lethwei and has grappling?",
      "qid": "4301064013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Lethwei": "m.04qd7t",
        "Grappling": "m.039cp"
      },
      "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.04qd7t)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.039cp)))",
      "actions": [
        "get_relations(m.04qd7t)",
        "get_neighbors(m.04qd7t,martial_arts.martial_art.category)",
        "get_relations(#0)",
        "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
        "get_relations(m.039cp)",
        "get_neighbors(m.039cp,martial_arts.martial_art_category.martial_arts)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01tm7f",
          "entity_name": "Kajukenbo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03bs3p",
          "entity_name": "Sanshou"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.041d65",
          "entity_name": "Vovinam"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07k4r",
          "entity_name": "Tai chi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01vqp5",
          "entity_name": "Systema"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09h901",
          "entity_name": "Shidōkan Karate"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hbj9",
          "entity_name": "Hapkido"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.055rn5",
          "entity_name": "Kuk Sool Won"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01qcyb",
          "entity_name": "Kalaripayattu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02618d8",
          "entity_name": "Russian All-Round Fighting"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.048yh",
          "entity_name": "Krav Maga"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b65c",
          "entity_name": "Hwa Rang Do"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.061px",
          "entity_name": "Pankration"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06jm_r",
          "entity_name": "Bartitsu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06k44z",
          "entity_name": "Modern Arnis"
        }
      ]
    },
    {
      "question": "when was the last time the dallas cowboys won the superbowl",
      "qid": "WebQTest-994_webqsp",
      "source": "webqsp",
      "entities": {
        "dallas cowboys": "m.02896",
        "Superbowl": "m.06x5s"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) m.02896) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.02896)",
        "get_neighbors(m.02896,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#0,#1)",
        "get_attributes(#2)",
        "argmax(#2,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.076wz",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXX"
        }
      ]
    },
    {
      "question": "Who are the children of Ike and the woman who composed Nutbush City Limits?",
      "qid": "WebQTest-1655_d2053ba7c6d1279d9904ff599d2f19d1_cwq",
      "source": "cwq",
      "entities": {
        "ike": "m.0dbzg",
        "Nutbush City Limits": "m.09l02c"
      },
      "s_expression": "(AND (JOIN (R people.person.children) (JOIN music.composer.compositions m.09l02c)) (JOIN people.person.parents m.0dbzg))",
      "actions": [
        "get_relations(m.09l02c)",
        "get_neighbors(m.09l02c,music.composition.composer)",
        "get_relations(#0)",
        "get_neighbors(#0,people.person.children)",
        "get_relations(m.0dbzg)",
        "get_neighbors(m.0dbzg,people.person.children)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0ggl36p",
          "answer_type": "Entity",
          "entity_name": "Ronnie Turner"
        },
        {
          "answer_argument": "m.0j5dh53",
          "answer_type": "Entity",
          "entity_name": "Raymond Craig Turner"
        }
      ]
    },
    {
      "question": "how many religions practice catholic and mormon?",
      "qid": "3204573015000_grailqa",
      "source": "grailqa",
      "entities": {
        "catholic": "m.0c8wxp",
        "mormon": "m.058x5"
      },
      "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.0c8wxp) (JOIN (R religion.religion.practices) m.058x5))))",
      "actions": [
        "get_relations(m.0c8wxp)",
        "get_neighbors(m.0c8wxp,religion.religion.practices)",
        "get_relations(m.058x5)",
        "get_neighbors(m.058x5,religion.religion.practices)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "nature interrupted has how many exhibition subjects?",
      "qid": "4302933013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Nature Interrupted": "m.04l246c"
      },
      "s_expression": "(COUNT (AND exhibitions.exhibition_subject (JOIN (R exhibitions.exhibition.subjects) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) (JOIN (R exhibitions.exhibition.exhibition_types) m.04l246c)))))",
      "actions": [
        "get_relations(m.04l246c)",
        "get_neighbors(m.04l246c,exhibitions.exhibition.exhibition_types)",
        "get_relations(#0)",
        "get_neighbors(#0,exhibitions.type_of_exhibition.exhibitions_of_this_type)",
        "get_relations(#1)",
        "get_neighbors(#1,exhibitions.exhibition.subjects)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "15"
        }
      ]
    },
    {
      "question": "name all types of museums of the same type as frost art museum and national gallery of ireland.",
      "qid": "5400031005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Frost Art Museum": "m.02pysdq",
        "National Gallery of Ireland": "m.04tdmm"
      },
      "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.02pysdq) (JOIN architecture.type_of_museum.museums m.04tdmm)))))",
      "actions": [
        "get_relations(m.02pysdq)",
        "get_neighbors(m.02pysdq,architecture.museum.type_of_museum)",
        "get_relations(m.04tdmm)",
        "get_neighbors(m.04tdmm,architecture.museum.type_of_museum)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,architecture.type_of_museum.museums)",
        "get_relations(#3)",
        "get_neighbors(#3,architecture.museum.type_of_museum)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gz",
          "entity_name": "Modern art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c9td2",
          "entity_name": "National museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9jkk",
          "entity_name": "Architecture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgh_k",
          "entity_name": "History museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03lgjgh",
          "entity_name": "Natural history museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0jvjpx6",
          "entity_name": "Antiquities museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.026w5hv",
          "entity_name": "Contemporary art gallery"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02pn3n6",
          "entity_name": "Historic house museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0528d17",
          "entity_name": "Photography Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kt8qr",
          "entity_name": "Culture museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99gt",
          "entity_name": "Archaeology museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059x_pp",
          "entity_name": "Archaeological Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02wvyw7",
          "entity_name": "Design museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027v0wz",
          "entity_name": "University museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059vqps",
          "entity_name": "Ancient Art Museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l9gbh",
          "entity_name": "Jewish museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j58y",
          "entity_name": "Science museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0w_y7rb",
          "entity_name": "Asian art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03l99t0",
          "entity_name": "Decorative art museum"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0djx8f",
          "entity_name": "Children's museum"
        }
      ]
    },
    {
      "question": "how many styles of beer are used in cascade hops and centennial?",
      "qid": "3202749005000_grailqa",
      "source": "grailqa",
      "entities": {
        "cascade hops": "m.05q46t2",
        "Centennial": "m.0115clqx"
      },
      "s_expression": "(COUNT (AND base.lightweight.beer_style (AND (JOIN (R base.lightweight.beer_hop.beer_styles_used_in) m.05q46t2) (JOIN (R base.lightweight.beer_hop.beer_styles_used_in) m.0115clqx))))",
      "actions": [
        "get_relations(m.05q46t2)",
        "get_neighbors(m.05q46t2,base.lightweight.beer_hop.beer_styles_used_in)",
        "get_relations(m.0115clqx)",
        "get_neighbors(m.0115clqx,base.lightweight.beer_hop.beer_styles_used_in)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "4"
        }
      ]
    },
    {
      "question": "there exists an olympic event that was contested officially in first olympic games and other olympic games in los angeles, california, what is it?",
      "qid": "4300161014000_grailqa",
      "source": "grailqa",
      "entities": {
        "los angeles, california": "m.030qb3t",
        "first olympic games": "m.0c_tl"
      },
      "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.030qb3t)) (JOIN olympics.olympic_event.olympic_games_contested m.0c_tl)))",
      "actions": [
        "get_relations(m.030qb3t)",
        "get_neighbors(m.030qb3t,olympics.olympic_host_city.olympics_hosted)",
        "get_relations(#0)",
        "get_neighbors(#0,olympics.olympic_games.events)",
        "get_relations(m.0c_tl)",
        "get_neighbors(m.0c_tl,olympics.olympic_games.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gnx9y",
          "entity_name": "Men's 300m Free Rifle, 3 Positions"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2_w",
          "entity_name": "Men's Track cycling, Sprint individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30n",
          "entity_name": "Men's Road cycling, individual road race"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3cl",
          "entity_name": "Men's Shot put"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2pc",
          "entity_name": "Men's Discus throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk29t",
          "entity_name": "Men's Parallel bars"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2cj",
          "entity_name": "Men's Long jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2hl",
          "entity_name": "Men's Athletics, 100m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2lq",
          "entity_name": "Men's Foil individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2mz",
          "entity_name": "Men's Marathon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qm",
          "entity_name": "Men's Athletics, 400m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qs",
          "entity_name": "Men's 100m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2rd",
          "entity_name": "Men's Pole vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2x7",
          "entity_name": "Men's Pommel horse"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2xq",
          "entity_name": "Men's Sabre individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2zl",
          "entity_name": "Men's Horizontal bar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30h",
          "entity_name": "Men's Athletics, 110m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32_",
          "entity_name": "Men's Triple jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32p",
          "entity_name": "Men's High jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39d",
          "entity_name": "Men's Vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3b5",
          "entity_name": "Men's Athletics, 800m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3kp",
          "entity_name": "Men's Rings"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3n5",
          "entity_name": "Men's Athletics, 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07nngyv",
          "entity_name": "Rope climbing"
        }
      ]
    },
    {
      "question": "what is the name of the storage type that is supported by sony dsc-t11 and those with color filter array of bayer?",
      "qid": "4302099011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Sony DSC-T11": "m.03q2rbh",
        "bayer": "m.02r8js"
      },
      "s_expression": "(AND digicams.camera_storage_type (AND (JOIN digicams.camera_storage_type.compatible_cameras m.03q2rbh) (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.color_filter_array_type m.02r8js))))",
      "actions": [
        "get_relations(m.03q2rbh)",
        "get_neighbors(m.03q2rbh,digicams.digital_camera.supported_storage_types)",
        "get_relations(m.02r8js)",
        "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
        "get_relations(#1)",
        "get_neighbors(#1,digicams.digital_camera.supported_storage_types)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01730t",
          "entity_name": "Memory Stick"
        }
      ]
    },
    {
      "question": "besides metal working, which visual art form did martin desjardins make?",
      "qid": "4302283013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Martin Desjardins": "m.026cht2",
        "metal working": "m.01ng72"
      },
      "s_expression": "(AND visual_art.visual_art_form (JOIN (R visual_art.artwork.art_form) (AND (JOIN visual_art.artwork.artist m.026cht2) (JOIN visual_art.artwork.art_form m.01ng72))))",
      "actions": [
        "get_relations(m.026cht2)",
        "get_neighbors(m.026cht2,visual_art.visual_artist.artworks)",
        "get_relations(m.01ng72)",
        "get_neighbors(m.01ng72,visual_art.visual_art_form.artworks)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,visual_art.artwork.art_form)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.06msq",
          "entity_name": "Sculpture"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pkk0",
          "entity_name": "Bas-relief"
        }
      ]
    },
    {
      "question": "the text at the core of hidden christians of japan and honored by family worship practitioners is what?",
      "qid": "4300898000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Hidden Christians of Japan": "m.044f0r",
        "Family worship": "m.0vpv0_w"
      },
      "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.044f0r) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.0vpv0_w))))",
      "actions": [
        "get_relations(m.044f0r)",
        "get_neighbors(m.044f0r,religion.religion.texts)",
        "get_relations(m.0vpv0_w)",
        "get_neighbors(m.0vpv0_w,religion.religious_practice.practice_of)",
        "get_relations(#1)",
        "get_neighbors(#1,religion.religion.texts)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.015j7",
          "entity_name": "The Bible"
        }
      ]
    },
    {
      "question": "which artwork on board was created in the era of james siena?",
      "qid": "4301655013000_grailqa",
      "source": "grailqa",
      "entities": {
        "James Siena": "m.0h3q_vg",
        "Board": "m.03l_ss1"
      },
      "s_expression": "(AND visual_art.artwork (AND (JOIN visual_art.artwork.period_or_movement (JOIN visual_art.art_period_movement.associated_artists m.0h3q_vg)) (JOIN visual_art.artwork.support m.03l_ss1)))",
      "actions": [
        "get_relations(m.0h3q_vg)",
        "get_neighbors(m.0h3q_vg,visual_art.visual_artist.associated_periods_or_movements)",
        "get_relations(#0)",
        "get_neighbors(#0,visual_art.art_period_movement.associated_artworks)",
        "get_relations(m.03l_ss1)",
        "get_neighbors(m.03l_ss1,visual_art.visual_art_support.artworks)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.011f1dc1",
          "entity_name": "Corrosive"
        }
      ]
    },
    {
      "question": "What kind of cancer killed the artist who recorded \"Does He Love You?\"?",
      "qid": "WebQTrn-2936_2ed8234b05417256d0f4f079f2aec159_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "Does He Love You?": "m.0lyghy"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.featured_artist.recordings m.0lyghy)) (JOIN people.cause_of_death.parent_cause_of_death m.0qcr0))",
      "actions": [
        "get_relations(m.0lyghy)",
        "get_neighbors(m.0lyghy,music.recording.featured_artists)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,people.cause_of_death.includes_causes_of_death)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.04p3w",
          "answer_type": "Entity",
          "entity_name": "Lung cancer"
        }
      ]
    },
    {
      "question": "When was the last World Series won by team owner Bill Neukom's sports team?",
      "qid": "WebQTrn-710_a188aff4a054e1ec66fafba1b8021f67_cwq",
      "source": "cwq",
      "entities": {
        "Bill Neukom": "m.03cyzbv"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.03cyzbv)) time.event.start_date)",
      "actions": [
        "get_relations(m.03cyzbv)",
        "get_neighbors(m.03cyzbv,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0117q3yz"
        }
      ]
    },
    {
      "question": "which is the fictional character who lives in the mountain stronghold of thieves' world fictional shared universe?",
      "qid": "4300742005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Mountain Stronghold": "m.0b7jtw1",
        "Thieves' World fictional shared universe": "m.0b_tw43"
      },
      "s_expression": "(AND fictional_universe.fictional_character (JOIN fictional_universe.fictional_character.places_lived (AND (JOIN fictional_universe.fictional_setting.setting_type m.0b7jtw1) (JOIN (R fictional_universe.fictional_universe.locations) m.0b_tw43))))",
      "actions": [
        "get_relations(m.0b7jtw1)",
        "get_neighbors(m.0b7jtw1,fictional_universe.type_of_fictional_setting.settings)",
        "get_relations(m.0b_tw43)",
        "get_neighbors(m.0b_tw43,fictional_universe.fictional_universe.locations)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,fictional_universe.fictional_setting.characters_that_have_lived_here)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bxtyd0",
          "entity_name": "Roxane, Nisibisi witch"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c0b19n",
          "entity_name": "Cime"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bxw64s",
          "entity_name": "Adrastus Ajami"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g4scz1",
          "entity_name": "Critias"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gf7ydg",
          "entity_name": "Tamzen"
        }
      ]
    },
    {
      "question": "what is the subject of the quote personal beauty is a greater recommendation than any letter of reference. which was spoken quoted by the angel of remembrance?",
      "qid": "4300443007000_grailqa",
      "source": "grailqa",
      "entities": {
        "Personal beauty is a greater recommendation than any letter of reference.": "m.048hxkx",
        "Angel of Remembrance": "m.0h3grm9"
      },
      "s_expression": "(AND media_common.quotation_subject (AND (JOIN (R media_common.quotation.subjects) (JOIN media_common.quotation.spoken_by_character m.0h3grm9)) (JOIN (R media_common.quotation.subjects) m.048hxkx)))",
      "actions": [
        "get_relations(m.0h3grm9)",
        "get_neighbors(m.0h3grm9,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.subjects)",
        "get_relations(m.048hxkx)",
        "get_neighbors(m.048hxkx,media_common.quotation.subjects)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01f43",
          "entity_name": "Beauty"
        }
      ]
    },
    {
      "question": "what are the total number of programming language paradigms for kotlin and swift?",
      "qid": "3205793012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Swift": "m.010sd4y3",
        "Kotlin": "m.0_lcrx4"
      },
      "s_expression": "(COUNT (AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.010sd4y3) (JOIN computer.programming_language_paradigm.languages m.0_lcrx4))))",
      "actions": [
        "get_relations(m.010sd4y3)",
        "get_neighbors(m.010sd4y3,computer.programming_language.language_paradigms)",
        "get_relations(m.0_lcrx4)",
        "get_neighbors(m.0_lcrx4,computer.programming_language.language_paradigms)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what tropical cyclones share a classification with galveston hurricane of 1900 and also affected guerrero?",
      "qid": "4300198015000_grailqa",
      "source": "grailqa",
      "entities": {
        "galveston hurricane of 1900": "m.01vnsr",
        "Guerrero": "m.01bttt"
      },
      "s_expression": "(AND meteorology.tropical_cyclone (AND (JOIN (R meteorology.tropical_cyclone_category.tropical_cyclones) (JOIN (R meteorology.tropical_cyclone.category) m.01vnsr)) (JOIN meteorology.tropical_cyclone.affected_areas m.01bttt)))",
      "actions": [
        "get_relations(m.01vnsr)",
        "get_neighbors(m.01vnsr,meteorology.tropical_cyclone.category)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
        "get_relations(m.01bttt)",
        "get_neighbors(m.01bttt,meteorology.cyclone_affected_area.cyclones)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02p61xq",
          "entity_name": "Hurricane Cristina"
        }
      ]
    },
    {
      "question": "what text serves as the core of jehovah's witness and is honored by family home evening practitioners?",
      "qid": "4300898010000_grailqa",
      "source": "grailqa",
      "entities": {
        "jehovah's witness": "m.0dtdq",
        "Family Home Evening": "m.04v6dq"
      },
      "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.0dtdq) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.04v6dq))))",
      "actions": [
        "get_relations(m.0dtdq)",
        "get_neighbors(m.0dtdq,religion.religion.texts)",
        "get_relations(m.04v6dq)",
        "get_neighbors(m.04v6dq,religion.religious_practice.practice_of)",
        "get_relations(#1)",
        "get_neighbors(#1,religion.religion.texts)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.015j7",
          "entity_name": "The Bible"
        }
      ]
    },
    {
      "question": "psycho circus as well as another multi-part musical release labelled beyond music were produced by whom?",
      "qid": "4301847004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Psycho Circus": "m.03_l_bt",
        "Beyond Music": "m.0dnftq_"
      },
      "s_expression": "(AND music.producer (AND (JOIN (R music.release.producers) (JOIN music.release.label m.0dnftq_)) (JOIN (R music.release.producers) m.03_l_bt)))",
      "actions": [
        "get_relations(m.0dnftq_)",
        "get_neighbors(m.0dnftq_,music.record_label.releases)",
        "get_relations(#0)",
        "get_neighbors(#0,music.release.producers)",
        "get_relations(m.03_l_bt)",
        "get_neighbors(m.03_l_bt,music.release.producers)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.03p43v",
          "entity_name": "Bruce Fairbairn"
        }
      ]
    },
    {
      "question": "what's the name of the ewe milk cheese with the same texture as ricotta?",
      "qid": "4302129005000_grailqa",
      "source": "grailqa",
      "entities": {
        "ewe": "m.07bgp",
        "Ricotta": "m.034n3h"
      },
      "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.07bgp) (JOIN (R food.cheese_texture.cheeses) (JOIN food.cheese_texture.cheeses m.034n3h))))",
      "actions": [
        "get_relations(m.07bgp)",
        "get_neighbors(m.07bgp,food.cheese_milk_source.cheeses)",
        "get_relations(m.034n3h)",
        "get_neighbors(m.034n3h,food.cheese.texture)",
        "get_relations(#1)",
        "get_neighbors(#1,food.cheese_texture.cheeses)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.016kgn",
          "entity_name": "Halloumi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02h88_s",
          "entity_name": "Alderbrook"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c4q2",
          "entity_name": "Casu marzu"
        }
      ]
    },
    {
      "question": "What system of government is used in Spain today, and also in the location where Alvaro Gil Cabral was born?",
      "qid": "WebQTrn-369_aae1720ca8d746eb8883d69655f9e1e0_cwq",
      "source": "cwq",
      "entities": {
        "Spain": "m.06mkj",
        "alvaro gil cabral": "g.121r_b9t"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.06mkj) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here g.121r_b9t)))",
      "actions": [
        "get_relations(m.06mkj)",
        "get_neighbors(m.06mkj,location.country.form_of_government)",
        "get_relations(g.121r_b9t)",
        "get_neighbors(g.121r_b9t,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.04szc",
          "answer_type": "Entity",
          "entity_name": "Monarchy"
        }
      ]
    },
    {
      "question": "what is the name of the character that has the ability of god-speed had an item that was eventually destroyed by hoplite?",
      "qid": "4302209004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Hoplite": "m.0c0lmd2",
        "God-speed": "m.0c0lpp6"
      },
      "s_expression": "(AND fictional_universe.fictional_character (AND (JOIN fictional_universe.fictional_character.has_possessed (JOIN fictional_universe.fictional_object.destroyer m.0c0lmd2)) (JOIN fictional_universe.fictional_character.powers_or_abilities m.0c0lpp6)))",
      "actions": [
        "get_relations(m.0c0lmd2)",
        "get_neighbors(m.0c0lmd2,fictional_universe.fictional_object_destroyer.fictional_objects_destroyed)",
        "get_relations(#0)",
        "get_neighbors(#0,fictional_universe.fictional_object.owner)",
        "get_relations(m.0c0lpp6)",
        "get_neighbors(m.0c0lpp6,fictional_universe.character_powers.characters_with_this_ability)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bxj80p",
          "entity_name": "Tempus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c2gbnl",
          "entity_name": "Tempus, left-side leader of Niko"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hnpjhm",
          "entity_name": "Commander"
        }
      ]
    },
    {
      "question": "By whom were Niccolo Machiavelli and Melanie Klein influenced?",
      "qid": "WebQTrn-1719_5dcd3d0995310bd9bcaea14ff53b887e_cwq",
      "source": "cwq",
      "entities": {
        "niccolo machiavelli": "m.05cvs",
        "Melanie Klein": "m.014shr"
      },
      "s_expression": "(AND (JOIN (R influence.influence_node.influenced_by) m.05cvs) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.014shr)))",
      "actions": [
        "get_relations(m.05cvs)",
        "get_neighbors(m.05cvs,influence.influence_node.influenced_by)",
        "get_relations(m.014shr)",
        "get_neighbors(m.014shr,influence.influence_node.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.05qmj",
          "answer_type": "Entity",
          "entity_name": "Plato"
        },
        {
          "answer_argument": "m.0gz_",
          "answer_type": "Entity",
          "entity_name": "Aristotle"
        }
      ]
    },
    {
      "question": "what quantity of breed from germany share the same temperament with the giant schnauzer?",
      "qid": "4303460013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Giant Schnauzer": "m.04q65n",
        "Germany": "m.0345h"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.0345h)) (JOIN (R biology.animal_breed.temperament) m.04q65n))))",
      "actions": [
        "get_relations(m.0345h)",
        "get_neighbors(m.0345h,biology.breed_origin.breeds_originating_here)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.04q65n)",
        "get_neighbors(m.04q65n,biology.animal_breed.temperament)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "5"
        }
      ]
    },
    {
      "question": "which ski run is rated by black diamond and served by supreme?",
      "qid": "4301587004000_grailqa",
      "source": "grailqa",
      "entities": {
        "Black Diamond": "m.04kk2t2",
        "Supreme": "m.04kk20l"
      },
      "s_expression": "(AND skiing.ski_run (AND (JOIN skiing.ski_run.rating (JOIN (R skiing.run_rating_symbol.run_rating) m.04kk2t2)) (JOIN skiing.ski_run.served_by m.04kk20l)))",
      "actions": [
        "get_relations(m.04kk2t2)",
        "get_neighbors(m.04kk2t2,skiing.run_rating_symbol.run_rating)",
        "get_relations(#0)",
        "get_neighbors(#0,skiing.run_rating.ski_runs)",
        "get_relations(m.04kk20l)",
        "get_neighbors(m.04kk20l,skiing.ski_lift.runs_served)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmn6",
          "entity_name": "White Squaw Area"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmrq",
          "entity_name": "Hammer Head"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmpg",
          "entity_name": "Upper Sleepy Hollow"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmqg",
          "entity_name": "No. 9 Express"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmpz",
          "entity_name": "Sidewinder"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmmg",
          "entity_name": "Back Forty"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmmz",
          "entity_name": "Piney Glade"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmng",
          "entity_name": "Supreme Challenge"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmnq",
          "entity_name": "So Long"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmnz",
          "entity_name": "Erosion Gullies"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmpq",
          "entity_name": "Snowshoe Hill"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmqq",
          "entity_name": "Castle Apron"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmqz",
          "entity_name": "Spiney Chutes Area"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmr6",
          "entity_name": "Challenger"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmrg",
          "entity_name": "Sunset"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmrz",
          "entity_name": "Last Chance"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knms6",
          "entity_name": "East Castle Area"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04knmsz",
          "entity_name": "Vicky's"
        }
      ]
    },
    {
      "question": "what type of political system is spain and in locations where Ãlvaro Gil Cabral was born in?",
      "qid": "WebQTrn-3180_aae1720ca8d746eb8883d69655f9e1e0_cwq",
      "source": "cwq",
      "entities": {
        "Spain": "m.06mkj",
        "ãlvaro gil cabral": "g.121r_b9t"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.06mkj) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here g.121r_b9t)))",
      "actions": [
        "get_relations(m.06mkj)",
        "get_neighbors(m.06mkj,location.country.form_of_government)",
        "get_relations(g.121r_b9t)",
        "get_neighbors(g.121r_b9t,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.04szc",
          "answer_type": "Entity",
          "entity_name": "Monarchy"
        }
      ]
    },
    {
      "question": "how many infectious diseases are transmitted by peromyscus maniculatus? ",
      "qid": "4303160009000_grailqa",
      "source": "grailqa",
      "entities": {
        "Peromyscus maniculatus": "m.07gw3d"
      },
      "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.07gw3d)))))",
      "actions": [
        "get_relations(m.07gw3d)",
        "get_neighbors(m.07gw3d,medicine.vector_of_disease.disease)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
        "get_relations(#1)",
        "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "79"
        }
      ]
    },
    {
      "question": "Where does the sports team whose home arena is AT&T Park play baseball?",
      "qid": "WebQTrn-1326_c1d5c9c777c291a80c29c70ec43c45ad_cwq",
      "source": "cwq",
      "entities": {
        "AT&T Park": "m.01_gsg"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.arena_stadium m.01_gsg)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.01_gsg)",
        "get_neighbors(m.01_gsg,sports.sports_facility.teams)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.01_gsg",
          "answer_type": "Entity",
          "entity_name": "AT&T Park"
        }
      ]
    },
    {
      "question": "What was the first album of the subject of the film \"Pink Floyd: Then And Now\"?",
      "qid": "WebQTest-954_3ba7199b8dba851e93116c87ec16c83a_cwq",
      "source": "cwq",
      "entities": {
        "Pink Floyd: Then And Now": "m.0zxkybf"
      },
      "s_expression": "(ARGMIN (JOIN (R music.artist.album) (JOIN film.film_subject.films m.0zxkybf)) music.album.release_date)",
      "actions": [
        "get_relations(m.0zxkybf)",
        "get_neighbors(m.0zxkybf,film.film.subjects)",
        "get_relations(#0)",
        "get_neighbors(#0,music.artist.album)",
        "get_attributes(#1)",
        "argmin(#1,music.album.release_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0h3bhb1",
          "answer_type": "Entity",
          "entity_name": "Psychedelic Session-compilation album"
        }
      ]
    },
    {
      "question": "What time zone is Australia and Brisbane Airport in?",
      "qid": "WebQTrn-65_00d6cdf47de8f813b4953b856f1f801c_cwq",
      "source": "cwq",
      "entities": {
        "Australia": "m.0chghy",
        "Brisbane Airport": "m.01_6q2"
      },
      "s_expression": "(AND (JOIN (R location.location.time_zones) m.0chghy) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.01_6q2)))",
      "actions": [
        "get_relations(m.0chghy)",
        "get_neighbors(m.0chghy,location.location.time_zones)",
        "get_relations(m.01_6q2)",
        "get_neighbors(m.01_6q2,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0y497_m",
          "answer_type": "Entity",
          "entity_name": "Australian Eastern Time Zone"
        }
      ]
    },
    {
      "question": "how many exhibition subjects are in holding hands with history exhibit?",
      "qid": "4302933001000_grailqa",
      "source": "grailqa",
      "entities": {
        "Holding Hands with History Exhibit": "m.05bpnjm"
      },
      "s_expression": "(COUNT (AND exhibitions.exhibition_subject (JOIN (R exhibitions.exhibition.subjects) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) (JOIN (R exhibitions.exhibition.exhibition_types) m.05bpnjm)))))",
      "actions": [
        "get_relations(m.05bpnjm)",
        "get_neighbors(m.05bpnjm,exhibitions.exhibition.exhibition_types)",
        "get_relations(#0)",
        "get_neighbors(#0,exhibitions.type_of_exhibition.exhibitions_of_this_type)",
        "get_relations(#1)",
        "get_neighbors(#1,exhibitions.exhibition.subjects)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "602"
        }
      ]
    },
    {
      "question": "the atherurus africanus transmits how many infectious diseases?",
      "qid": "4303160003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Atherurus africanus": "m.0gf88qf"
      },
      "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.0gf88qf)))))",
      "actions": [
        "get_relations(m.0gf88qf)",
        "get_neighbors(m.0gf88qf,medicine.vector_of_disease.disease)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
        "get_relations(#1)",
        "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "30"
        }
      ]
    },
    {
      "question": "what is the total number of spacecrafts manufactured by the applied physics laboratory and us naval research laboratory",
      "qid": "3201449005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Applied Physics Laboratory": "m.07qxqz",
        "us naval research laboratory": "m.0255xh"
      },
      "s_expression": "(COUNT (AND spaceflight.spacecraft (AND (JOIN spaceflight.spacecraft.manufacturer m.07qxqz) (JOIN spaceflight.spacecraft.manufacturer m.0255xh))))",
      "actions": [
        "get_relations(m.07qxqz)",
        "get_neighbors(m.07qxqz,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "get_relations(m.0255xh)",
        "get_neighbors(m.0255xh,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what is the total number of spacecrafts manufactured by the ball aerospace & technologies corp and space dynamics laboratory",
      "qid": "3201449000000_grailqa",
      "source": "grailqa",
      "entities": {
        "ball aerospace & technologies corp": "m.02dxz4",
        "Space Dynamics Laboratory": "m.0265jm_"
      },
      "s_expression": "(COUNT (AND spaceflight.spacecraft (AND (JOIN spaceflight.spacecraft.manufacturer m.02dxz4) (JOIN spaceflight.spacecraft.manufacturer m.0265jm_))))",
      "actions": [
        "get_relations(m.02dxz4)",
        "get_neighbors(m.02dxz4,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "get_relations(m.0265jm_)",
        "get_neighbors(m.0265jm_,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "how many amusement park areas does the disneyland park and disneyland park have?",
      "qid": "3206299006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Disneyland Park": "m.04cj6k",
        "disneyland park": "m.02fzs"
      },
      "s_expression": "(COUNT (AND amusement_parks.amusement_park_area (AND (JOIN amusement_parks.amusement_park_area.parks m.04cj6k) (JOIN amusement_parks.amusement_park_area.parks m.02fzs))))",
      "actions": [
        "get_relations(m.04cj6k)",
        "get_neighbors(m.04cj6k,amusement_parks.park.areas)",
        "get_relations(m.02fzs)",
        "get_neighbors(m.02fzs,amusement_parks.park.areas)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "3"
        }
      ]
    },
    {
      "question": "what is the camera iso capability number of the iso setting used by pentax k110d and sony cyber-shot dsc-w150?",
      "qid": "3205827010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Pentax K110D": "m.02pm0z5",
        "Sony Cyber-shot DSC-W150": "m.04wjky8"
      },
      "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.02pm0z5) (JOIN (R digicams.digital_camera.iso_setting) m.04wjky8))))",
      "actions": [
        "get_relations(m.02pm0z5)",
        "get_neighbors(m.02pm0z5,digicams.digital_camera.iso_setting)",
        "get_relations(m.04wjky8)",
        "get_neighbors(m.04wjky8,digicams.digital_camera.iso_setting)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "6"
        }
      ]
    },
    {
      "question": "What type of government did both Sparta Greece and the country ruled by Manuel I of Portugal have?",
      "qid": "WebQTrn-1542_5a6ff4d04a675a1faca2c42267554795_cwq",
      "source": "cwq",
      "entities": {
        "Sparta": "m.09472",
        "Manuel I of Portugal": "m.012ck_"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.09472) (JOIN government.form_of_government.countries (JOIN royalty.kingdom.rulers m.012ck_)))",
      "actions": [
        "get_relations(m.09472)",
        "get_neighbors(m.09472,location.country.form_of_government)",
        "get_relations(m.012ck_)",
        "get_neighbors(m.012ck_,royalty.monarch.kingdom)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.04szc",
          "answer_type": "Entity",
          "entity_name": "Monarchy"
        }
      ]
    },
    {
      "question": "What was the name of the cancer that the composer of \"I Shot the Sheriff\" passed away from?",
      "qid": "WebQTrn-3531_66512bd8fc5f0f2fe24473ab564aeb94_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "I Shot the Sheriff": "m.04dr87"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.composer.compositions m.04dr87)) (JOIN people.cause_of_death.parent_cause_of_death m.0qcr0))",
      "actions": [
        "get_relations(m.04dr87)",
        "get_neighbors(m.04dr87,music.composition.composer)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,people.cause_of_death.includes_causes_of_death)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.046wcr",
          "answer_type": "Entity",
          "entity_name": "Acral lentiginous melanoma"
        },
        {
          "answer_argument": "m.04kndz2",
          "answer_type": "Entity",
          "entity_name": "Metastatic Melanoma"
        }
      ]
    },
    {
      "question": "the 2008 beijing olympic games and other olympic games in london uk contested which event?",
      "qid": "4300161008000_grailqa",
      "source": "grailqa",
      "entities": {
        "london uk": "m.04jpl",
        "2008 beijing olympic games": "m.0kbws"
      },
      "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.04jpl)) (JOIN olympics.olympic_event.olympic_games_contested m.0kbws)))",
      "actions": [
        "get_relations(m.04jpl)",
        "get_neighbors(m.04jpl,olympics.olympic_host_city.olympics_hosted)",
        "get_relations(#0)",
        "get_neighbors(#0,olympics.olympic_games.events)",
        "get_relations(m.0kbws)",
        "get_neighbors(m.0kbws,olympics.olympic_games.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3pr",
          "entity_name": "Women's Judo, + 78kg (heavyweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk37c",
          "entity_name": "Men's Greco-Roman Wrestling, Lightweight 60 - 66kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk384",
          "entity_name": "Women's Long jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3lm",
          "entity_name": "Women's Discus throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk31r",
          "entity_name": "Men's Floor exercises"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2cv",
          "entity_name": "Women's Athletics, 5000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2n3",
          "entity_name": "Women's 200m individual medley"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2z8",
          "entity_name": "Women's K-1 (kayak single)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2k4",
          "entity_name": "Women's Uneven bars"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2h8",
          "entity_name": "Women's Floor exercises"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9mpm",
          "entity_name": "Men's Sailboard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2vv",
          "entity_name": "Men's Quadruple sculls without coxswain"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2h3",
          "entity_name": "Men's 4x100m medley relay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3j8",
          "entity_name": "Women's 200m butterfly"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027n9h",
          "entity_name": "BMX racing"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk28d",
          "entity_name": "Women's Skeet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2jj",
          "entity_name": "Women's Trap"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2l7",
          "entity_name": "Women's 25m pistol"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk305",
          "entity_name": "Women's 50m rifle 3 positions"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk33s",
          "entity_name": "Men's 10m air rifle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk35h",
          "entity_name": "Men's 50m rifle 3 positions"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk36r",
          "entity_name": "Men's Double trap"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3c3",
          "entity_name": "Women's 10m air rifle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3hh",
          "entity_name": "Men's Skeet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3kj",
          "entity_name": "Men's 10m air pistol"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3mk",
          "entity_name": "Men's Trap"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03w8ggr",
          "entity_name": "Men's 4x400 metres relay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qy",
          "entity_name": "Women's Athletics, 800m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk31f",
          "entity_name": "Women's Badminton, singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk313",
          "entity_name": "Women's TableTennis, Singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32c",
          "entity_name": "Women's Athletics, 200m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j_sdlj",
          "entity_name": "Men's Tennis, singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk28k",
          "entity_name": "Men's Triathlon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2f2",
          "entity_name": "Women's 10m air pistol"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3k_",
          "entity_name": "Men's Athletics, 4x100m relay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk342",
          "entity_name": "Men's 50km walk"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3cx",
          "entity_name": "Men's Épée individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3m7",
          "entity_name": "Men's Boxing, 48 - 51kg (flyweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j_s7qg",
          "entity_name": "Women's Tennis, singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3h0",
          "entity_name": "Men's handball"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2w9",
          "entity_name": "Women's 400m individual medley"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2nl",
          "entity_name": "Women's Athletics, 400m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2pj",
          "entity_name": "Women's Athletics, 100m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2b3",
          "entity_name": "Women's Archery, individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2_w",
          "entity_name": "Men's Track cycling, Sprint individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2xd",
          "entity_name": "Men's Mountain Biking, Cross-Country"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30n",
          "entity_name": "Men's Road cycling, individual road race"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3cl",
          "entity_name": "Men's Shot put"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2ks",
          "entity_name": "Men's C-1 1000m (canoe single)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3f4",
          "entity_name": "Men's Greco-Roman Wrestling, Welterweight 66 - 74kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk326",
          "entity_name": "Men's 200m breaststroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2pv",
          "entity_name": "Men's Javelin throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2sh",
          "entity_name": "Women's Sychronized swimming, team"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2t3",
          "entity_name": "Men's Boxing, 60 - 64 kg (light welterweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk34w",
          "entity_name": "Women's Athletics, 3000m steeplechase"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2hx",
          "entity_name": "Men's 1500m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2pc",
          "entity_name": "Men's Discus throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2dy",
          "entity_name": "Women's Shot put"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2_1",
          "entity_name": "Men's Freestyle Wrestling, Super Heavyweight 96-120 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079yv82",
          "entity_name": "Finn Class"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3hb",
          "entity_name": "Men's Freestyle Wrestling, Heavyweight 84-96kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk397",
          "entity_name": "Men's Greco-Roman Wrestling, Bantamweight 55kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01b5r_",
          "entity_name": "Women's association football"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2bx",
          "entity_name": "Men's Weightlifting, Bantamweight  -56kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2j_",
          "entity_name": "Men's football"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk368",
          "entity_name": "Women's High jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03191j",
          "entity_name": "Women's basketball"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30z",
          "entity_name": "Men's Beach Volleyball"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9lcn",
          "entity_name": "Women's 3 metre springboard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9ld0",
          "entity_name": "Men's 3 metre springboard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9ld6",
          "entity_name": "Women's 10 metre platform"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk282",
          "entity_name": "Men's Volleyball"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk29t",
          "entity_name": "Men's Parallel bars"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2c_",
          "entity_name": "Men's Gymnastics, individual all-round"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2cj",
          "entity_name": "Men's Long jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2dm",
          "entity_name": "Women's Foil individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2f7",
          "entity_name": "Men's 50m pistol"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2gh",
          "entity_name": "Eventing, individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2hl",
          "entity_name": "Men's Athletics, 100m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2jp",
          "entity_name": "Men's Athletics, 5000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2lq",
          "entity_name": "Men's Foil individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2mz",
          "entity_name": "Men's Marathon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2q4",
          "entity_name": "Men's Road Cycling, Individual Time Trial"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qm",
          "entity_name": "Men's Athletics, 400m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qs",
          "entity_name": "Men's 100m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2rd",
          "entity_name": "Men's Pole vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2sn",
          "entity_name": "Women's 100m backstroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2tl",
          "entity_name": "Men's Athletics, 400m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2tx",
          "entity_name": "Women's 400m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2x7",
          "entity_name": "Men's Pommel horse"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2xq",
          "entity_name": "Men's Sabre individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2yb",
          "entity_name": "Jumping, individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2yh",
          "entity_name": "Men's Athletics, 200m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2zl",
          "entity_name": "Men's Horizontal bar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk300",
          "entity_name": "Men's Hammer throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30h",
          "entity_name": "Men's Athletics, 110m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30t",
          "entity_name": "Men's 400m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32_",
          "entity_name": "Men's Triple jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32p",
          "entity_name": "Men's High jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk334",
          "entity_name": "Men's 25m rapid fire pistol"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk33m",
          "entity_name": "Women's 200m breaststroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk35z",
          "entity_name": "Men's Modern pentathlon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39d",
          "entity_name": "Men's Vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39q",
          "entity_name": "Women's 100m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39w",
          "entity_name": "Men's Athletics, 10000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3b5",
          "entity_name": "Men's Athletics, 800m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3bh",
          "entity_name": "Men's 100m backstroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3d6",
          "entity_name": "Men's 50m rifle prone"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3dj",
          "entity_name": "Men's Decathlon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3fm",
          "entity_name": "Men's 3000m steeplechase"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3kp",
          "entity_name": "Men's Rings"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3l9",
          "entity_name": "Men's Single sculls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3n5",
          "entity_name": "Men's Athletics, 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0k1nqc0",
          "entity_name": "Individual Dressage"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3m2",
          "entity_name": "Women's 50m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2jc",
          "entity_name": "Men's 4x200m freestyle relay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2ky",
          "entity_name": "Women's Road cycling, individual time trial"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3jx",
          "entity_name": "Women's K-1 500m (kayak single)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3n0",
          "entity_name": "Women's Road cycling, individual road race"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3pl",
          "entity_name": "Women's Track cycling, sprint"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk287",
          "entity_name": "Women's Taekwondo, Middleweight 57 - 67 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk392",
          "entity_name": "Men's Slalom C-1 (canoe single)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2rq",
          "entity_name": "Women's 800m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk28q",
          "entity_name": "Women's 200m backstroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk37_",
          "entity_name": "Women's Weightlifting, 53kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2mn",
          "entity_name": "Women's Athletics, 100m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3k6",
          "entity_name": "Men's Greco-Roman Wrestling, Middleweight 74 - 84 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2r2",
          "entity_name": "Men's Gymnastics,  team competition"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2w4",
          "entity_name": "Women's Mountain Biking, Cross-Country"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2nx",
          "entity_name": "Men's 200m butterfly"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3ht",
          "entity_name": "Men's Boxing, Super Heavyweight +91kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3p3",
          "entity_name": "Men's Judo, - 60 kg Men (extra lightweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2vc",
          "entity_name": "Women's handball"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2p1",
          "entity_name": "Men's 470 - Two Person Dinghy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3jr",
          "entity_name": "Men's C-2 (canoe double)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3pf",
          "entity_name": "Men's 100m butterfly"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2b8",
          "entity_name": "Men's Boxing, Bantamweight 51 - 54kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2c1",
          "entity_name": "Men's Judo, 73 - 81kg (half-middleweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2k9",
          "entity_name": "Men's 50m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2rk",
          "entity_name": "Women's Modern pentathlon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079b5dt",
          "entity_name": "Women's Sailboard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3h5",
          "entity_name": "Women's Javelin throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2bl",
          "entity_name": "Men's Judo, 81 - 90kg (middleweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2g0",
          "entity_name": "Women's Rhythmic gymnastics, group competition"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2lk",
          "entity_name": "Men's 200m backstroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk35t",
          "entity_name": "Men's Boxing, - Light Flyweight -48kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk371",
          "entity_name": "Men's 20km walk"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3px",
          "entity_name": "Men's Boxing, Lightweight 57 - 60kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3nh",
          "entity_name": "Women's Volleyball"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk339",
          "entity_name": "Men's K-1 1000m (kayak single)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2zf",
          "entity_name": "Women's Weightlifting, 75kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3gq",
          "entity_name": "Men's 200m individual medley"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3bn",
          "entity_name": "Men's Freestyle Wrestling, Featherweight 55 - 60 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2n8",
          "entity_name": "Men's 400m individual medley"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2lw",
          "entity_name": "Women's 4x100m freestyle relay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0kgcy_k",
          "entity_name": "Badminton - Women's doubles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2p_",
          "entity_name": "Women's Freestyle Wrestling, Heavyweight 63 - 72kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk290",
          "entity_name": "Women's Gymnastics,  team competition"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2z3",
          "entity_name": "Women's Vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3nb",
          "entity_name": "Women's Gymnastics, individual all-round"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2c6",
          "entity_name": "Men's Boxing, Light Heavyweight 75 - 81kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2s0",
          "entity_name": "Men's Track cycling, Team Pursuit (4000m)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2yn",
          "entity_name": "Men's Track cycling, Keirin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3g2",
          "entity_name": "Men's 100m breaststroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2q9",
          "entity_name": "Women's Sabre individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3dv",
          "entity_name": "Men's Weightlifting, Featherweight 56-62 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2gb",
          "entity_name": "Men's Judo, + 100kg (heavyweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2hr",
          "entity_name": "Women's Weightlifting, 69kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2dg",
          "entity_name": "Women's Hammer throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk28w",
          "entity_name": "Women's Freestyle Wrestling, Middleweight 55 - 63 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2tf",
          "entity_name": "Men's Taekwondo, Lightweight 58 - 68 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk38m",
          "entity_name": "Men's Archery, individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2wy",
          "entity_name": "Women's trampoline"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk36l",
          "entity_name": "Women's Weightlifting, + 75kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2vj",
          "entity_name": "Women's Athletics, 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk318",
          "entity_name": "Men's basketball"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk31x",
          "entity_name": "Women's BMX Cycling"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3fy",
          "entity_name": "Men's Freestyle Wrestling, Lightweight 60-66 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2gt",
          "entity_name": "Men's Table Tennis, Singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03w8gdr",
          "entity_name": "Men's 200m Freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2mb",
          "entity_name": "Women's K-2 500m (kayak double)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3ls",
          "entity_name": "Women's 200m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2vp",
          "entity_name": "Men's 4x100m freestyle relay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3l4",
          "entity_name": "Men's Weightlifting, Middle Heavyweight 85-94 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk37v",
          "entity_name": "Men's K-1 (kayak single)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3dp",
          "entity_name": "Men's Four without coxswain"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk35n",
          "entity_name": "Women's Beach Volleyball"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j_s9yb",
          "entity_name": "Women's Tennis, doubles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3gk",
          "entity_name": "Men's Weightlifting, Heavyweight 94 - 105 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3f9",
          "entity_name": "Women's 100m breaststroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2xw",
          "entity_name": "Women's Foil team"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk29z",
          "entity_name": "Women's Rhythmic gymnastics, individual all-round"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2p6",
          "entity_name": "Men's Weightlifting, Light Heavyweight 77-85 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2ws",
          "entity_name": "Women's Athletics, 10000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3fg",
          "entity_name": "Women's Freestyle Wrestling, Lightweight 48 - 55kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3md",
          "entity_name": "Men's Laser - One Person Dinghy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2j6",
          "entity_name": "Men's Boxing, Middleweight 69 - 75 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2mt",
          "entity_name": "Men's Badminton, singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2nf",
          "entity_name": "Men's Boxing, Heavyweight 81 - 91kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3nz",
          "entity_name": "Women's 100m butterfly"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0kgb47k",
          "entity_name": "Badminton - Mixed doubles (Olympics)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk295",
          "entity_name": "Women's Taekwondo, Lightweight 49 - 57 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3fs",
          "entity_name": "Women's Épée individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2sz",
          "entity_name": "Women's Athletics, 400m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3mq",
          "entity_name": "Women's Judo, 63-70kg (Middleweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3k1",
          "entity_name": "Women's Judo, - 48kg (extra-lightweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2cp",
          "entity_name": "Men's Freestyle Wrestling, Welterweight 66-74kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2j1",
          "entity_name": "Men's Swimming, marathon 10km"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2pp",
          "entity_name": "Men's C-2 1000m (canoe double)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk34d",
          "entity_name": "Women's water polo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2_q",
          "entity_name": "Women's Eight with coxswain"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2gn",
          "entity_name": "Women's Quadruple sculls without coxswain"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2gz",
          "entity_name": "Women's Lightweight double sculls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2l2",
          "entity_name": "Men's Lightweight coxless four"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2s5",
          "entity_name": "Men's Coxless pair"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2yt",
          "entity_name": "Men's Eight with coxswain"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2zr",
          "entity_name": "Women's Pair without coxswain"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2zx",
          "entity_name": "Women's Double sculls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39k",
          "entity_name": "Men's Double sculls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3d_",
          "entity_name": "Men's Lightweight double sculls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3g7",
          "entity_name": "Women's Single Sculls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk36x",
          "entity_name": "Women's Triple jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2ds",
          "entity_name": "Men's Sabre team"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30b",
          "entity_name": "Women's 4x200m freestyle relay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2sb",
          "entity_name": "Women's Weightlifting, 58kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3nn",
          "entity_name": "Men's Table tennis, team"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk38y",
          "entity_name": "Men's hockey"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3c8",
          "entity_name": "Women's Freestyle Wrestling, Flyweight 48 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk38g",
          "entity_name": "Men's Judo, 60 - 66kg (half-lightweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2bf",
          "entity_name": "Men's Boxing, Welterweight 64-69 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2st",
          "entity_name": "Men's Judo, 66 - 73kg (lightweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3kv",
          "entity_name": "Men's Weightlifting, Middleweight 69-77 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2km",
          "entity_name": "Women's Swimming, marathon 10km"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2yz",
          "entity_name": "Men's Taekwondo, Heavyweight + 80 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk29b",
          "entity_name": "Men's Greco-Roman Wrestling, Heavyweight 84-96 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3nt",
          "entity_name": "Women's K-4 500m (kayak four)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2x2",
          "entity_name": "Women's Taekwondo, Flyweight - 49 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3b0",
          "entity_name": "Men's Weightlifting, Super Heavyweight + 105kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2m5",
          "entity_name": "Men's Greco-Roman Wrestling, Super Heavyweight 96-120 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j_pzdb",
          "entity_name": "Men's Tennis, doubles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32v",
          "entity_name": "Women's Weightlifting, 63kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3gw",
          "entity_name": "Women's Laser Radial - One Person Dinghy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk34k",
          "entity_name": "Women's Sychronized swimming, duet"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3bt",
          "entity_name": "Women's 4x100m medley relay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2fw",
          "entity_name": "Women's Judo, 70 - 78kg (half-heavyweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2ld",
          "entity_name": "Men's Greco-Roman Wrestling, Featherweight 55 - 60kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk321",
          "entity_name": "Men's Freestyle Wrestling, Middleweight 74-84kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3hn",
          "entity_name": "Women's Taekwondo, Heavyweight + 67 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0k1nx2m",
          "entity_name": "Team Dressage"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk35b",
          "entity_name": "Women's 470 - Two Person Dinghy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3lg",
          "entity_name": "Men's Star - Keelboat"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3ly",
          "entity_name": "Women's Yngling - Keelboat"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2cc",
          "entity_name": "Men's trampoline"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk33g",
          "entity_name": "49er - Skiff"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk33y",
          "entity_name": "Women's Athletics, Marathon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2v_",
          "entity_name": "Women's Pole vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk29h",
          "entity_name": "Women's Judo, 48 - 52kg (half-lightweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2fd",
          "entity_name": "Women's Weightlifting, 48kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2fk",
          "entity_name": "Women's Athletics, 4x100m relay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2fq",
          "entity_name": "Women's Archery, team"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2g5",
          "entity_name": "Women's Judo, 57 - 63kg (Half-Middleweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2m0",
          "entity_name": "Women's Judo, 52 - 57kg (Lightweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qg",
          "entity_name": "Men's water polo"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2r7",
          "entity_name": "Women's Individual Triathlon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2tr",
          "entity_name": "Women's Table tennis, team"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2v6",
          "entity_name": "Men's K-4 1000m (kayak four)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2wm",
          "entity_name": "Women's hockey"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk34q",
          "entity_name": "Men's K-2 1000m (kayak double)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk350",
          "entity_name": "Women's Athletics, 20km walk"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk355",
          "entity_name": "Men's Archery, team"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk36f",
          "entity_name": "Men's Weightlifting, Lightweight 62-69 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk389",
          "entity_name": "Men's Freestyle Wrestling, Bantamweight 55kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk38s",
          "entity_name": "Men's Taekwondo, Middleweight 68 - 80 kg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3cr",
          "entity_name": "Women's Athletics, 4x400m relay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3kc",
          "entity_name": "Men's Judo, 90 - 100kg (half-heavyweight)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0kgbcs4",
          "entity_name": "Badminton - Men's doubles"
        }
      ]
    },
    {
      "question": "in hong kong disneyland and disneyland park parks, how many amusement parks are there?",
      "qid": "3206299004000_grailqa",
      "source": "grailqa",
      "entities": {
        "disneyland park": "m.02fzs",
        "Hong Kong Disneyland": "m.022zvr"
      },
      "s_expression": "(COUNT (AND amusement_parks.amusement_park_area (AND (JOIN amusement_parks.amusement_park_area.parks m.02fzs) (JOIN amusement_parks.amusement_park_area.parks m.022zvr))))",
      "actions": [
        "get_relations(m.02fzs)",
        "get_neighbors(m.02fzs,amusement_parks.park.areas)",
        "get_relations(m.022zvr)",
        "get_neighbors(m.022zvr,amusement_parks.park.areas)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "3"
        }
      ]
    },
    {
      "question": "When did the champion of the 1996 Intercontinental Cup win the league?",
      "qid": "WebQTest-696_d5bcb98ac53d37ae33a9f9c068b64e7a_cwq",
      "source": "cwq",
      "entities": {
        "UEFA Champions League Final": "m.05nblxt",
        "1996 Intercontinental Cup": "m.05zlrfm"
      },
      "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.05zlrfm)) (JOIN sports.sports_championship_event.championship m.05nblxt))",
      "actions": [
        "get_relations(m.05zlrfm)",
        "get_neighbors(m.05zlrfm,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.05nblxt)",
        "get_neighbors(m.05nblxt,sports.sports_championship.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02pt_57",
          "answer_type": "Entity",
          "entity_name": "1996 UEFA Champions League Final"
        }
      ]
    },
    {
      "question": "What type of guitar is played by the composer of \"Go Your Own Way\"?",
      "qid": "WebQTrn-3122_0e836e7ada0c779adee571816e7ba423_cwq",
      "source": "cwq",
      "entities": {
        "Guitar": "m.0342h",
        "Go Your Own Way": "m.09gglj"
      },
      "s_expression": "(AND (JOIN (R music.group_member.instruments_played) (JOIN music.composer.compositions m.09gglj)) (JOIN music.instrument.family m.0342h))",
      "actions": [
        "get_relations(m.09gglj)",
        "get_neighbors(m.09gglj,music.composition.composer)",
        "get_relations(#0)",
        "get_neighbors(#0,music.group_member.instruments_played)",
        "get_relations(m.0342h)",
        "get_neighbors(m.0342h,music.instrument.variation)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.018vs",
          "answer_type": "Entity",
          "entity_name": "Bass guitar"
        }
      ]
    },
    {
      "question": "What year did the team who won the 2014 Supercoppa Italian championship win the champions league?",
      "qid": "WebQTest-696_5fe857d3a6368bad297cb22b5aa5ed29_cwq",
      "source": "cwq",
      "entities": {
        "UEFA Champions League Final": "m.05nblxt",
        "2014 supercoppa italian championship": "m.010hn4x1"
      },
      "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.010hn4x1)) (JOIN sports.sports_championship_event.championship m.05nblxt))",
      "actions": [
        "get_relations(m.010hn4x1)",
        "get_neighbors(m.010hn4x1,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.05nblxt)",
        "get_neighbors(m.05nblxt,sports.sports_championship.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02pt_57",
          "answer_type": "Entity",
          "entity_name": "1996 UEFA Champions League Final"
        }
      ]
    },
    {
      "question": "Who was born in Cwmbran and founded pixar?",
      "qid": "WebQTrn-248_137a6a294097ffd2ed5300cd202db729_cwq",
      "source": "cwq",
      "entities": {
        "Pixar": "m.0kk9v",
        "Cwmbran": "m.01ht08"
      },
      "s_expression": "(AND (JOIN (R organization.organization.founders) m.0kk9v) (JOIN influence.influence_node.influenced (JOIN people.person.place_of_birth m.01ht08)))",
      "actions": [
        "get_relations(m.0kk9v)",
        "get_neighbors(m.0kk9v,organization.organization.founders)",
        "get_relations(m.01ht08)",
        "get_neighbors(m.01ht08,location.location.people_born_here)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.06y3r",
          "answer_type": "Entity",
          "entity_name": "Steve Jobs"
        }
      ]
    },
    {
      "question": "What championship was most recently won by the sports team whose owner is James L. Dolan?",
      "qid": "WebQTrn-1406_f693ae2cb9aa6b8ffdf0f103a6777b62_cwq",
      "source": "cwq",
      "entities": {
        "James L. Dolan": "m.0469ts"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.0469ts)) time.event.start_date)",
      "actions": [
        "get_relations(m.0469ts)",
        "get_neighbors(m.0469ts,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0cs1kg",
          "answer_type": "Entity",
          "entity_name": "1973 NBA Finals"
        }
      ]
    },
    {
      "question": "anglicans has what number of religious texts of all saint's day?",
      "qid": "4303883003000_grailqa",
      "source": "grailqa",
      "entities": {
        "anglicans": "m.0n2g",
        "all saint's day": "m.0k0c"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of (JOIN (R time.holiday.featured_in_religions) m.0k0c)) (JOIN (R religion.religion.texts) m.0n2g))))",
      "actions": [
        "get_relations(m.0k0c)",
        "get_neighbors(m.0k0c,time.holiday.featured_in_religions)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religion.texts)",
        "get_relations(m.0n2g)",
        "get_neighbors(m.0n2g,religion.religion.texts)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "3"
        }
      ]
    },
    {
      "question": "how many different religious texts have c&ma and eastern christians texts?",
      "qid": "3206221002000_grailqa",
      "source": "grailqa",
      "entities": {
        "eastern christians": "m.0blk0",
        "c&ma": "m.03yvh5"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of m.0blk0) (JOIN (R religion.religion.texts) m.03yvh5))))",
      "actions": [
        "get_relations(m.0blk0)",
        "get_neighbors(m.0blk0,religion.religion.texts)",
        "get_relations(m.03yvh5)",
        "get_neighbors(m.03yvh5,religion.religion.texts)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "which is the fictional character who lives in the city of universe?",
      "qid": "4300742009000_grailqa",
      "source": "grailqa",
      "entities": {
        "City": "m.01n32",
        "universe": "m.01q_ks"
      },
      "s_expression": "(AND fictional_universe.fictional_character (JOIN fictional_universe.fictional_character.places_lived (AND (JOIN fictional_universe.fictional_setting.setting_type m.01n32) (JOIN (R fictional_universe.fictional_universe.locations) m.01q_ks))))",
      "actions": [
        "get_relations(m.01n32)",
        "get_neighbors(m.01n32,fictional_universe.type_of_fictional_setting.settings)",
        "get_relations(m.01q_ks)",
        "get_neighbors(m.01q_ks,fictional_universe.fictional_universe.locations)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,fictional_universe.fictional_setting.characters_that_have_lived_here)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01d5g",
          "entity_name": "Bruce Wayne"
        }
      ]
    },
    {
      "question": "What type of government is used in the birthplace of Baldur Von Schirach and Saudi Arabia?",
      "qid": "WebQTest-1861_3f76d491e90682cc29e3de2546e1f9c5_cwq",
      "source": "cwq",
      "entities": {
        "Saudi Arabia": "m.01z215",
        "Baldur von Schirach": "m.0143sn"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.01z215) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.0143sn)))",
      "actions": [
        "get_relations(m.01z215)",
        "get_neighbors(m.01z215,location.country.form_of_government)",
        "get_relations(m.0143sn)",
        "get_neighbors(m.0143sn,people.person.place_of_birth)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0hqc2",
          "answer_type": "Entity",
          "entity_name": "Absolute monarchy"
        }
      ]
    },
    {
      "question": "the same rocket manufacturer who manufactured pegasus ii and minotaur created what other rocket?\nsaturn int-20, delta iii, delta ii...",
      "qid": "4300129003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Pegasus II": "m.0vpwz5q",
        "Minotaur": "m.080v1v"
      },
      "s_expression": "(AND spaceflight.rocket (JOIN spaceflight.rocket.manufacturer (AND (JOIN (R spaceflight.rocket.manufacturer) m.0vpwz5q) (JOIN spaceflight.rocket_manufacturer.rockets_manufactured m.080v1v))))",
      "actions": [
        "get_relations(m.0vpwz5q)",
        "get_neighbors(m.0vpwz5q,spaceflight.rocket.manufacturer)",
        "get_relations(m.080v1v)",
        "get_neighbors(m.080v1v,spaceflight.rocket.manufacturer)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,spaceflight.rocket_manufacturer.rockets_manufactured)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.063dvp",
          "entity_name": "Minotaur-C"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qcfn2",
          "entity_name": "Antares"
        }
      ]
    },
    {
      "question": "what is the programming language influenced by another language developed by bill venners that was introduced first?",
      "qid": "4303199002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Bill Venners": "m.05kh714"
      },
      "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.05kh714))) computer.programming_language.introduced)",
      "actions": [
        "get_relations(m.05kh714)",
        "get_neighbors(m.05kh714,computer.programming_language_developer.programming_languages_developed)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.influenced)",
        "get_attributes(#1)",
        "argmin(#1,computer.programming_language.introduced)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01jt82",
          "entity_name": "F#"
        }
      ]
    },
    {
      "question": "besides outdoor sculpture, what other art forms were made by andy goldsworthy?",
      "qid": "4302283002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Andy Goldsworthy": "m.027rbq",
        "outdoor sculpture": "m.06msq"
      },
      "s_expression": "(AND visual_art.visual_art_form (JOIN (R visual_art.artwork.art_form) (AND (JOIN visual_art.artwork.artist m.027rbq) (JOIN visual_art.artwork.art_form m.06msq))))",
      "actions": [
        "get_relations(m.027rbq)",
        "get_neighbors(m.027rbq,visual_art.visual_artist.artworks)",
        "get_relations(m.06msq)",
        "get_neighbors(m.06msq,visual_art.visual_art_form.artworks)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,visual_art.artwork.art_form)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0426yt",
          "entity_name": "Concept art"
        }
      ]
    },
    {
      "question": "which medications to treat leukaemias have bossing as a side effect?",
      "qid": "4301182006000_grailqa",
      "source": "grailqa",
      "entities": {
        "leukaemias": "m.04psf",
        "bossing": "m.09bdp3"
      },
      "s_expression": "(AND medicine.medical_treatment (AND (JOIN medicine.medical_treatment.side_effects (JOIN medicine.symptom.parent_symptom m.09bdp3)) (JOIN medicine.medical_treatment.used_to_treat m.04psf)))",
      "actions": [
        "get_relations(m.09bdp3)",
        "get_neighbors(m.09bdp3,medicine.symptom.includes_symptoms)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.symptom.side_effect_of)",
        "get_relations(m.04psf)",
        "get_neighbors(m.04psf,medicine.disease.treatments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02q6kr",
          "entity_name": "Imatinib"
        }
      ]
    },
    {
      "question": "which character who has the ability of tracking by heat had an item that was eventually destroyed by swordsmen?",
      "qid": "4302209013000_grailqa",
      "source": "grailqa",
      "entities": {
        "swordsmen": "m.0cnb192",
        "tracking by heat": "m.0c0b1hn"
      },
      "s_expression": "(AND fictional_universe.fictional_character (AND (JOIN fictional_universe.fictional_character.has_possessed (JOIN fictional_universe.fictional_object.destroyer m.0cnb192)) (JOIN fictional_universe.fictional_character.powers_or_abilities m.0c0b1hn)))",
      "actions": [
        "get_relations(m.0cnb192)",
        "get_neighbors(m.0cnb192,fictional_universe.fictional_object_destroyer.fictional_objects_destroyed)",
        "get_relations(#0)",
        "get_neighbors(#0,fictional_universe.fictional_object.owner)",
        "get_relations(m.0c0b1hn)",
        "get_neighbors(m.0c0b1hn,fictional_universe.character_powers.characters_with_this_ability)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cpg05_",
          "entity_name": "Niko"
        }
      ]
    },
    {
      "question": "how many religious texts are there that has both catholic and lutheran church texts?",
      "qid": "3206221011000_grailqa",
      "source": "grailqa",
      "entities": {
        "lutheran church": "m.04pk9",
        "catholic": "m.0c8wxp"
      },
      "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of m.04pk9) (JOIN (R religion.religion.texts) m.0c8wxp))))",
      "actions": [
        "get_relations(m.04pk9)",
        "get_neighbors(m.04pk9,religion.religion.texts)",
        "get_relations(m.0c8wxp)",
        "get_neighbors(m.0c8wxp,religion.religion.texts)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "Which software engineer invented facebook?",
      "qid": "WebQTrn-2245_5088ffe2fd5995ba40ffe2f755a17b72_cwq",
      "source": "cwq",
      "entities": {
        "facebook": "m.0hmyfsv",
        "Software Engineering": "m.06q83"
      },
      "s_expression": "(AND (JOIN (R organization.organization.founders) m.0hmyfsv) (JOIN influence.influence_node.influenced (JOIN people.person.profession m.06q83)))",
      "actions": [
        "get_relations(m.0hmyfsv)",
        "get_neighbors(m.0hmyfsv,organization.organization.founders)",
        "get_relations(m.06q83)",
        "get_neighbors(m.06q83,people.profession.people_with_this_profession)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.086dny",
          "answer_type": "Entity",
          "entity_name": "Mark Zuckerberg"
        }
      ]
    },
    {
      "question": "what type of leukaemias treatments have bossing side effects?",
      "qid": "4301182002000_grailqa",
      "source": "grailqa",
      "entities": {
        "leukaemias": "m.04psf",
        "bossing": "m.09bdp3"
      },
      "s_expression": "(AND medicine.medical_treatment (AND (JOIN medicine.medical_treatment.side_effects (JOIN medicine.symptom.parent_symptom m.09bdp3)) (JOIN medicine.medical_treatment.used_to_treat m.04psf)))",
      "actions": [
        "get_relations(m.09bdp3)",
        "get_neighbors(m.09bdp3,medicine.symptom.includes_symptoms)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.symptom.side_effect_of)",
        "get_relations(m.04psf)",
        "get_neighbors(m.04psf,medicine.disease.treatments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.02q6kr",
          "entity_name": "Imatinib"
        }
      ]
    },
    {
      "question": "which programming language influenced by another language developed by bob was introduced first?",
      "qid": "4303199001000_grailqa",
      "source": "grailqa",
      "entities": {
        "bob": "m.02zycj"
      },
      "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.02zycj))) computer.programming_language.introduced)",
      "actions": [
        "get_relations(m.02zycj)",
        "get_neighbors(m.02zycj,computer.programming_language_developer.programming_languages_developed)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.influenced)",
        "get_attributes(#1)",
        "argmin(#1,computer.programming_language.introduced)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01zpg",
          "entity_name": "COBOL"
        }
      ]
    },
    {
      "question": "the treeing tennessee brindle and seppala siberian sleddogs have how many common temperaments?",
      "qid": "3205485010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Treeing Tennessee Brindle": "m.0410k_5",
        "seppala siberian sleddogs": "m.01p08w"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds m.0410k_5) (JOIN (R biology.animal_breed.temperament) m.01p08w))))",
      "actions": [
        "get_relations(m.0410k_5)",
        "get_neighbors(m.0410k_5,biology.animal_breed.temperament)",
        "get_relations(m.01p08w)",
        "get_neighbors(m.01p08w,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "which constipation treatments has sludge syndrome side effects?",
      "qid": "4301182011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Constipation": "m.016kf9",
        "SLUDGE syndrome": "m.025yc7f"
      },
      "s_expression": "(AND medicine.medical_treatment (AND (JOIN medicine.medical_treatment.side_effects (JOIN medicine.symptom.parent_symptom m.025yc7f)) (JOIN medicine.medical_treatment.used_to_treat m.016kf9)))",
      "actions": [
        "get_relations(m.025yc7f)",
        "get_neighbors(m.025yc7f,medicine.symptom.includes_symptoms)",
        "get_relations(#0)",
        "get_neighbors(#0,medicine.symptom.side_effect_of)",
        "get_relations(m.016kf9)",
        "get_neighbors(m.016kf9,medicine.disease.treatments)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04rs8t",
          "entity_name": "Lactulose"
        }
      ]
    },
    {
      "question": "What influenced Whitman's poetry that was itself influenced by Girard Desargues?",
      "qid": "WebQTrn-3358_fa37e433eaf26b34a57900ac4af9259c_cwq",
      "source": "cwq",
      "entities": {
        "whitman": "m.085gk",
        "Girard Desargues": "m.01_4zq"
      },
      "s_expression": "(AND (JOIN (R influence.influence_node.influenced_by) m.085gk) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.01_4zq)))",
      "actions": [
        "get_relations(m.085gk)",
        "get_neighbors(m.085gk,influence.influence_node.influenced_by)",
        "get_relations(m.01_4zq)",
        "get_neighbors(m.01_4zq,influence.influence_node.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.039n1",
          "answer_type": "Entity",
          "entity_name": "Georg Wilhelm Friedrich Hegel"
        }
      ]
    },
    {
      "question": "What stop motion films was Adam Sandler in?",
      "qid": "WebQTrn-1677_c606d81a0b9a8fe9f1a8a17239ebe8e2_cwq",
      "source": "cwq",
      "entities": {
        "Adam Sandler": "m.0pz91",
        "Stop motion": "m.06qln"
      },
      "s_expression": "(AND (JOIN (R film.producer.film) m.0pz91) (JOIN film.film.genre (JOIN media_common.media_genre.child_genres m.06qln)))",
      "actions": [
        "get_relations(m.0pz91)",
        "get_neighbors(m.0pz91,film.producer.film)",
        "get_relations(m.06qln)",
        "get_neighbors(m.06qln,media_common.media_genre.parent_genre)",
        "get_relations(#1)",
        "get_neighbors(#1,film.film_genre.films_in_this_genre)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.010rdrd1"
        },
        {
          "answer_argument": "m.02m7tn"
        }
      ]
    },
    {
      "question": "what number of spacecrafts did lockheed martin and msss manufacture?",
      "qid": "3201449008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Lockheed Martin": "m.0hkqn",
        "msss": "m.061z0k"
      },
      "s_expression": "(COUNT (AND spaceflight.spacecraft (AND (JOIN spaceflight.spacecraft.manufacturer m.0hkqn) (JOIN spaceflight.spacecraft.manufacturer m.061z0k))))",
      "actions": [
        "get_relations(m.0hkqn)",
        "get_neighbors(m.0hkqn,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "get_relations(m.061z0k)",
        "get_neighbors(m.061z0k,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "through which countries of the sahel does the niger river flow and is the country that contains Kogi State?",
      "qid": "WebQTest-1748_555348600936e056c6294804fdb270cd_cwq",
      "source": "cwq",
      "entities": {
        "Niger River": "m.05csx",
        "sahel": "m.0l5_l",
        "Kogi State": "m.01rq3q"
      },
      "s_expression": "(AND location.country (AND (JOIN (R location.location.partially_containedby) m.05csx) (AND (JOIN location.location.partially_contains m.0l5_l) (JOIN location.country.administrative_divisions m.01rq3q))))",
      "actions": [
        "get_relations(m.05csx)",
        "get_neighbors(m.05csx,location.location.partially_containedby)",
        "get_relations(m.0l5_l)",
        "get_neighbors(m.0l5_l,location.location.partially_containedby)",
        "get_relations(m.01rq3q)",
        "get_neighbors(m.01rq3q,location.administrative_division.country)",
        "intersection(#1,#2)",
        "intersection(#0,#3)"
      ],
      "answer": [
        {
          "answer_argument": "m.05cgv",
          "answer_type": "Entity",
          "entity_name": "Nigeria"
        }
      ]
    },
    {
      "question": "When the composer of \"If you Walking Alone\" dies, what type of cancer did they have?",
      "qid": "WebQTrn-2936_694ba0d66587aa136e7fd4a307d955a1_cwq",
      "source": "cwq",
      "entities": {
        "Cancer": "m.0qcr0",
        "\"if you walking alone\"": "m.0vv0x88"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.composer.compositions m.0vv0x88)) (JOIN people.cause_of_death.parent_cause_of_death m.0qcr0))",
      "actions": [
        "get_relations(m.0vv0x88)",
        "get_neighbors(m.0vv0x88,music.composition.composer)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.0qcr0)",
        "get_neighbors(m.0qcr0,people.cause_of_death.includes_causes_of_death)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.04p3w",
          "answer_type": "Entity",
          "entity_name": "Lung cancer"
        }
      ]
    },
    {
      "question": "how many paradigms are there for the lua language and euslisp robot programming language programming languages?",
      "qid": "3205793013000_grailqa",
      "source": "grailqa",
      "entities": {
        "lua language": "m.0chpd",
        "EusLisp Robot Programming Language": "m.0260znl"
      },
      "s_expression": "(COUNT (AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.0chpd) (JOIN computer.programming_language_paradigm.languages m.0260znl))))",
      "actions": [
        "get_relations(m.0chpd)",
        "get_neighbors(m.0chpd,computer.programming_language.language_paradigms)",
        "get_relations(m.0260znl)",
        "get_neighbors(m.0260znl,computer.programming_language.language_paradigms)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "Lou Seal is the mascot for the team that last won the World Series when?",
      "qid": "WebQTest-832_c334509bb5e02cacae1ba2e80c176499_cwq",
      "source": "cwq",
      "entities": {
        "Lou Seal": "m.03_dwn"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.03_dwn)) time.event.start_date)",
      "actions": [
        "get_relations(m.03_dwn)",
        "get_neighbors(m.03_dwn,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0117q3yz"
        }
      ]
    },
    {
      "question": "which olympic event was officially contested in the 1952 summer olympics,as well as other olympic games in stockholm?",
      "qid": "4300161010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Stockholm": "m.06mxs",
        "1952 Summer Olympics": "m.0lgxj"
      },
      "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.06mxs)) (JOIN olympics.olympic_event.olympic_games_contested m.0lgxj)))",
      "actions": [
        "get_relations(m.06mxs)",
        "get_neighbors(m.06mxs,olympics.olympic_host_city.olympics_hosted)",
        "get_relations(#0)",
        "get_neighbors(#0,olympics.olympic_games.events)",
        "get_relations(m.0lgxj)",
        "get_neighbors(m.0lgxj,olympics.olympic_games.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gnx9y",
          "entity_name": "Men's 300m Free Rifle, 3 Positions"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3cx",
          "entity_name": "Men's Épée individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3cl",
          "entity_name": "Men's Shot put"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk326",
          "entity_name": "Men's 200m breaststroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2pv",
          "entity_name": "Men's Javelin throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2hx",
          "entity_name": "Men's 1500m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2pc",
          "entity_name": "Men's Discus throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9ld0",
          "entity_name": "Men's 3 metre springboard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04f9ld6",
          "entity_name": "Women's 10 metre platform"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2c_",
          "entity_name": "Men's Gymnastics, individual all-round"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2cj",
          "entity_name": "Men's Long jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2f7",
          "entity_name": "Men's 50m pistol"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2gh",
          "entity_name": "Eventing, individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2hl",
          "entity_name": "Men's Athletics, 100m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2jp",
          "entity_name": "Men's Athletics, 5000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2lq",
          "entity_name": "Men's Foil individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2mz",
          "entity_name": "Men's Marathon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qm",
          "entity_name": "Men's Athletics, 400m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2qs",
          "entity_name": "Men's 100m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2rd",
          "entity_name": "Men's Pole vault"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2xq",
          "entity_name": "Men's Sabre individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2yb",
          "entity_name": "Jumping, individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk2yh",
          "entity_name": "Men's Athletics, 200m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk300",
          "entity_name": "Men's Hammer throw"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30h",
          "entity_name": "Men's Athletics, 110m hurdles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk30t",
          "entity_name": "Men's 400m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32_",
          "entity_name": "Men's Triple jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk32p",
          "entity_name": "Men's High jump"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk35z",
          "entity_name": "Men's Modern pentathlon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39q",
          "entity_name": "Women's 100m freestyle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk39w",
          "entity_name": "Men's Athletics, 10000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3b5",
          "entity_name": "Men's Athletics, 800m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3bh",
          "entity_name": "Men's 100m backstroke"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3d6",
          "entity_name": "Men's 50m rifle prone"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3dj",
          "entity_name": "Men's Decathlon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3l9",
          "entity_name": "Men's Single sculls"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04fk3n5",
          "entity_name": "Men's Athletics, 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07n8kbx",
          "entity_name": "Men's 10km Walk"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b6t4m",
          "entity_name": "Olympic trap"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0k1nqc0",
          "entity_name": "Individual Dressage"
        }
      ]
    },
    {
      "question": "When was the last time did the team with the fight song Seven Nation Army won the Superbowl?",
      "qid": "WebQTest-595_6b1c0c0fb24a34937f450fdc16a3387b_cwq",
      "source": "cwq",
      "entities": {
        "Superbowl": "m.06x5s",
        "Seven Nation Army": "m.07fpnw"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.fight_song m.07fpnw)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.07fpnw)",
        "get_neighbors(m.07fpnw,sports.fight_song.sports_team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0642vqv",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLVII"
        }
      ]
    },
    {
      "question": "the religion featuring euthymius the great's feast day, which is part of christian religion, has a founding leader who is named what?",
      "qid": "4302278013000_grailqa",
      "source": "grailqa",
      "entities": {
        "Euthymius the Great's Feast Day": "m.011ncb1h",
        "christian religion": "m.01lp8"
      },
      "s_expression": "(AND religion.founding_figure (JOIN (R religion.religion.founding_figures) (AND (JOIN (R time.holiday.featured_in_religions) m.011ncb1h) (JOIN religion.religion.is_part_of m.01lp8))))",
      "actions": [
        "get_relations(m.011ncb1h)",
        "get_neighbors(m.011ncb1h,time.holiday.featured_in_religions)",
        "get_relations(m.01lp8)",
        "get_neighbors(m.01lp8,religion.religion.includes)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,religion.religion.founding_figures)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.060nc",
          "entity_name": "Paul the Apostle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.071wp",
          "entity_name": "Saint Peter"
        }
      ]
    },
    {
      "question": "which school catagory do boston university and the publisher of stanford magazine fall under?",
      "qid": "4301751008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Stanford Magazine": "m.04dwn9z",
        "Boston University": "m.0gl5_"
      },
      "s_expression": "(AND education.school_category (AND (JOIN (R education.educational_institution.school_type) (JOIN (R education.school_magazine.school) m.04dwn9z)) (JOIN (R education.educational_institution.school_type) m.0gl5_)))",
      "actions": [
        "get_relations(m.04dwn9z)",
        "get_neighbors(m.04dwn9z,education.school_magazine.school)",
        "get_relations(#0)",
        "get_neighbors(#0,education.educational_institution.school_type)",
        "get_relations(m.0gl5_)",
        "get_neighbors(m.0gl5_,education.educational_institution.school_type)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05pcjw",
          "entity_name": "Private university"
        }
      ]
    },
    {
      "question": "norman i. adams introduced first which programming language which was influenced by another language ?",
      "qid": "4303199016000_grailqa",
      "source": "grailqa",
      "entities": {
        "Norman I. Adams": "m.01xrtqc"
      },
      "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.01xrtqc))) computer.programming_language.introduced)",
      "actions": [
        "get_relations(m.01xrtqc)",
        "get_neighbors(m.01xrtqc,computer.programming_language_developer.programming_languages_developed)",
        "get_relations(#0)",
        "get_neighbors(#0,computer.programming_language.influenced)",
        "get_attributes(#1)",
        "argmin(#1,computer.programming_language.introduced)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.042tk1",
          "entity_name": "Oaklisp"
        }
      ]
    },
    {
      "question": "motorola 68030 processors was used by how many macintosh se models?",
      "qid": "3205922000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Macintosh SE": "m.023tnt",
        "Motorola 68030": "m.0538r"
      },
      "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.023tnt) (JOIN computer.computer.processor m.0538r))))",
      "actions": [
        "get_relations(m.023tnt)",
        "get_neighbors(m.023tnt,computer.computer.includes_models)",
        "get_relations(m.0538r)",
        "get_neighbors(m.0538r,computer.computer_processor.used_in_computers)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "during the era of auguste herbin, which pieces of artwork were produced on a canvases medium?",
      "qid": "4301655006000_grailqa",
      "source": "grailqa",
      "entities": {
        "Auguste Herbin": "m.05rvdq",
        "canvases": "m.0jmpt"
      },
      "s_expression": "(AND visual_art.artwork (AND (JOIN visual_art.artwork.period_or_movement (JOIN visual_art.art_period_movement.associated_artists m.05rvdq)) (JOIN visual_art.artwork.support m.0jmpt)))",
      "actions": [
        "get_relations(m.05rvdq)",
        "get_neighbors(m.05rvdq,visual_art.visual_artist.associated_periods_or_movements)",
        "get_relations(#0)",
        "get_neighbors(#0,visual_art.art_period_movement.associated_artworks)",
        "get_relations(m.0jmpt)",
        "get_neighbors(m.0jmpt,visual_art.visual_art_support.artworks)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bvdlg_",
          "entity_name": "Flowering Peach Trees"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1ylhldg6s",
          "entity_name": "The Bathers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02z97km",
          "entity_name": "Music in the Tuileries"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075vb_b",
          "entity_name": "Train Tracks at the Saint-Lazare Station"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0btycrz",
          "entity_name": "The Floor Scrapers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0czqrv",
          "entity_name": "Dora Maar au Chat"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c1gw6f",
          "entity_name": "The Pink Peach Tree"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0glx3bd",
          "entity_name": "Blossoming Pear Tree"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gycf9m",
          "entity_name": "Woman Walking Under the Trees (L'Oliver)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gzrt29",
          "entity_name": "The Bathers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.043zkzc",
          "entity_name": "Las Meninas (after Velázquez)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09s423j",
          "entity_name": "The Sick-ward of the Hospital at Arles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g4sfsd",
          "entity_name": "Le Pont Neuf"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0449l3r",
          "entity_name": "Bather Seated in a Landscape"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07l9jn6",
          "entity_name": "L'Arlésienne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gv9r7",
          "entity_name": "The Card Players"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bmd5nh",
          "entity_name": "The Races at Longchamp"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bnqjhn",
          "entity_name": "View across the Bay"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.060gt8v",
          "entity_name": "The Rue Mosnier with Flags"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9_vc",
          "entity_name": "Stacks of Wheat (Sunset, Snow Effect)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0773srr",
          "entity_name": "Symphony in White, No.1: The White Girl"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hc9py6",
          "entity_name": "Camille Monet (1847–1879) on a Garden Bench"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.120wktcz",
          "entity_name": "Almond Blossoms"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09vb52v",
          "entity_name": "The Houses of Parliament, Sunset"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052k481",
          "entity_name": "Rainy Day, Fifth Avenue"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09s48n4",
          "entity_name": "Lady on a Tram Station"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yyvt4",
          "entity_name": "The Garden at Les Lauves"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9yj8",
          "entity_name": "Café Singer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9yz3",
          "entity_name": "Uncle and Niece (Henri Degas and His Niece Lucie Degas)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.046vv1k",
          "entity_name": "At the Races"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0645tyv",
          "entity_name": "Stage Rehearsal"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g6ytc5",
          "entity_name": "Sur la Plage"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0101hl57",
          "entity_name": "The ship's deck"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025dvlv",
          "entity_name": "London, the Parliament, Effects of Sun in the Fog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075dbn1",
          "entity_name": "Eugène Manet on the Isle of Wight"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075dgdn",
          "entity_name": "Eugène Manet and His Daughter at Bougival"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075dgf2",
          "entity_name": "Eugène Manet and His Daughter in the Garden"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07l9nhj",
          "entity_name": "Pork Butcher's Shop in Arles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.11cfvbmxd",
          "entity_name": "Fruit Bowl, Glass, and Apples"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0101hg7n",
          "entity_name": "Flowers in a Crystal Vase"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0101ht6p",
          "entity_name": "Bunch of asparagus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0105ww1y",
          "entity_name": "Flowers in a Vase"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01066wvm",
          "entity_name": "Still Life with Quinces"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0115nvrj",
          "entity_name": "Crab on its Back"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.011f8c7n",
          "entity_name": "Horse, Pipe, and Red Flower"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9ynp",
          "entity_name": "The Plate of Apples"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qb7s3",
          "entity_name": "Still Life with Apples and Grapes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qbbt_",
          "entity_name": "Still Life with Apples, Pears, Lemons and Grapes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qqw31",
          "entity_name": "Still Life with Apples"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0447zr0",
          "entity_name": "Vase with Three Sunflowers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0449pfq",
          "entity_name": "Still Life with a Bottle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.044dnb2",
          "entity_name": "Vase with Five Sunflowers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b9fkx",
          "entity_name": "Ginger Pot with Pomegranate and Pears"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05sq3lp",
          "entity_name": "Still Life with Fish"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bxzg63",
          "entity_name": "Young Spartans Exercising"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g_f4ty",
          "entity_name": "Skiffs on the Yerres"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l0jw",
          "entity_name": "Water Lilies"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063tq35",
          "entity_name": "Portrait of Armand Roulin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.066mwg1",
          "entity_name": "Laundresses at the Laïta River"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.066mzd_",
          "entity_name": "Paysage"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05fb8zp",
          "entity_name": "Garden at Sainte-Adresse"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.046vtw2",
          "entity_name": "The Boating Party"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09vbb60",
          "entity_name": "Girl in White"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g4t_b7",
          "entity_name": "The Garden of the Tuileries on a Winter Afternoon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07mpgkn",
          "entity_name": "Wheat Fields at Auvers Under Clouded Sky"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0chb3gy",
          "entity_name": "Boy with Skull"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l3dp",
          "entity_name": "Water Lilies"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.121vr3gq",
          "entity_name": "Portrait of Ambroise Vollard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04d01s9",
          "entity_name": "Woman with a Guitar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059h5l7",
          "entity_name": "Girl with a Watering Can"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l45c",
          "entity_name": "Wheatstack (Snow Effect, Overcast day)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qb7t1",
          "entity_name": "The Artist's House at Argenteuil"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025dvkv",
          "entity_name": "Water Lilies"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b7z9h",
          "entity_name": "Water Lilies and Japanese Bridge"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0cc6rn1",
          "entity_name": "Wheat Field with Cypresses"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04dmj9n",
          "entity_name": "Violin and Checkerboard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0101hnr3",
          "entity_name": "On the beach"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0105x1s7",
          "entity_name": "Landscape at Beaulieu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05t3cc",
          "entity_name": "Luncheon of the Boating Party"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0dd7th",
          "entity_name": "The portrait of Eugène Boch"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05c_js6",
          "entity_name": "The Monet Family in Their Garden at Argenteuil"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063tq2y",
          "entity_name": "Portrait of Armand Roulin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cz2qq",
          "entity_name": "The Lighthouse at Honfleur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01_x23",
          "entity_name": "Impression, Sunrise"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05btcdq",
          "entity_name": "Self-Portrait with a Straw Hat"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1218dxsg",
          "entity_name": "L'Arlésienne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qb0ph",
          "entity_name": "Equestrienne (At the Circus Fernando)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qbc1v",
          "entity_name": "Moulin de la Galette"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0529g10",
          "entity_name": "At the Rat Mort"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064jbky",
          "entity_name": "At the Moulin Rouge, The Dance"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hc9fxq",
          "entity_name": "Haystacks (Effect of Snow and Sun)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gw5k0",
          "entity_name": "The Card Players"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9yqz",
          "entity_name": "Waterloo Bridge, Sunlight Effect"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qb1_h",
          "entity_name": "Fishing in Spring, the Pont de Clichy (Asnires)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0645v0v",
          "entity_name": "Ballet Rehearsal"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0413691",
          "entity_name": "The Railway"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0479_q",
          "entity_name": "The Starry Night"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0_8f2w2",
          "entity_name": "La Parisienne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bvb9js",
          "entity_name": "Mountain Landscape behind the Saint Paul Hospital"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05t31rv",
          "entity_name": "Portrait of Dr. Gachet (Second Version)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.042zkxs",
          "entity_name": "The Road Menders"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05b8446",
          "entity_name": "Rouen Cathedral, West Facade, Sunlight"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075dgtn",
          "entity_name": "Julie Manet et son Lévrier Laerte"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0773wj5",
          "entity_name": "Molesey Weir – Morning"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05zjn50",
          "entity_name": "Vision After the Sermon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045bc5_",
          "entity_name": "Maison Maria with a View of Château-Noir"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06_v97l",
          "entity_name": "Pont Boieldieu in Rouen, Rainy Weather"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gybwhz",
          "entity_name": "Mademoiselle Ravoux"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04d7_sm",
          "entity_name": "L'Allee des Alyscamps"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l43m",
          "entity_name": "Grainstacks, White Frost Effect"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1yg4lyyv6",
          "entity_name": "La gare Saint-Lazare"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cz2zb",
          "entity_name": "Pont Neuf, Paris"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064j5_q",
          "entity_name": "Breton Women in the Meadow"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0d7q0p",
          "entity_name": "The Yellow House"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hc9s95",
          "entity_name": "Poppy Fields near Argenteuil"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0101nwb2",
          "entity_name": "The Seine at Bougival"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l3l5",
          "entity_name": "The Japanese Footbridge and the Water Lily Pool, Giverny"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hc9w4t",
          "entity_name": "Camille Monet (1847–1879) in the Garden at Argenteuil"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04dmh_z",
          "entity_name": "Harlequin with Guitar"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02qxry_",
          "entity_name": "Tiger in a Tropical Storm"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9_gr",
          "entity_name": "Mother and Child"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063jfqk",
          "entity_name": "The Four Trees"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0kbjd8h",
          "entity_name": "When will you marry?"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063yy9w",
          "entity_name": "The Funeral"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gybw9v",
          "entity_name": "Portrait of Adeline Ravoux"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qbc95",
          "entity_name": "Terrace and Observation Deck at the Moulin de Blute-Fin, Montmartre"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075vcd2",
          "entity_name": "La gare Saint-Lazare, Les signaux"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0288z6c",
          "entity_name": "The Weeping Woman"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063k__q",
          "entity_name": "Water Lilies"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bnqc0x",
          "entity_name": "Le Pont de Maincy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9z78",
          "entity_name": "Branch of the Seine Near Giverny (Mist) from the \"Mornings on the Seine\" series"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l44m",
          "entity_name": "Wheatstacks (End of Day, Autumn)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l0q3",
          "entity_name": "Nympheas"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0101hpk8",
          "entity_name": "The House at Rueil"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kl62g",
          "entity_name": "Wheat Stacks with Reaper"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063j6w7",
          "entity_name": "Noirmoutier"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l34t",
          "entity_name": "Water Lilies"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.046vwsp",
          "entity_name": "Idle Hours"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.066mwlg",
          "entity_name": "Two Breton Women under an Apple Tree in Flower"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.11b5v6k4fv",
          "entity_name": "L'Arlésienne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0100dh2v",
          "entity_name": "Women Walking on the Beach"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bvq_p",
          "entity_name": "And They Still Say Fish are Expensive!"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bvqm5",
          "entity_name": "Children on the Seashore"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064jf15",
          "entity_name": "Portrait of Paul Ranson Wearing Nabic Costume"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yytn4",
          "entity_name": "Mont Sainte-Victoire and the Viaduct of the Arc River Valley"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06l_bv",
          "entity_name": "Nude Descending a Staircase, No. 2"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0807ttn",
          "entity_name": "Scène d'été"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0s8xr_p",
          "entity_name": "The Muses"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04mv5fb",
          "entity_name": "Acacias in Spring"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g913m",
          "entity_name": "Les Arènes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svl7",
          "entity_name": "Twilight"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045sbdj",
          "entity_name": "Lady at the Tea Table"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wcwf",
          "entity_name": "La Berceuse (Augustine Roulin)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bdjcd",
          "entity_name": "Portrait of Dr. Gachet (First Version)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0773wn6",
          "entity_name": "Footbridge at Argenteuil"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9_0y",
          "entity_name": "Madame Cézanne in a Yellow Chair"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svkz",
          "entity_name": "The Basin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l319",
          "entity_name": "Water Lily Pond"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l42c",
          "entity_name": "Haystacks: Snow Effects"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0598k3n",
          "entity_name": "Rochefort's Escape"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0598g7f",
          "entity_name": "The Green Wave"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.1ym_l12sl",
          "entity_name": "Asparagus"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0105wy8x",
          "entity_name": "Chestnut Tree in Bloom"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0105x0c5",
          "entity_name": "Portrait of Mademoiselle Irene Cahen d `Anvers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079rl66",
          "entity_name": "Monet Painting in his Garden at Argenteuil"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g4xgqt",
          "entity_name": "The Quays at Rouen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079rkdy",
          "entity_name": "Houses of Parliament"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0105x47v",
          "entity_name": "Girl Reading"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063khk9",
          "entity_name": "Water Lilies"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0773w2q",
          "entity_name": "Bridge at Villeneuve-la-Garenne"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063jfrm",
          "entity_name": "Poplars (Wind effect)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09s42qf",
          "entity_name": "Bedroom in Arles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wcxf",
          "entity_name": "La Berceuse (Augustine Roulin)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gj5qf4",
          "entity_name": "Two Tahitian Women"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l375",
          "entity_name": "The Water Lily Pond"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svkw",
          "entity_name": "Last Light"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.01066wb_",
          "entity_name": "The Harvest"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0jwvr2w",
          "entity_name": "In the Conservatory"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svkl",
          "entity_name": "Autumn's Approach"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gzrvsd",
          "entity_name": "The Bathers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.121lswy5",
          "entity_name": "The Cradle"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045s7b7",
          "entity_name": "Young Woman Sewing in a Garden"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045tl_t",
          "entity_name": "The Swing"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05hyxb",
          "entity_name": "Bal du moulin de la Galette"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06ffxn",
          "entity_name": "The Church at Auvers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l44w",
          "entity_name": "Grainstack (Sunset)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03wmxb3",
          "entity_name": "Entrance to the Public Gardens in Arles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.010675v2",
          "entity_name": "Road Along the Seine near Asnieres"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0101nttk",
          "entity_name": "Automne, Peupliers, Eragny"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09tz78s",
          "entity_name": "The Mother and Sister of the Artist"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qb0d3",
          "entity_name": "Self-portrait"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0100_wg7",
          "entity_name": "The Saint-Sever Bridge, Rouen: Mist"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gy2rtp",
          "entity_name": "Landscape with Figures"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0514lmq",
          "entity_name": "Bathers at Asnières"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l42m",
          "entity_name": "Haystacks (Midday)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079rj_l",
          "entity_name": "The Railroad Bridge Viewed from the Port"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svl4",
          "entity_name": "Bluff's Ridge"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hgz196",
          "entity_name": "\"Les Vessenots\" in Auvers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wfks",
          "entity_name": "Portrait of Camille Roulin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hc9wdz",
          "entity_name": "Morning on the Seine near Giverny"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bvbh4q",
          "entity_name": "The Agony in the Garden"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075vbvt",
          "entity_name": "Gare Saint-Lazare, the Western Region Goods Sheds"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05cz2q1",
          "entity_name": "Woman with a Parasol - Madame Monet and Her Son"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0635yq9",
          "entity_name": "Mont Sainte-Victoire and Chateau Noir"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0120x0m4",
          "entity_name": "Berthe Morisot with a Bouquet of Violets"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065ww11",
          "entity_name": "The Bridge over the Allier at Pont-du-Chateau in Winter"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.065wy1d",
          "entity_name": "Tugboats to Rouen"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yytpq",
          "entity_name": "Montagne Sainte-Victoire"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l423",
          "entity_name": "Haystacks at the End of Summer, Morning Effect"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0rysyb4",
          "entity_name": "The Sea at Les Saintes-Maries-de-la-Mer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l42w",
          "entity_name": "Wheatstack"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064j1vl",
          "entity_name": "Bretons in the Forest of Huelgoat"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063j2n9",
          "entity_name": "Portrait of the Postman Joseph Roulin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09tzb_0",
          "entity_name": "Grain Field"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qb6xk",
          "entity_name": "Houses of Parliament, London"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.121764px",
          "entity_name": "Rouen Cathedral, Full Sunlight"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063ffxg",
          "entity_name": "The Croquet Game"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063pwlk",
          "entity_name": "Grainstack at Giverny"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064j1rr",
          "entity_name": "Landscape at Le Pouldu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0100qk67",
          "entity_name": "Snow At Argenteuil"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0ddbl5r",
          "entity_name": "A Meadow in the Mountains: Le Mas de Saint-Paul"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9zyt",
          "entity_name": "Water Lily Pond"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04w138",
          "entity_name": "Cafe Terrace at Night"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gy6t7f",
          "entity_name": "View of the Domaine Saint-Joseph"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kl64y",
          "entity_name": "Vineyards with a View of Auvers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0hc9x6h",
          "entity_name": "The Bodmer Oak, Fontainebleau Forest"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.066mzdm",
          "entity_name": "La Grammaire"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0105x3j1",
          "entity_name": "Fog on Guernsey"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064j1lj",
          "entity_name": "Girl from Savoy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.120jw__9",
          "entity_name": "Soap Bubbles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05bvhpf",
          "entity_name": "Self Portrait with Skull-Cap"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.011f5hz8",
          "entity_name": "test 2"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g4xhlj",
          "entity_name": "The Little Country Maid"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05zj4l",
          "entity_name": "Les Demoiselles d'Avignon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l13l",
          "entity_name": "Three Trees in Grey Weather"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gw8z82",
          "entity_name": "Le Moulin de la Galette"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059h4sq",
          "entity_name": "Sunset at Sea"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gyc6f8",
          "entity_name": "The Dance Hall in Arles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0_g8g96",
          "entity_name": "La Grenouillère"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0101nvnr",
          "entity_name": "Sunset at Eragny"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079rk47",
          "entity_name": "La Pointe de la Hève at Low Tide"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9zqz",
          "entity_name": "On a Balcony"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064j1gs",
          "entity_name": "Farmhouse at Le Pouldu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.079rkz6",
          "entity_name": "Parliament, Effect of Fog"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.121_bx11",
          "entity_name": "Le Déjeuner sur l'Herbe"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g3vhw",
          "entity_name": "The Three Dancers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075w3rc",
          "entity_name": "The Red Roofs, a Corner of a Village, winter effect"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yyf48",
          "entity_name": "Portrait of Mlle Yvonne Landsberg"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0101hhjt",
          "entity_name": "Claude Monet in his Floating Studio"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.075vbf7",
          "entity_name": "Gare Saint-Lazare: Arrival of a Train"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0598kfc",
          "entity_name": "Boating"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.046vtvq",
          "entity_name": "The Cup of Tea"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07l9nbk",
          "entity_name": "Spring in Arles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yyv84",
          "entity_name": "Mont Sainte-Victoire Seen from the Bibemus Quarry"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03yyv7z",
          "entity_name": "Mont Sainte-Victoire Seen from Les Lauves"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03wbnny",
          "entity_name": "The Large Bathers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l43c",
          "entity_name": "Wheatstack (Thaw, Sunset)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064jd5h",
          "entity_name": "Vines"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gz60h2",
          "entity_name": "Mountains at Saint-Remy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gwbbq",
          "entity_name": "The Card Players"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07622gx",
          "entity_name": "Rue Montargueil with Flags"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g4xjy0",
          "entity_name": "White Frost"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qb2mw",
          "entity_name": "Arrival of the Normandy Train, Gare Saint-Lazare"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g_4pzl",
          "entity_name": "Bather and the Rocks"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0449pg2",
          "entity_name": "View of Château-Noir"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09tz79w",
          "entity_name": "In the Dining Room"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gw29d",
          "entity_name": "The Card Players"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064jd53",
          "entity_name": "Digitales"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07gvnfc",
          "entity_name": "The Card Players (5th version)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l43w",
          "entity_name": "Wheatstack (Sun in the Mist)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03nvlqz",
          "entity_name": "Mont Sainte-Victoire seen from Bellevue"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l44c",
          "entity_name": "Grainstacks, Snow Effect"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0q3zm38",
          "entity_name": "L'Oiseau bleu"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0105x55t",
          "entity_name": "Woman with a Parasol in a Garden"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gw907v",
          "entity_name": "Le Moulin de la Galette"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03q9yd1",
          "entity_name": "The Bedroom"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bvb8x0",
          "entity_name": "Landscape from Pont-Aven, Brittany"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.025dvd7",
          "entity_name": "Portrait of Picasso"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qb804",
          "entity_name": "Rabbit Warren at Pontoise, Snow"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063l433",
          "entity_name": "Grainstack in Sunshine"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gkrsx",
          "entity_name": "The Painter of Sunflowers"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09kl9py",
          "entity_name": "Self-Portrait with Hat"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.059h4sm",
          "entity_name": "The Canoeist's Luncheon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063ffm0",
          "entity_name": "The Funeral"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bwh71z",
          "entity_name": "Nude, Green Leaves and Bust"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02vyvyc",
          "entity_name": "Paris Street; Rainy Day"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05nbspq",
          "entity_name": "Oarsmen Rowing on the Yerres"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.062s1p9",
          "entity_name": "Gondola in Venice"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gyc83g",
          "entity_name": "Couple Walking in the Trees"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0b6z0dn",
          "entity_name": "Rose Trellises in Giverny"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.05ch12t",
          "entity_name": "Farmhouse in Provence"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09tzhb8",
          "entity_name": "Chasing Butterflies"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0598kd_",
          "entity_name": "Plum Brandy"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wdlm",
          "entity_name": "Portrait of Madame Augustine Roulin"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.045t3vx",
          "entity_name": "Flood at Port-Marly"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.064jdky",
          "entity_name": "Nabis Landscape"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0773wwv",
          "entity_name": "Under the Bridge at Hampton Court"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "g.12396ws6",
          "entity_name": "Evening, Honfleur"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c1r70t",
          "entity_name": "Portrait of Ambroise Vollard"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g4tzv4",
          "entity_name": "The Garden of the Tuileries on a Winter Afternoon"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0105wzcd",
          "entity_name": "The Skiff"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.03qbcd4",
          "entity_name": "Day of the God (Mahana no Atua)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.052cyqr",
          "entity_name": "The Tuileries Gardens, Afternoon, Sun"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bwgc7q",
          "entity_name": "Self-Portrait with Palette"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0449zrp",
          "entity_name": "The Barefoot Girl"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0g4xf_c",
          "entity_name": "The Road to Versailles at Louveciennes"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0105x2n_",
          "entity_name": "The Piazza San Marco"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.051svl1",
          "entity_name": "Grey's Creek"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0598kdt",
          "entity_name": "Portrait of Stéphane Mallarmé"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wcw2",
          "entity_name": "La Berceuse (Augustine Roulin)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.09v9x3l",
          "entity_name": "The Fifer"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wfbp",
          "entity_name": "Schoolboy (Camille Roulin)"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0n5vvp9",
          "entity_name": "The Cafe-Concert"
        }
      ]
    },
    {
      "question": "which programming language paradigm do simula and another maclisp influenced programming language use?",
      "qid": "4300798011000_grailqa",
      "source": "grailqa",
      "entities": {
        "Simula": "m.079l6",
        "Maclisp": "m.0cvc9"
      },
      "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.079l6) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.0cvc9))))",
      "actions": [
        "get_relations(m.079l6)",
        "get_neighbors(m.079l6,computer.programming_language.language_paradigms)",
        "get_relations(m.0cvc9)",
        "get_neighbors(m.0cvc9,computer.programming_language.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.programming_language.language_paradigms)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.05prj",
          "entity_name": "Object-oriented programming"
        }
      ]
    },
    {
      "question": "ricotta has the same texture as which domestic sheep milk cheese?",
      "qid": "4302129002000_grailqa",
      "source": "grailqa",
      "entities": {
        "domestic sheep": "m.07bgp",
        "Ricotta": "m.034n3h"
      },
      "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.07bgp) (JOIN (R food.cheese_texture.cheeses) (JOIN food.cheese_texture.cheeses m.034n3h))))",
      "actions": [
        "get_relations(m.07bgp)",
        "get_neighbors(m.07bgp,food.cheese_milk_source.cheeses)",
        "get_relations(m.034n3h)",
        "get_neighbors(m.034n3h,food.cheese.texture)",
        "get_relations(#1)",
        "get_neighbors(#1,food.cheese_texture.cheeses)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.016kgn",
          "entity_name": "Halloumi"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.02h88_s",
          "entity_name": "Alderbrook"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0c4q2",
          "entity_name": "Casu marzu"
        }
      ]
    },
    {
      "question": "What museum which opened earliest is there to see in downtown Chicago?",
      "qid": "WebQTrn-825_a8eb55ad9a60c4c39034f65dee542e99_cwq",
      "source": "cwq",
      "entities": {
        "Chicago": "m.01_d4"
      },
      "s_expression": "(ARGMIN (AND (JOIN (R travel.travel_destination.tourist_attractions) m.01_d4) (JOIN location.location.containedby m.01_d4)) architecture.museum.established)",
      "actions": [
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,travel.travel_destination.tourist_attractions)",
        "get_relations(m.01_d4)",
        "get_neighbors(m.01_d4,location.location.contains)",
        "intersection(#0,#1)",
        "get_attributes(#2)",
        "argmin(#2,architecture.museum.established)"
      ],
      "answer": [
        {
          "answer_argument": "m.027hqc_",
          "answer_type": "Entity",
          "entity_name": "Art Institute of Chicago"
        }
      ]
    },
    {
      "question": "What time zone is shared by New York and locations near Toronto Pearson International Airport?",
      "qid": "WebQTrn-326_5411ee5b895e479b24ac562f2ac9b3f3_cwq",
      "source": "cwq",
      "entities": {
        "New York": "m.059rby",
        "Toronto Pearson International Airport": "m.06k9l7"
      },
      "s_expression": "(AND (JOIN (R location.location.time_zones) m.059rby) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.06k9l7)))",
      "actions": [
        "get_relations(m.059rby)",
        "get_neighbors(m.059rby,location.location.time_zones)",
        "get_relations(m.06k9l7)",
        "get_neighbors(m.06k9l7,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02hcv8",
          "answer_type": "Entity",
          "entity_name": "Eastern Time Zone"
        }
      ]
    },
    {
      "question": "which military units participated in the battle of gettysburg are from the same place as 1st louisiana native guard?",
      "qid": "250000400_graphquestions",
      "source": "graphquestions",
      "entities": {
        "Battle of Gettysburg": "m.01jnm",
        "1st Louisiana Native Guard": "m.0hr6dl9"
      },
      "s_expression": "(AND base.americancivilwar.military_unit (AND (JOIN military.military_unit.place_of_origin (JOIN (R military.military_unit.place_of_origin) m.0hr6dl9)) (JOIN base.americancivilwar.military_unit.conflicts_participated_in m.01jnm)))",
      "actions": [
        "get_relations(m.0hr6dl9)",
        "get_neighbors(m.0hr6dl9,military.military_unit.place_of_origin)",
        "get_relations(#0)",
        "get_neighbors(#0,military.military_unit_place_of_origin.military_units)",
        "get_relations(m.01jnm)",
        "get_neighbors(m.01jnm,base.americancivilwar.battle.military_units_involved_in_this_conflict)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04gjww9",
          "entity_name": "10th Louisiana Infantry"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l684",
          "entity_name": "15th Louisiana Infantry Regiment"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0j2l66_",
          "entity_name": "14th Louisiana Infantry Regiment"
        }
      ]
    },
    {
      "question": "When was the last Superbowl won by the team owned by Steve Bisciotti?",
      "qid": "WebQTest-595_8d86dc5e03446f0e50fd69bc06ae0658_cwq",
      "source": "cwq",
      "entities": {
        "superbowl": "m.06x5s",
        "Steve Bisciotti": "m.06x8mf"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.06x8mf)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.06x8mf)",
        "get_neighbors(m.06x8mf,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0642vqv",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLVII"
        }
      ]
    },
    {
      "question": "Who is the blogger that created Google?",
      "qid": "WebQTrn-2393_002c3db70dc70b6a244164448a40734e_cwq",
      "source": "cwq",
      "entities": {
        "google": "m.0387r",
        "Blogger": "m.01scs3"
      },
      "s_expression": "(AND (JOIN (R law.invention.inventor) m.0387r) (JOIN influence.influence_node.influenced (JOIN people.person.profession m.01scs3)))",
      "actions": [
        "get_relations(m.0387r)",
        "get_neighbors(m.0387r,law.invention.inventor)",
        "get_relations(m.01scs3)",
        "get_neighbors(m.01scs3,people.profession.people_with_this_profession)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0gjpq",
          "answer_type": "Entity",
          "entity_name": "Larry Page"
        }
      ]
    },
    {
      "question": "When did the champion of 1976 UEFA Cup Final win the champions leagues?",
      "qid": "WebQTest-608_8f06a3b40c24771e3d21ff3fa8b1ac04_cwq",
      "source": "cwq",
      "entities": {
        "Football League Cup": "m.012dbw",
        "1976 UEFA Cup Final": "m.03nr255"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.03nr255)) (JOIN sports.sports_championship_event.championship m.012dbw)) time.event.end_date)",
      "actions": [
        "get_relations(m.03nr255)",
        "get_neighbors(m.03nr255,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.012dbw)",
        "get_neighbors(m.012dbw,sports.sports_championship.events)",
        "intersection(#1,#2)",
        "get_attributes(#3)",
        "argmax(#3,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0h_b67k",
          "answer_type": "Entity",
          "entity_name": "2012 Football League Cup Final"
        }
      ]
    },
    {
      "question": "Which timezone is the San Francisco airport in?",
      "qid": "WebQTest-1802_18a4999497ccd2fae27570283a228147_cwq",
      "source": "cwq",
      "entities": {
        "United States of America": "m.09c7w0",
        "san francisco airport": "m.01l4xk"
      },
      "s_expression": "(AND (JOIN (R location.location.time_zones) m.09c7w0) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.01l4xk)))",
      "actions": [
        "get_relations(m.09c7w0)",
        "get_neighbors(m.09c7w0,location.location.time_zones)",
        "get_relations(m.01l4xk)",
        "get_neighbors(m.01l4xk,aviation.airport.serves)",
        "get_relations(#1)",
        "get_neighbors(#1,location.location.time_zones)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02lcqs"
        }
      ]
    },
    {
      "question": "in the 1952 winter olympics and other olympic games in chamonix mont blanc, which olympic event was officially contested?",
      "qid": "4300161002000_grailqa",
      "source": "grailqa",
      "entities": {
        "chamonix mont blanc": "m.0ps3g",
        "1952 Winter Olympics": "m.0124ld"
      },
      "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.0ps3g)) (JOIN olympics.olympic_event.olympic_games_contested m.0124ld)))",
      "actions": [
        "get_relations(m.0ps3g)",
        "get_neighbors(m.0ps3g,olympics.olympic_host_city.olympics_hosted)",
        "get_relations(#0)",
        "get_neighbors(#0,olympics.olympic_games.events)",
        "get_relations(m.0124ld)",
        "get_neighbors(m.0124ld,olympics.olympic_games.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.07nxf_t",
          "entity_name": "Men's Cross-country, 50km"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqcn",
          "entity_name": "Women's Singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqdl",
          "entity_name": "Men's 500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.063wqf_",
          "entity_name": "Men's 10000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zh_xm",
          "entity_name": "Men's 1500m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.06zhzln",
          "entity_name": "Men's 5000m"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07nxg0q",
          "entity_name": "Men's Nordic Combined, Individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07rcjwr",
          "entity_name": "Men's Large hill individual"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bj4fg7",
          "entity_name": "Men's singles"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.07nxf_c",
          "entity_name": "Men's Cross-Country, 18km"
        }
      ]
    },
    {
      "question": "how many programming language paradigms are there for beanshell and bigloo?",
      "qid": "3205793004000_grailqa",
      "source": "grailqa",
      "entities": {
        "BeanShell": "m.05bw2b",
        "Bigloo": "m.0c00_c"
      },
      "s_expression": "(COUNT (AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.05bw2b) (JOIN computer.programming_language_paradigm.languages m.0c00_c))))",
      "actions": [
        "get_relations(m.05bw2b)",
        "get_neighbors(m.05bw2b,computer.programming_language.language_paradigms)",
        "get_relations(m.0c00_c)",
        "get_neighbors(m.0c00_c,computer.programming_language.language_paradigms)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "the nissan nx in the model of 2014 ford focus is of what automotive class?",
      "qid": "4300308000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Nissan NX": "m.09c2rm",
        "2014 Ford Focus": "m.0_v8m4q"
      },
      "s_expression": "(AND automotive.automotive_class (AND (JOIN (R automotive.model.automotive_class) m.09c2rm) (JOIN automotive.automotive_class.examples (JOIN automotive.model.model_years m.0_v8m4q))))",
      "actions": [
        "get_relations(m.09c2rm)",
        "get_neighbors(m.09c2rm,automotive.model.automotive_class)",
        "get_relations(m.0_v8m4q)",
        "get_neighbors(m.0_v8m4q,automotive.model_year.model)",
        "get_relations(#1)",
        "get_neighbors(#1,automotive.model.automotive_class)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01cmcs",
          "entity_name": "Hatchback"
        }
      ]
    },
    {
      "question": "what's the name of the nebula that's farthest away from us?",
      "qid": "4303393005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Nebula": "m.05fny"
      },
      "s_expression": "(ARGMAX (AND astronomy.celestial_object (JOIN (R astronomy.celestial_object_category.objects) (JOIN (R astronomy.celestial_object_category.subcategories) m.05fny))) astronomy.celestial_object.cosmological_distance)",
      "actions": [
        "get_relations(m.05fny)",
        "get_neighbors(m.05fny,astronomy.celestial_object_category.subcategories)",
        "get_relations(#0)",
        "get_neighbors(#0,astronomy.celestial_object_category.objects)",
        "get_attributes(#1)",
        "argmax(#1,astronomy.celestial_object.cosmological_distance)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0l6tq",
          "entity_name": "Crab Nebula"
        }
      ]
    },
    {
      "question": "When did the sports team owned by Edward P. Roski most recently win the Stanley Cup?",
      "qid": "WebQTrn-209_a7f0de28d079427618de97f04e86483c_cwq",
      "source": "cwq",
      "entities": {
        "Edward P. Roski": "m.0bydfb"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.0bydfb)) time.event.end_date)",
      "actions": [
        "get_relations(m.0bydfb)",
        "get_neighbors(m.0bydfb,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.010fdzhp",
          "answer_type": "Entity",
          "entity_name": "2014 Stanley Cup Finals"
        }
      ]
    },
    {
      "question": "what other visual art forms were made by jean goujon besides outdoor sculpture?",
      "qid": "4302283012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Jean Goujon": "m.07fy41",
        "outdoor sculpture": "m.06msq"
      },
      "s_expression": "(AND visual_art.visual_art_form (JOIN (R visual_art.artwork.art_form) (AND (JOIN visual_art.artwork.artist m.07fy41) (JOIN visual_art.artwork.art_form m.06msq))))",
      "actions": [
        "get_relations(m.07fy41)",
        "get_neighbors(m.07fy41,visual_art.visual_artist.artworks)",
        "get_relations(m.06msq)",
        "get_neighbors(m.06msq,visual_art.visual_art_form.artworks)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,visual_art.artwork.art_form)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01pkk0",
          "entity_name": "Bas-relief"
        }
      ]
    },
    {
      "question": "when was the last time the new england patriots won the superbowl",
      "qid": "WebQTrn-1930_webqsp",
      "source": "webqsp",
      "entities": {
        "new england patriots": "m.05g3b",
        "superbowl": "m.06x5s"
      },
      "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) m.05g3b) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
      "actions": [
        "get_relations(m.05g3b)",
        "get_neighbors(m.05g3b,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#0,#1)",
        "get_attributes(#2)",
        "argmax(#2,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.032tkh",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXXIX"
        }
      ]
    },
    {
      "question": "the serbia has how many breeds of dogs that has the same temperament as the smooth fox terrier?",
      "qid": "4303460014000_grailqa",
      "source": "grailqa",
      "entities": {
        "Smooth Fox Terrier": "m.03_vlr",
        "Serbia": "m.077qn"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.077qn)) (JOIN (R biology.animal_breed.temperament) m.03_vlr))))",
      "actions": [
        "get_relations(m.077qn)",
        "get_neighbors(m.077qn,biology.breed_origin.breeds_originating_here)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.03_vlr)",
        "get_neighbors(m.03_vlr,biology.animal_breed.temperament)",
        "intersection(#1,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what is the name of the religion that is part of the restoration and has same practices with catholic faith?",
      "qid": "4300140010000_grailqa",
      "source": "grailqa",
      "entities": {
        "The Restoration": "m.0dl7db1",
        "catholic faith": "m.0c8wxp"
      },
      "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.0c8wxp)) (JOIN religion.religion.is_part_of m.0dl7db1)))",
      "actions": [
        "get_relations(m.0c8wxp)",
        "get_neighbors(m.0c8wxp,religion.religion.practices)",
        "get_relations(#0)",
        "get_neighbors(#0,religion.religious_practice.practice_of)",
        "get_relations(m.0dl7db1)",
        "get_neighbors(m.0dl7db1,religion.religion.includes)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.058x5",
          "entity_name": "Mormonism"
        }
      ]
    },
    {
      "question": "What type of governmental system does Saudi Arabia have?",
      "qid": "WebQTrn-474_76a252330256b16c01d97d47ba4bdf95_cwq",
      "source": "cwq",
      "entities": {
        "Saudi Arabia": "m.01z215",
        "Central Europe": "m.01lkr"
      },
      "s_expression": "(AND (JOIN (R location.country.form_of_government) m.01z215) (JOIN government.form_of_government.countries (JOIN location.location.containedby m.01lkr)))",
      "actions": [
        "get_relations(m.01z215)",
        "get_neighbors(m.01z215,location.country.form_of_government)",
        "get_relations(m.01lkr)",
        "get_neighbors(m.01lkr,location.location.contains)",
        "get_relations(#1)",
        "get_neighbors(#1,location.country.form_of_government)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0hqc2",
          "answer_type": "Entity",
          "entity_name": "Absolute monarchy"
        }
      ]
    },
    {
      "question": "what temperament does the breed of felicity's diamond jim and basenji share?",
      "qid": "4300459008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Felicity's Diamond Jim": "m.02qkhwh",
        "Basenji": "m.01j0x"
      },
      "s_expression": "(AND biology.breed_temperament (AND (JOIN (R biology.animal_breed.temperament) (JOIN (R biology.pedigreed_animal.breed) m.02qkhwh)) (JOIN (R biology.animal_breed.temperament) m.01j0x)))",
      "actions": [
        "get_relations(m.02qkhwh)",
        "get_neighbors(m.02qkhwh,biology.pedigreed_animal.breed)",
        "get_relations(#0)",
        "get_neighbors(#0,biology.animal_breed.temperament)",
        "get_relations(m.01j0x)",
        "get_neighbors(m.01j0x,biology.animal_breed.temperament)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kpjnr",
          "entity_name": "Affectionate"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kqp3l",
          "entity_name": "Alert"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.04kpkld",
          "entity_name": "Intelligent"
        }
      ]
    },
    {
      "question": "which cloud, of the family b (mid-level) cloud family, has the highest lowest altitude?",
      "qid": "4303227000000_grailqa",
      "source": "grailqa",
      "entities": {
        "Family B (mid-level)": "m.01xtcg8"
      },
      "s_expression": "(ARGMAX (AND meteorology.cloud (JOIN (R meteorology.cloud.cloud_family) (JOIN meteorology.cloud.classification m.01xtcg8))) meteorology.cloud.minimum_altitude)",
      "actions": [
        "get_relations(m.01xtcg8)",
        "get_neighbors(m.01xtcg8,meteorology.cloud_classification.clouds)",
        "get_relations(#0)",
        "get_neighbors(#0,meteorology.cloud.cloud_family)",
        "get_attributes(#1)",
        "argmax(#1,meteorology.cloud.minimum_altitude)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.016839",
          "entity_name": "Altocumulus"
        }
      ]
    },
    {
      "question": "the social christian conservative party and canadian federal election, 2008 have what political ideology?",
      "qid": "4302370015000_grailqa",
      "source": "grailqa",
      "entities": {
        "Canadian federal election, 2008": "m.0b1_7g",
        "Social Christian Conservative Party": "m.0cnz3hr"
      },
      "s_expression": "(AND government.political_ideology (AND (JOIN government.political_ideology.political_parties (JOIN (R government.parliamentary_election.government_formed_by) m.0b1_7g)) (JOIN (R government.political_party.ideology) m.0cnz3hr)))",
      "actions": [
        "get_relations(m.0b1_7g)",
        "get_neighbors(m.0b1_7g,government.parliamentary_election.government_formed_by)",
        "get_relations(#0)",
        "get_neighbors(#0,government.political_party.ideology)",
        "get_relations(m.0cnz3hr)",
        "get_neighbors(m.0cnz3hr,government.political_party.ideology)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.01yqp",
          "entity_name": "Conservatism"
        }
      ]
    },
    {
      "question": "When was the last time the sports team owned by Mark Davis win a championship?",
      "qid": "WebQTrn-3176_ca40169567852c83d8beb13835e326f3_cwq",
      "source": "cwq",
      "entities": {
        "Mark Davis": "m.0hzm4gd"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.0hzm4gd)) time.event.end_date)",
      "actions": [
        "get_relations(m.0hzm4gd)",
        "get_neighbors(m.0hzm4gd,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmax(#1,time.event.end_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.0_gt_px",
          "answer_type": "Entity",
          "entity_name": "2003 AFC Championship Game"
        }
      ]
    },
    {
      "question": "how many temperaments do american english coonhound and norwegian buhund share?",
      "qid": "3205485003000_grailqa",
      "source": "grailqa",
      "entities": {
        "American English Coonhound": "m.02ppbk1",
        "Norwegian Buhund": "m.0632tn"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds m.02ppbk1) (JOIN (R biology.animal_breed.temperament) m.0632tn))))",
      "actions": [
        "get_relations(m.02ppbk1)",
        "get_neighbors(m.02ppbk1,biology.animal_breed.temperament)",
        "get_relations(m.0632tn)",
        "get_neighbors(m.0632tn,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "What children's books were written by the authoer of  Gregor the Overlander (Underland Chronicles (Sagebrush)?",
      "qid": "WebQTrn-3364_218697b7ef76c57b5fdd76039ba7e55b_cwq",
      "source": "cwq",
      "entities": {
        "Children's literature": "m.0dwly",
        "gregor the overlander (underland chronicles (sagebrush)": "m.04v_xsg"
      },
      "s_expression": "(AND (JOIN (R book.author.works_written) (JOIN book.author.book_editions_published m.04v_xsg)) (JOIN book.book.genre m.0dwly))",
      "actions": [
        "get_relations(m.04v_xsg)",
        "get_neighbors(m.04v_xsg,book.book_edition.author_editor)",
        "get_relations(#0)",
        "get_neighbors(#0,book.author.works_written)",
        "get_relations(m.0dwly)",
        "get_neighbors(m.0dwly,media_common.literary_genre.books_in_this_genre)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.04t448_",
          "answer_type": "Entity",
          "entity_name": "The Underland Chronicles Book Three"
        },
        {
          "answer_argument": "m.04t448h",
          "answer_type": "Entity",
          "entity_name": "Gregor and the Code of Claw"
        },
        {
          "answer_argument": "m.04t44bh",
          "answer_type": "Entity",
          "entity_name": "FIRE PROOF"
        },
        {
          "answer_argument": "m.0dsx8l",
          "answer_type": "Entity",
          "entity_name": "Gregor and the Prophecy of Bane"
        }
      ]
    },
    {
      "question": "Which Super Bowls were won by the winner of the 1934 NFL Championship Game?",
      "qid": "WebQTrn-3290_4e074d51c67d5358b05e462d1f48f3e5_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "1934 NFL Championship Game": "m.07yh_r"
      },
      "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.07yh_r)) (JOIN sports.sports_championship_event.championship m.06x5s))",
      "actions": [
        "get_relations(m.07yh_r)",
        "get_neighbors(m.07yh_r,sports.sports_championship_event.champion)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.043t_rh",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLVI"
        },
        {
          "answer_argument": "m.04myq1",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLII"
        },
        {
          "answer_argument": "m.076sw",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXI"
        },
        {
          "answer_argument": "m.076v7",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXV"
        }
      ]
    },
    {
      "question": "find all quotations from jihan, froth daughter that are addressed to whom \"to the death with honor, shoulder to shoulder, and no one gets closer to a stepson than his partner.\" was addressed to",
      "qid": "4302343010000_grailqa",
      "source": "grailqa",
      "entities": {
        "Jihan, Froth Daughter": "m.0bxttn0",
        "\"To the death with honor, shoulder to shoulder, and no one gets closer to a Stepson than his partner.\"": "m.0c_bvz2"
      },
      "s_expression": "(AND media_common.quotation_addressee (AND (JOIN media_common.quotation_addressee.quotations (JOIN (R fictional_universe.fictional_character.quotations) m.0bxttn0)) (JOIN media_common.quotation_addressee.quotations m.0c_bvz2)))",
      "actions": [
        "get_relations(m.0bxttn0)",
        "get_neighbors(m.0bxttn0,fictional_universe.fictional_character.quotations)",
        "get_relations(#0)",
        "get_neighbors(#0,media_common.quotation.addressee)",
        "get_relations(m.0c_bvz2)",
        "get_neighbors(m.0c_bvz2,media_common.quotation.addressee)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bxj80p",
          "entity_name": "Tempus"
        }
      ]
    },
    {
      "question": "how many breed temperaments do irish setter and border terrier share in common?",
      "qid": "3205485005000_grailqa",
      "source": "grailqa",
      "entities": {
        "Irish Setter": "m.039rzl",
        "Border Terrier": "m.0353h4"
      },
      "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds m.039rzl) (JOIN (R biology.animal_breed.temperament) m.0353h4))))",
      "actions": [
        "get_relations(m.039rzl)",
        "get_neighbors(m.039rzl,biology.animal_breed.temperament)",
        "get_relations(m.0353h4)",
        "get_neighbors(m.0353h4,biology.animal_breed.temperament)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "which version that was released in united states supports xbox360?",
      "qid": "4301746003000_grailqa",
      "source": "grailqa",
      "entities": {
        "united states": "m.09c7w0",
        "xbox360": "m.02plp2"
      },
      "s_expression": "(AND cvg.game_version (AND (JOIN (R cvg.computer_game_region.versions_released_in_this_region) m.09c7w0) (JOIN (R computer.computer_peripheral.supporting_game_versions) (JOIN (R business.brand.products) m.02plp2))))",
      "actions": [
        "get_relations(m.09c7w0)",
        "get_neighbors(m.09c7w0,cvg.computer_game_region.versions_released_in_this_region)",
        "get_relations(m.02plp2)",
        "get_neighbors(m.02plp2,business.brand.products)",
        "get_relations(#1)",
        "get_neighbors(#1,computer.computer_peripheral.supporting_game_versions)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0gm9fh4",
          "entity_name": "Virtua Tennis 4"
        }
      ]
    },
    {
      "question": "what number of contents about interview tips are produced by the same producer as npr all things considered?",
      "qid": "4303008007000_grailqa",
      "source": "grailqa",
      "entities": {
        "interview tips": "m.01jdpf",
        "npr all things considered": "m.01ysm8"
      },
      "s_expression": "(COUNT (AND broadcast.content (AND (JOIN (R broadcast.genre.content) m.01jdpf) (JOIN (R broadcast.producer.produces) (JOIN broadcast.producer.produces m.01ysm8)))))",
      "actions": [
        "get_relations(m.01jdpf)",
        "get_neighbors(m.01jdpf,broadcast.genre.content)",
        "get_relations(m.01ysm8)",
        "get_neighbors(m.01ysm8,broadcast.content.producer)",
        "get_relations(#1)",
        "get_neighbors(#1,broadcast.producer.produces)",
        "intersection(#0,#2)",
        "count(#3)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "1"
        }
      ]
    },
    {
      "question": "what other rockets did the rocket manufacturer of energia and n1 create?",
      "qid": "4300129008000_grailqa",
      "source": "grailqa",
      "entities": {
        "Energia": "m.09dm5",
        "N1": "m.0346nk"
      },
      "s_expression": "(AND spaceflight.rocket (JOIN spaceflight.rocket.manufacturer (AND (JOIN (R spaceflight.rocket.manufacturer) m.09dm5) (JOIN spaceflight.rocket_manufacturer.rockets_manufactured m.0346nk))))",
      "actions": [
        "get_relations(m.09dm5)",
        "get_neighbors(m.09dm5,spaceflight.rocket.manufacturer)",
        "get_relations(m.0346nk)",
        "get_neighbors(m.0346nk,spaceflight.rocket.manufacturer)",
        "intersection(#0,#1)",
        "get_relations(#2)",
        "get_neighbors(#2,spaceflight.rocket_manufacturer.rockets_manufactured)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0407zvl",
          "entity_name": "Sputnik"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0187hy",
          "entity_name": "Soyuz"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0232bk",
          "entity_name": "Voskhod"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.0283h2_",
          "entity_name": "Polyot"
        },
        {
          "answer_type": "Entity",
          "answer_argument": "m.027f0v8",
          "entity_name": "Soyuz-2"
        }
      ]
    },
    {
      "question": "When did the team with the mascot named Poe with the Super Bowl?",
      "qid": "WebQTrn-2136_018dc0c070e53555fa37f63d4b83ca87_cwq",
      "source": "cwq",
      "entities": {
        "Super Bowl": "m.06x5s",
        "Poe": "m.052tmyg"
      },
      "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.052tmyg)) (JOIN sports.sports_championship_event.championship m.06x5s))",
      "actions": [
        "get_relations(m.052tmyg)",
        "get_neighbors(m.052tmyg,sports.mascot.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_relations(m.06x5s)",
        "get_neighbors(m.06x5s,sports.sports_championship.events)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.0642vqv",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XLVII"
        },
        {
          "answer_argument": "m.076yq",
          "answer_type": "Entity",
          "entity_name": "Super Bowl XXXV"
        }
      ]
    },
    {
      "question": "apr and the producer of wnyc's leonard lopate show produce what content?",
      "qid": "4300832003000_grailqa",
      "source": "grailqa",
      "entities": {
        "WNYC's Leonard Lopate Show": "m.03d7yxq",
        "apr": "m.01t0wb"
      },
      "s_expression": "(AND broadcast.content (AND (JOIN broadcast.content.producer (JOIN broadcast.producer.produces m.03d7yxq)) (JOIN broadcast.content.producer m.01t0wb)))",
      "actions": [
        "get_relations(m.03d7yxq)",
        "get_neighbors(m.03d7yxq,broadcast.content.producer)",
        "get_relations(#0)",
        "get_neighbors(#0,broadcast.producer.produces)",
        "get_relations(m.01t0wb)",
        "get_neighbors(m.01t0wb,broadcast.producer.produces)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0bfmz_",
          "entity_name": "Studio 360"
        }
      ]
    },
    {
      "question": "In which year did the basketball team whose head coach was Kevin McHale claim its initial NBA Championship?",
      "qid": "WebQTrn-1531_49842e208a5dd584154dd0a96881bc05_cwq",
      "source": "cwq",
      "entities": {
        "Kevin McHale": "m.04b87b"
      },
      "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN basketball.basketball_team.head_coach m.04b87b)) time.event.start_date)",
      "actions": [
        "get_relations(m.04b87b)",
        "get_neighbors(m.04b87b,basketball.basketball_coach.team)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.championships)",
        "get_attributes(#1)",
        "argmin(#1,time.event.start_date)"
      ],
      "answer": [
        {
          "answer_argument": "m.08x9cq",
          "answer_type": "Entity",
          "entity_name": "1994 NBA Finals"
        }
      ]
    },
    {
      "question": "what is the name of the quartet (composition) that was most recently performed?",
      "qid": "4303240012000_grailqa",
      "source": "grailqa",
      "entities": {
        "Quartet (composition)": "m.0b_stnz"
      },
      "s_expression": "(ARGMAX (AND music.composition (JOIN music.composition.form (JOIN music.compositional_form.superforms m.0b_stnz))) music.composition.date_of_first_performance)",
      "actions": [
        "get_relations(m.0b_stnz)",
        "get_neighbors(m.0b_stnz,music.compositional_form.subforms)",
        "get_relations(#0)",
        "get_neighbors(#0,music.compositional_form.compositions)",
        "get_attributes(#1)",
        "argmax(#1,music.composition.date_of_first_performance)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.0lt5v3v",
          "entity_name": "The Named Angels"
        }
      ]
    },
    {
      "question": "how many amusement park areas are there in hong kong disneyland and disneyland park parks?",
      "qid": "3206299003000_grailqa",
      "source": "grailqa",
      "entities": {
        "Disneyland Park": "m.04cj6k",
        "Hong Kong Disneyland": "m.022zvr"
      },
      "s_expression": "(COUNT (AND amusement_parks.amusement_park_area (AND (JOIN amusement_parks.amusement_park_area.parks m.04cj6k) (JOIN amusement_parks.amusement_park_area.parks m.022zvr))))",
      "actions": [
        "get_relations(m.04cj6k)",
        "get_neighbors(m.04cj6k,amusement_parks.park.areas)",
        "get_relations(m.022zvr)",
        "get_neighbors(m.022zvr,amusement_parks.park.areas)",
        "intersection(#0,#1)",
        "count(#2)"
      ],
      "answer": [
        {
          "answer_type": "Value",
          "answer_argument": "3"
        }
      ]
    },
    {
      "question": "The sports team owner Fred Hanser Stadium is where?",
      "qid": "WebQTrn-2444_78f882dc1f711bbf67aec90c079f9864_cwq",
      "source": "cwq",
      "entities": {
        "Fred Hanser": "m.0417nf3"
      },
      "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.professional_sports_team.owner_s m.0417nf3)) architecture.structure.opened)",
      "actions": [
        "get_relations(m.0417nf3)",
        "get_neighbors(m.0417nf3,sports.sports_team_owner.teams_owned)",
        "get_relations(#0)",
        "get_neighbors(#0,sports.sports_team.arena_stadium)",
        "get_attributes(#1)",
        "argmax(#1,architecture.structure.opened)"
      ],
      "answer": [
        {
          "answer_argument": "m.06k1v5"
        }
      ]
    },
    {
      "question": "What children's book, written by Suzanne Collins, would fall under the fantasy genre?",
      "qid": "WebQTrn-3364_bca6d9e41c575b801dee5bb27c94da6b_cwq",
      "source": "cwq",
      "entities": {
        "Suzanne Collins": "m.0bpd5z",
        "Children's literature": "m.0dwly",
        "Fantasy": "m.01hmnh"
      },
      "s_expression": "(AND (JOIN (R book.author.works_written) m.0bpd5z) (AND (JOIN book.book.genre m.0dwly) (JOIN book.book.genre m.01hmnh)))",
      "actions": [
        "get_relations(m.0bpd5z)",
        "get_neighbors(m.0bpd5z,book.author.works_written)",
        "get_relations(m.0dwly)",
        "get_neighbors(m.0dwly,media_common.literary_genre.books_in_this_genre)",
        "get_relations(m.01hmnh)",
        "get_neighbors(m.01hmnh,media_common.literary_genre.books_in_this_genre)",
        "intersection(#1,#2)",
        "intersection(#0,#3)"
      ],
      "answer": [
        {
          "answer_argument": "m.0dsx8l",
          "answer_type": "Entity",
          "entity_name": "Gregor and the Prophecy of Bane"
        }
      ]
    },
    {
      "question": "What did the person that said \"I tried to walk into Target, but I miss\" overdose on?",
      "qid": "WebQTrn-3557_17d59303a6ecd950e9bf643e8bdc03cb_cwq",
      "source": "cwq",
      "entities": {
        "Drug overdose": "m.01tf_6",
        "\"I tried to walk into Target, but I miss\"": "m.04dmnfg"
      },
      "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN people.person.quotations m.04dmnfg)) (JOIN medicine.disease.parent_disease m.01tf_6))",
      "actions": [
        "get_relations(m.04dmnfg)",
        "get_neighbors(m.04dmnfg,media_common.quotation.author)",
        "get_relations(#0)",
        "get_neighbors(#0,people.deceased_person.cause_of_death)",
        "get_relations(m.01tf_6)",
        "get_neighbors(m.01tf_6,medicine.disease.includes_diseases)",
        "intersection(#1,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.02kp1qn",
          "answer_type": "Entity",
          "entity_name": "Heroin overdose"
        }
      ]
    },
    {
      "question": "What person influenced by Jeff Bezos started Pixar?",
      "qid": "WebQTrn-248_6ee3bfab441c52883f7bde45cbcb4612_cwq",
      "source": "cwq",
      "entities": {
        "Pixar": "m.0kk9v",
        "Jeff Bezos": "m.011z69"
      },
      "s_expression": "(AND (JOIN (R organization.organization.founders) m.0kk9v) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.011z69)))",
      "actions": [
        "get_relations(m.0kk9v)",
        "get_neighbors(m.0kk9v,organization.organization.founders)",
        "get_relations(m.011z69)",
        "get_neighbors(m.011z69,influence.influence_node.influenced)",
        "get_relations(#1)",
        "get_neighbors(#1,influence.influence_node.influenced_by)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_argument": "m.06y3r",
          "answer_type": "Entity",
          "entity_name": "Steve Jobs"
        }
      ]
    },
    {
      "question": "what astronomical discovery is published and discovered in the observatory of planet pluto?",
      "qid": "4300765002000_grailqa",
      "source": "grailqa",
      "entities": {
        "Published": "m.03ywyv_",
        "planet pluto": "m.0c3qy"
      },
      "s_expression": "(AND astronomy.astronomical_discovery (AND (JOIN (R astronomy.astronomical_discovery_status.objects) m.03ywyv_) (JOIN astronomy.astronomical_discovery.discovery_site (JOIN (R astronomy.astronomical_discovery.discovery_site) m.0c3qy))))",
      "actions": [
        "get_relations(m.03ywyv_)",
        "get_neighbors(m.03ywyv_,astronomy.astronomical_discovery_status.objects)",
        "get_relations(m.0c3qy)",
        "get_neighbors(m.0c3qy,astronomy.astronomical_discovery.discovery_site)",
        "get_relations(#1)",
        "get_neighbors(#1,astronomy.astronomical_observatory.discoveries)",
        "intersection(#0,#2)"
      ],
      "answer": [
        {
          "answer_type": "Entity",
          "answer_argument": "m.070g26",
          "entity_name": "7166 Kennedy"
        }
      ]
    }
  ]